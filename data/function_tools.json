[
  {
    "name": "read_pdf_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["pdf", "file", "text extraction"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The path to the PDF file."
      }
    },
    "output": {
      "content": {
        "type": "str",
        "description": "The extracted text content from the PDF."
      }
    },
    "description": "Extracts all text content from a PDF file.",
    "keywords": ["pdf", "read", "extract", "file", "text"],
    "meta": {
      "usage_examples": ["Read the content of 'report.pdf'"],
      "related_tools": ["extract_text_tool", "extract_images_from_pdf_tool"]
    }
  },
  {
    "name": "extract_text_tool",
    "category": "File Operations",
    "version": "1.1",
    "author": "ToolmateAI",
    "tags": ["text extraction", "file operations", "ocr"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The path to the file (PDF, DOCX, TXT, etc.)."
      },
      "type": {
        "type": "str",
        "description": "Optional: The type of the file if known (e.g., 'pdf', 'docx'). Auto-detected if not provided."
      }
    },
    "output": {
      "content": {
        "type": "str",
        "description": "The extracted text content from the file."
      }
    },
    "description": "Extracts text from any file type (PDF, DOCX, TXT, etc.) by auto-detecting format.",
    "keywords": ["extract", "text", "file", "auto", "generic", "document"],
    "meta": {
      "usage_examples": ["Extract text from 'document.docx'"],
      "related_tools": ["read_pdf_tool", "parse_csv_tool"]
    }
  },
  {
    "name": "parse_csv_tool",
    "category": "Data Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["csv", "data parsing", "spreadsheet"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The path to the CSV file."
      }
    },
    "output": {
      "data": {
        "type": "list[dict]",
        "description": "A list of dictionaries, where each dictionary represents a row in the CSV."
      }
    },
    "description": "Parses a CSV file and returns a list of row dictionaries.",
    "keywords": ["csv", "parse", "spreadsheet", "table", "data", "file"],
    "meta": {
      "usage_examples": ["Parse 'data.csv' into a table"],
      "related_tools": ["filter_data_tool", "sort_by_field_tool"]
    }
  },
  {
    "name": "summarize_text_tool",
    "category": "Text Analysis",
    "version": "1.2",
    "author": "ToolmateAI",
    "tags": ["text summarization", "nlp", "content reduction"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text to be summarized."
      },
      "max_words": {
        "type": "int",
        "description": "The maximum number of words for the summary."
      },
      "key_points": {
        "type": "int",
        "description": "The number of key points to extract."
      }
    },
    "output": {
      "summary": {
        "type": "str",
        "description": "The generated summary of the text."
      },
      "key_points": {
        "type": "list[str]",
        "description": "A list of extracted key points."
      }
    },
    "description": "Summarizes long text into key points and can limit summary to a maximum number of words.",
    "keywords": ["summarize", "summary", "text", "shorten", "explain", "key points"],
    "meta": {
      "usage_examples": ["Summarize the article about AI in 100 words and provide 3 key points."],
      "related_tools": ["extract_keywords_tool", "generate_email_body_tool"]
    }
  },
  {
    "name": "send_email_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["email", "notification", "messaging"],
    "input": {
      "to": {
        "type": "str",
        "description": "The recipient's email address."
      },
      "subject": {
        "type": "str",
        "description": "The subject line of the email."
      },
      "content": {
        "type": "str",
        "description": "The body content of the email."
      },
      "attachments": {
        "type": "list[str]",
        "description": "Optional: A list of file paths for attachments."
      }
    },
    "output": {
      "status": {
        "type": "str",
        "description": "The status of the email sending operation (e.g., 'sent', 'failed')."
      }
    },
    "description": "Sends an email with optional attachments.",
    "keywords": ["send", "email", "mail", "message", "attachments"],
    "meta": {
      "usage_examples": ["Send an email to 'manager@example.com' with the subject 'Sales Report' and attach 'report.pdf'."],
      "related_tools": ["generate_email_body_tool", "send_sms_tool"]
    }
  },
  {
    "name": "extract_tables_tool",
    "category": "Data Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["table extraction", "data extraction", "spreadsheet"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The path to the document or spreadsheet file."
      }
    },
    "output": {
      "tables": {
        "type": "list[list[dict]]",
        "description": "A list of tables, where each table is a list of row dictionaries."
      }
    },
    "description": "Extracts all tables from a document or spreadsheet.",
    "keywords": ["table", "extract", "spreadsheet", "document", "data"],
    "meta": {
      "usage_examples": ["Get all tables from 'financial_report.xlsx'"],
      "related_tools": ["parse_csv_tool", "read_excel_file_tool"]
    }
  },
  {
    "name": "split_paragraphs_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text processing", "nlp", "paragraph splitting"],
    "input": {
      "text": {
        "type": "str",
        "description": "The block of text to be split."
      }
    },
    "output": {
      "paragraphs": {
        "type": "list[str]",
        "description": "A list of strings, where each string is a paragraph."
      }
    },
    "description": "Splits a block of text into paragraph units.",
    "keywords": ["split", "paragraph", "text", "divide", "sections"],
    "meta": {
      "usage_examples": ["Split the long article into individual paragraphs."],
      "related_tools": ["summarize_text_tool", "word_count_tool"]
    }
  },
  {
    "name": "remove_duplicates_tool",
    "category": "Data Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["data cleaning", "list processing", "deduplication"],
    "input": {
      "list_data": {
        "type": "list",
        "description": "The list of items to be deduplicated."
      }
    },
    "output": {
      "unique_list": {
        "type": "list",
        "description": "A list containing only the unique items from the input list."
      }
    },
    "description": "Deduplicates items in a list.",
    "keywords": ["remove", "duplicates", "unique", "list", "deduplicate"],
    "meta": {
      "usage_examples": ["Remove duplicate entries from the customer list."],
      "related_tools": ["filter_data_tool", "sort_by_field_tool"]
    }
  },
  {
    "name": "search_keyword_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text search", "keyword search", "nlp"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text to search within."
      },
      "keyword": {
        "type": "str",
        "description": "The keyword to search for."
      }
    },
    "output": {
      "matches": {
        "type": "list[int]",
        "description": "A list of positions/indexes where the keyword appears in the text."
      }
    },
    "description": "Returns positions/indexes where the keyword appears.",
    "keywords": ["search", "keyword", "find", "text", "match"],
    "meta": {
      "usage_examples": ["Find all occurrences of 'AI' in the document."],
      "related_tools": ["extract_keywords_tool", "replace_text_tool"]
    }
  },
  {
    "name": "merge_documents_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file merging", "document management", "pdf"],
    "input": {
      "files": {
        "type": "list[str]",
        "description": "A list of file paths for the documents to be merged."
      }
    },
    "output": {
      "merged_file": {
        "type": "str",
        "description": "The file path of the merged document."
      }
    },
    "description": "Merges multiple documents into one.",
    "keywords": ["merge", "combine", "documents", "files", "join"],
    "meta": {
      "usage_examples": ["Combine 'chapter1.pdf', 'chapter2.pdf', and 'chapter3.pdf' into a single book."],
      "related_tools": ["pdf_merge_tool", "zip_files_tool"]
    }
  },
  {
    "name": "generate_summary_pdf_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["pdf generation", "reporting", "summarization"],
    "input": {
      "text": {
        "type": "str",
        "description": "The summary content to be included in the PDF."
      }
    },
    "output": {
      "pdf_file": {
        "type": "str",
        "description": "The file path of the generated PDF summary."
      }
    },
    "description": "Creates a simple PDF from summary content.",
    "keywords": ["pdf", "generate", "summary", "create", "file"],
    "meta": {
      "usage_examples": ["Generate a PDF report from the summarized sales data."],
      "related_tools": ["summarize_text_tool", "send_email_tool"]
    }
  },
  {
    "name": "filter_data_tool",
    "category": "Data Processing",
    "version": "1.1",
    "author": "ToolmateAI",
    "tags": ["data filtering", "data cleaning", "conditional selection"],
    "input": {
      "data": {
        "type": "list[dict]",
        "description": "The list of dictionaries (rows) to be filtered."
      },
      "condition": {
        "type": "str",
        "description": "A string representing the logical condition for filtering (e.g., 'age > 30', \"category == 'electronics'\")."
      }
    },
    "output": {
      "filtered": {
        "type": "list[dict]",
        "description": "A list of dictionaries containing only the rows that meet the condition."
      }
    },
    "description": "Filters rows based on a logical condition.",
    "keywords": ["filter", "data", "condition", "select", "rows"],
    "meta": {
      "usage_examples": ["Filter the customer data to show only customers from 'California'."],
      "related_tools": ["parse_csv_tool", "sort_by_field_tool", "group_by_field_tool"]
    }
  },
  {
    "name": "group_by_field_tool",
    "category": "Data Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["data aggregation", "grouping", "data analysis"],
    "input": {
      "data": {
        "type": "list[dict]",
        "description": "The list of dictionaries (rows) to be grouped."
      },
      "field": {
        "type": "str",
        "description": "The field name to group the records by."
      }
    },
    "output": {
      "grouped": {
        "type": "dict",
        "description": "A dictionary where keys are the unique values of the grouping field and values are lists of corresponding records."
      }
    },
    "description": "Groups records by a specified key.",
    "keywords": ["group", "field", "key", "records", "aggregate"],
    "meta": {
      "usage_examples": ["Group sales data by 'product_category'."],
      "related_tools": ["aggregate_data_tool", "filter_data_tool"]
    }
  },
  {
    "name": "sort_by_field_tool",
    "category": "Data Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["data sorting", "ordering", "data analysis"],
    "input": {
      "data": {
        "type": "list[dict]",
        "description": "The list of dictionaries (rows) to be sorted."
      },
      "field": {
        "type": "str",
        "description": "The field name to sort the records by."
      },
      "order": {
        "type": "str",
        "description": "The sort order: 'ascending' or 'descending'."
      }
    },
    "output": {
      "sorted": {
        "type": "list[dict]",
        "description": "A new list of dictionaries sorted according to the specified field and order."
      }
    },
    "description": "Sorts rows ascending/descending by field.",
    "keywords": ["sort", "order", "field", "ascending", "descending"],
    "meta": {
      "usage_examples": ["Sort products by 'price' in 'descending' order."],
      "related_tools": ["filter_data_tool", "parse_csv_tool"]
    }
  },
  {
    "name": "aggregate_data_tool",
    "category": "Data Processing",
    "version": "1.1",
    "author": "ToolmateAI",
    "tags": ["data aggregation", "calculation", "data analysis", "sum", "average"],
    "input": {
      "data": {
        "type": "list[dict]",
        "description": "The list of dictionaries (rows) containing the data."
      },
      "operation": {
        "type": "str",
        "description": "The aggregation operation to perform (e.g., 'sum', 'avg', 'min', 'max', 'count')."
      },
      "field": {
        "type": "str",
        "description": "The field name on which to perform the aggregation."
      }
    },
    "output": {
      "result": {
        "type": "float",
        "description": "The result of the aggregation operation."
      }
    },
    "description": "Performs aggregation like sum, avg, min, max.",
    "keywords": ["aggregate", "sum", "average", "min", "max", "data"],
    "meta": {
      "usage_examples": ["Calculate the 'sum' of 'sales_amount' from the sales data.", "Find the 'average' 'age' of customers."],
      "related_tools": ["group_by_field_tool", "summarize_numeric_tool"]
    }
  },
  {
    "name": "normalize_values_tool",
    "category": "Data Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["data normalization", "scaling", "feature engineering"],
    "input": {
      "values": {
        "type": "list[float]",
        "description": "A list of numerical values to be normalized."
      }
    },
    "output": {
      "normalized": {
        "type": "list[float]",
        "description": "A list of values scaled between 0 and 1."
      }
    },
    "description": "Scales values between 0 and 1.",
    "keywords": ["normalize", "scale", "values", "range", "minmax"],
    "meta": {
      "usage_examples": ["Normalize the 'product_ratings' to a 0-1 scale."],
      "related_tools": ["detect_outliers_tool"]
    }
  },
  {
    "name": "calculate_percent_change_tool",
    "category": "Data Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["percentage calculation", "change analysis", "financial analysis"],
    "input": {
      "old": {
        "type": "float",
        "description": "The old (initial) value."
      },
      "new": {
        "type": "float",
        "description": "The new (current) value."
      }
    },
    "output": {
      "percent": {
        "type": "float",
        "description": "The percentage change from the old value to the new value."
      }
    },
    "description": "Calculates % change from old to new.",
    "keywords": ["percent", "change", "calculate", "difference", "growth"],
    "meta": {
      "usage_examples": ["Calculate the percentage change in stock price from $100 to $120."],
      "related_tools": ["summarize_numeric_tool"]
    }
  },
  {
    "name": "pivot_table_tool",
    "category": "Data Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["pivot table", "data summarization", "cross-tabulation"],
    "input": {
      "data": {
        "type": "list[dict]",
        "description": "The raw data as a list of dictionaries."
      }
    },
    "output": {
      "pivot": {
        "type": "list[dict]",
        "description": "The pivot table as a list of dictionaries."
      }
    },
    "description": "Creates a pivot table from raw data.",
    "keywords": ["pivot", "table", "data", "summarize", "cross-tab"],
    "meta": {
      "usage_examples": ["Create a pivot table showing total sales by region and product category."],
      "related_tools": ["group_by_field_tool", "aggregate_data_tool"]
    }
  },
  {
    "name": "detect_outliers_tool",
    "category": "Data Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["outlier detection", "anomaly detection", "statistical analysis"],
    "input": {
      "data": {
        "type": "list[float]",
        "description": "A list of numerical data points."
      }
    },
    "output": {
      "outliers": {
        "type": "list[float]",
        "description": "A list of values identified as statistical outliers."
      }
    },
    "description": "Returns a list of statistical outliers.",
    "keywords": ["outlier", "detect", "anomaly", "statistics", "data"],
    "meta": {
      "usage_examples": ["Detect outliers in the sensor readings data."],
      "related_tools": ["normalize_values_tool", "summarize_numeric_tool"]
    }
  },
  {
    "name": "summarize_numeric_tool",
    "category": "Data Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["statistical summary", "descriptive statistics", "data analysis"],
    "input": {
      "data": {
        "type": "list[float]",
        "description": "A list of numerical data points."
      }
    },
    "output": {
      "summary": {
        "type": "dict",
        "description": "A dictionary containing statistical measures like mean, median, mode, and standard deviation."
      }
    },
    "description": "Returns mean, median, mode, std-dev.",
    "keywords": ["summarize", "numeric", "mean", "median", "mode", "statistics"],
    "meta": {
      "usage_examples": ["Get a statistical summary (mean, median, std-dev) of the exam scores."],
      "related_tools": ["aggregate_data_tool", "detect_outliers_tool"]
    }
  },
  {
    "name": "top_n_values_tool",
    "category": "Data Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["data ranking", "top values", "sorting"],
    "input": {
      "data": {
        "type": "list[float]",
        "description": "A list of numerical values."
      },
      "n": {
        "type": "int",
        "description": "The number of top values to return."
      }
    },
    "output": {
      "top_values": {
        "type": "list",
        "description": "A list containing the top N values from the input list."
      }
    },
    "description": "Returns the top N values from a provided list of numbers. The list must be explicitly provided by the user or produced by a previous step.",
    "keywords": ["top", "values", "highest", "largest", "n"],
    "constraints": "Can only be used if a list of numbers is provided by the user or a previous tool. Do not use for unrelated or unsupported queries.",
    "meta": {
      "usage_examples": ["Get the top 5 highest scores from the list of exam results."],
      "related_tools": ["sort_by_field_tool", "summarize_numeric_tool"]
    }
  },
  {
    "name": "generate_email_body_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["email generation", "content creation", "communication automation"],
    "input": {
      "summary": {
        "type": "str",
        "description": "The summary or main content to be included in the email body."
      }
    },
    "output": {
      "email": {
        "type": "str",
        "description": "The generated formal email body content."
      }
    },
    "description": "Creates a formal email from a summary.",
    "keywords": ["generate", "email", "body", "compose", "summary"],
    "meta": {
      "usage_examples": ["Generate an email body based on the project update summary."],
      "related_tools": ["send_email_tool", "summarize_text_tool"]
    }
  },
  {
    "name": "translate_text_tool",
    "category": "Text Analysis",
    "version": "1.1",
    "author": "ToolmateAI",
    "tags": ["text translation", "nlp", "multilingual"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text to be translated."
      },
      "to_lang": {
        "type": "str",
        "description": "The target language code (e.g., 'es' for Spanish, 'fr' for French). Can be a list of language codes for multiple translations."
      }
    },
    "output": {
      "translated": {
        "type": "str",
        "description": "The translated text. If multiple languages were provided, this might be a dictionary or a specially formatted string."
      }
    },
    "description": "Translates text into a different language or multiple languages if a list is provided.",
    "keywords": ["translate", "language", "text", "convert", "foreign", "multi-language"],
    "meta": {
      "usage_examples": ["Translate the welcome message to Spanish and French.", "Translate 'Hello, World!' to 'de'."],
      "related_tools": ["detect_language_tool"]
    }
  },
  {
    "name": "format_sms_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["sms formatting", "messaging", "communication automation"],
    "input": {
      "alert": {
        "type": "str",
        "description": "The alert or main content for the SMS message."
      }
    },
    "output": {
      "sms_text": {
        "type": "str",
        "description": "The formatted short SMS message text."
      }
    },
    "description": "Formats a short SMS message.",
    "keywords": ["format", "sms", "message", "alert", "text"],
    "meta": {
      "usage_examples": ["Format an SMS alert for the system outage notification."],
      "related_tools": ["send_sms_tool"]
    }
  },
  {
    "name": "send_sms_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["sms sending", "notification", "messaging"],
    "input": {
      "to": {
        "type": "str",
        "description": "The recipient's phone number."
      },
      "content": {
        "type": "str",
        "description": "The content of the SMS message."
      }
    },
    "output": {
      "status": {
        "type": "str",
        "description": "The status of the SMS sending operation (e.g., 'sent', 'failed')."
      }
    },
    "description": "Sends an SMS message to a phone number.",
    "keywords": ["send", "sms", "text", "message", "phone"],
    "meta": {
      "usage_examples": ["Send an SMS to '+1234567890' with the appointment reminder."],
      "related_tools": ["format_sms_tool", "send_email_tool"]
    }
  },
  {
    "name": "extract_emails_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["email extraction", "text processing", "data extraction"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text to extract email addresses from."
      }
    },
    "output": {
      "emails": {
        "type": "list[str]",
        "description": "A list of email addresses found in the text."
      }
    },
    "description": "Extracts email addresses from text.",
    "keywords": ["extract", "email", "find", "text", "address"],
    "meta": {
      "usage_examples": ["Extract all email addresses from the contact list document."],
      "related_tools": ["validate_email_tool", "extract_phone_numbers_tool"]
    }
  },
  {
    "name": "validate_email_tool",
    "category": "Data Validation",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["email validation", "data cleaning", "syntax check"],
    "input": {
      "email": {
        "type": "str",
        "description": "The email address to validate."
      }
    },
    "output": {
      "is_valid": {
        "type": "bool",
        "description": "True if the email address is syntactically valid, False otherwise."
      }
    },
    "description": "Checks if an email is valid syntactically.",
    "keywords": ["validate", "email", "check", "syntax", "address"],
    "meta": {
      "usage_examples": ["Check if 'test@example.com' is a valid email format."],
      "related_tools": ["extract_emails_tool", "validate_phone_tool"]
    }
  },
  {
    "name": "compose_newsletter_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["newsletter generation", "content creation", "email marketing"],
    "input": {
      "updates": {
        "type": "list[str]",
        "description": "A list of updates or news items to include in the newsletter."
      }
    },
    "output": {
      "newsletter": {
        "type": "str",
        "description": "The generated newsletter content in markdown or HTML format."
      }
    },
    "description": "Creates a markdown/email newsletter.",
    "keywords": ["compose", "newsletter", "email", "markdown", "update"],
    "meta": {
      "usage_examples": ["Compose a weekly newsletter from the list of blog post titles and summaries."],
      "related_tools": ["send_email_tool", "generate_email_body_tool"]
    }
  },
  {
    "name": "generate_invite_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["invitation generation", "event management", "communication automation"],
    "input": {
      "event": {
        "type": "str",
        "description": "The name or title of the event."
      },
      "date": {
        "type": "str",
        "description": "The date of the event."
      }
    },
    "output": {
      "invite_msg": {
        "type": "str",
        "description": "The generated formal event invitation text."
      }
    },
    "description": "Returns a formal event invite text.",
    "keywords": ["generate", "invite", "event", "message", "date"],
    "meta": {
      "usage_examples": ["Generate an invitation for the 'Annual Company Picnic' on '2024-08-15'."],
      "related_tools": ["send_email_tool", "create_calendar_event_tool"]
    }
  },
  {
    "name": "summarize_meeting_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["meeting summarization", "nlp", "transcript analysis"],
    "input": {
      "transcript": {
        "type": "str",
        "description": "The transcript of the meeting."
      }
    },
    "output": {
      "summary": {
        "type": "str",
        "description": "A concise summary of the meeting transcript."
      }
    },
    "description": "Summarizes a meeting transcript.",
    "keywords": ["summarize", "meeting", "transcript", "minutes", "notes"],
    "meta": {
      "usage_examples": ["Summarize the transcript of the 'Q3 Planning Meeting'."],
      "related_tools": ["summarize_text_tool", "meeting_minutes_tool"]
    }
  },
  {
    "name": "get_invoices_tool",
    "category": "Finance",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["invoice management", "billing", "financial data"],
    "input": {
      "month": {
        "type": "str",
        "description": "The month for which to retrieve invoice records (e.g., '2024-07')."
      }
    },
    "output": {
      "invoices": {
        "type": "list[dict]",
        "description": "A list of invoice records for the specified month."
      }
    },
    "description": "Returns all invoice records for a given month.",
    "keywords": ["get", "invoices", "month", "records", "billing"],
    "meta": {
      "usage_examples": ["Get all invoices for July 2024."],
      "related_tools": ["calculate_invoice_total_tool", "generate_invoice_tool"]
    }
  },
  {
    "name": "calculate_invoice_total_tool",
    "category": "Finance",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["invoice calculation", "billing", "financial calculation"],
    "input": {
      "invoices": {
        "type": "list[dict]",
        "description": "A list of invoice records, where each record is a dictionary typically containing an 'amount' field."
      }
    },
    "output": {
      "total": {
        "type": "float",
        "description": "The total sum of amounts across all provided invoices."
      }
    },
    "description": "Adds up the total amount across invoices.",
    "keywords": ["calculate", "invoice", "total", "sum", "amount", "billing"],
    "meta": {
      "usage_examples": ["Calculate the total amount for the retrieved list of invoices."],
      "related_tools": ["get_invoices_tool", "aggregate_data_tool"]
    }
  },
  {
    "name": "generate_invoice_tool",
    "category": "Finance",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["invoice generation", "pdf creation", "billing document"],
    "input": {
      "client": {
        "type": "str",
        "description": "The name of the client for whom the invoice is being generated."
      },
      "items": {
        "type": "list[dict]",
        "description": "A list of items, where each item is a dictionary with details like 'description', 'quantity', and 'price'."
      }
    },
    "output": {
      "invoice_pdf": {
        "type": "str",
        "description": "The file path of the generated PDF invoice."
      }
    },
    "description": "Creates a PDF invoice.",
    "keywords": ["generate", "invoice", "pdf", "client", "create"],
    "meta": {
      "usage_examples": ["Generate a PDF invoice for 'Client X' with items: [{'description': 'Service A', 'quantity': 2, 'price': 50}]."],
      "related_tools": ["send_email_tool", "get_invoices_tool"]
    }
  },
  {
    "name": "track_expenses_tool",
    "category": "Finance",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["expense tracking", "financial management", "spending analysis"],
    "input": {
      "transactions": {
        "type": "list[dict]",
        "description": "A list of transaction records, where each record includes details like 'date', 'category', and 'amount'."
      }
    },
    "output": {
      "summary": {
        "type": "dict",
        "description": "A summary of monthly spending, possibly categorized."
      }
    },
    "description": "Summarizes monthly spending.",
    "keywords": ["track", "expenses", "spending", "transactions", "summary"],
    "meta": {
      "usage_examples": ["Track and summarize expenses from the provided list of transactions."],
      "related_tools": ["budget_analysis_tool", "summarize_numeric_tool"]
    }
  },
  {
    "name": "budget_analysis_tool",
    "category": "Finance",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["budget analysis", "financial planning", "expense comparison"],
    "input": {
      "budget": {
        "type": "float",
        "description": "The total budget amount."
      },
      "expenses": {
        "type": "list[float]",
        "description": "A list of expense amounts."
      }
    },
    "output": {
      "analysis": {
        "type": "dict",
        "description": "An analysis comparing total spending to the budget, possibly including variance."
      }
    },
    "description": "Compares spending to budget.",
    "keywords": ["budget", "analysis", "compare", "spending", "expenses"],
    "meta": {
      "usage_examples": ["Analyze spending of [100, 50, 75] against a budget of $200."],
      "related_tools": ["track_expenses_tool", "calculate_percent_change_tool"]
    }
  },
  {
    "name": "convert_currency_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["currency conversion", "finance", "exchange rate"],
    "input": {
      "amount": {
        "type": "float",
        "description": "The amount of money to convert."
      },
      "to": {
        "type": "str",
        "description": "The target currency code (e.g., 'USD', 'EUR', 'JPY')."
      }
    },
    "output": {
      "converted": {
        "type": "float",
        "description": "The converted amount in the target currency."
      }
    },
    "description": "Converts currency using exchange rates.",
    "keywords": ["convert", "currency", "exchange", "amount", "money"],
    "meta": {
      "usage_examples": ["Convert 100 EUR to USD."],
      "related_tools": ["fetch_stock_price_tool"]
    }
  },
  {
    "name": "forecast_sales_tool",
    "category": "Data Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["sales forecasting", "predictive analysis", "time series"],
    "input": {
      "past_data": {
        "type": "list[float]",
        "description": "A list of past sales data points, ordered chronologically."
      }
    },
    "output": {
      "forecast": {
        "type": "float",
        "description": "The predicted next value in the sales trend."
      }
    },
    "description": "Predicts next value using trend.",
    "keywords": ["forecast", "sales", "predict", "trend", "future"],
    "meta": {
      "usage_examples": ["Forecast next month's sales based on the past 12 months of data."],
      "related_tools": ["analyze_trend_tool", "summarize_numeric_tool"]
    }
  },
  {
    "name": "generate_receipt_tool",
    "category": "Finance",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["receipt generation", "text generation", "transaction record"],
    "input": {
      "purchase_info": {
        "type": "dict",
        "description": "A dictionary containing purchase information like items, prices, and total amount."
      }
    },
    "output": {
      "receipt": {
        "type": "str",
        "description": "The generated receipt text."
      }
    },
    "description": "Creates a receipt text.",
    "keywords": ["generate", "receipt", "purchase", "text", "create"],
    "meta": {
      "usage_examples": ["Generate a receipt for a purchase with items: {'item1': 10, 'item2': 20}, total: 30."],
      "related_tools": ["generate_invoice_tool", "send_email_tool"]
    }
  },
  {
    "name": "summarize_orders_tool",
    "category": "Data Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["order summarization", "data aggregation", "sales analysis"],
    "input": {
      "orders": {
        "type": "list[dict]",
        "description": "A list of order records, where each record is a dictionary with details like 'product_id', 'category', 'quantity', 'price'."
      }
    },
    "output": {
      "summary": {
        "type": "dict",
        "description": "A summary of orders, possibly by type or product, including counts or total amounts."
      }
    },
    "description": "Summarizes orders by type or product.",
    "keywords": ["summarize", "orders", "product", "type", "summary"],
    "meta": {
      "usage_examples": ["Summarize all orders by 'product_category' and calculate total sales for each."],
      "related_tools": ["group_by_field_tool", "aggregate_data_tool"]
    }
  },
  {
    "name": "validate_transaction_tool",
    "category": "Data Validation",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["transaction validation", "data integrity", "financial audit"],
    "input": {
      "transaction": {
        "type": "dict",
        "description": "A dictionary representing a transaction record, with fields like 'id', 'amount', 'date', 'status'."
      }
    },
    "output": {
      "is_valid": {
        "type": "bool",
        "description": "True if the transaction record is valid according to predefined rules, False otherwise."
      }
    },
    "description": "Verifies a transaction record.",
    "keywords": ["validate", "transaction", "verify", "record", "check"],
    "meta": {
      "usage_examples": ["Validate the transaction record with ID 'T123' to ensure all required fields are present and amounts are positive."],
      "related_tools": ["validate_email_tool", "checksum_tool"]
    }
  },
  {
    "name": "fetch_website_text_tool",
    "category": "Web Scraping",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["web scraping", "content extraction", "data collection"],
    "input": {
      "url": {
        "type": "str",
        "description": "The URL of the webpage to scrape."
      }
    },
    "output": {
      "text": {
        "type": "str",
        "description": "The main text content extracted from the webpage."
      }
    },
    "description": "Scrapes main text content from a webpage.",
    "keywords": ["fetch", "website", "text", "scrape", "webpage"],
    "meta": {
      "usage_examples": ["Fetch the text content from 'https://example.com/article'."],
      "related_tools": ["parse_html_tool", "summarize_webpage_tool"]
    }
  },
  {
    "name": "get_weather_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["weather forecast", "location based service", "api integration"],
    "input": {
      "city": {
        "type": "str",
        "description": "The name of the city for which to get the weather forecast."
      }
    },
    "output": {
      "weather": {
        "type": "dict",
        "description": "A dictionary containing weather information (e.g., temperature, condition, humidity)."
      }
    },
    "description": "Gets the current weather for a city.",
    "keywords": ["get", "weather", "city", "forecast"],
    "meta": {
      "usage_examples": ["Get the current weather for 'London'."],
      "related_tools": ["suggest_activity_tool", "ip_lookup_tool"]
    }
  },
  {
    "name": "check_server_status_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["server monitoring", "network utility", "uptime check"],
    "input": {
      "url": {
        "type": "str",
        "description": "The URL of the server or website to check."
      }
    },
    "output": {
      "status": {
        "type": "str",
        "description": "The status of the server (e.g., 'Online', 'Offline', 'Error')."
      }
    },
    "description": "Pings a URL and returns status.",
    "keywords": ["server", "status", "ping", "uptime", "health check"],
    "meta": {
      "usage_examples": ["Check the server status of 'https://api.example.com'."],
      "related_tools": ["network_ping_tool", "port_scan_tool"]
    }
  },
  {
    "name": "fetch_stock_price_tool",
    "category": "Finance",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["stock market", "financial data", "api integration"],
    "input": {
      "symbol": {
        "type": "str",
        "description": "The stock symbol (e.g., 'AAPL', 'GOOGL')."
      }
    },
    "output": {
      "price": {
        "type": "float",
        "description": "The latest stock price for the given symbol."
      }
    },
    "description": "Gets the latest stock price.",
    "keywords": ["stock", "price", "finance", "market", "symbol"],
    "meta": {
      "usage_examples": ["Fetch the current stock price for 'MSFT'."],
      "related_tools": ["get_stock_data_tool", "convert_currency_tool"]
    }
  },
  {
    "name": "parse_html_tool",
    "category": "Web Scraping",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["html parsing", "content extraction", "text cleaning"],
    "input": {
      "html": {
        "type": "str",
        "description": "The HTML content as a string."
      }
    },
    "output": {
      "plain_text": {
        "type": "str",
        "description": "The raw text content with HTML tags removed."
      }
    },
    "description": "Removes tags, returns raw text.",
    "keywords": ["parse", "html", "text", "remove tags", "clean"],
    "meta": {
      "usage_examples": ["Parse the HTML content of a webpage to extract only the text."],
      "related_tools": ["fetch_website_text_tool", "extract_html_links_tool"]
    }
  },
  {
    "name": "shorten_url_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url shortener", "link management", "web utility"],
    "input": {
      "url": {
        "type": "str",
        "description": "The long URL to be shortened."
      }
    },
    "output": {
      "short_url": {
        "type": "str",
        "description": "The shortened URL."
      }
    },
    "description": "Creates a shortened URL.",
    "keywords": ["shorten", "url", "link", "tinyurl", "bitly"],
    "meta": {
      "usage_examples": ["Shorten the URL 'https://verylongurl.com/with/many/segments'."],
      "related_tools": ["validate_url_tool", "extract_domain_tool"]
    }
  },
  {
    "name": "generate_qr_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["qr code generation", "image generation", "data encoding"],
    "input": {
      "data": {
        "type": "str",
        "description": "The data to be encoded in the QR code (e.g., URL, text)."
      }
    },
    "output": {
      "qr_img": {
        "type": "str",
        "description": "The file path of the generated QR code image."
      }
    },
    "description": "Returns a QR code image path.",
    "keywords": ["qr", "code", "generate", "image", "barcode"],
    "meta": {
      "usage_examples": ["Generate a QR code for the website 'https://toolmate.ai'."],
      "related_tools": ["read_barcode_tool", "generate_qr_batch_tool"]
    }
  },
  {
    "name": "ip_lookup_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["ip geolocation", "network utility", "location service"],
    "input": {
      "ip": {
        "type": "str",
        "description": "The IP address to look up."
      }
    },
    "output": {
      "location": {
        "type": "dict",
        "description": "A dictionary containing geolocation information (e.g., city, country, region) for the IP address."
      }
    },
    "description": "Gets geolocation from IP.",
    "keywords": ["ip", "lookup", "geolocation", "address", "network"],
    "meta": {
      "usage_examples": ["Find the geolocation of the IP address '8.8.8.8'."],
      "related_tools": ["dns_lookup_tool"]
    }
  },
  {
    "name": "search_google_tool",
    "category": "Web Search",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["google search", "information retrieval", "web query"],
    "input": {
      "query": {
        "type": "str",
        "description": "The search query string."
      }
    },
    "output": {
      "results": {
        "type": "list[str]",
        "description": "A list of titles of the top search results."
      }
    },
    "description": "Returns top search result titles.",
    "keywords": ["search", "google", "find", "query", "web"],
    "meta": {
      "usage_examples": ["Search Google for 'latest AI advancements'."],
      "related_tools": ["get_news_headlines_tool", "arxiv_search_tool"]
    }
  },
  {
    "name": "get_news_headlines_tool",
    "category": "Web Search",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["news headlines", "information retrieval", "current events"],
    "input": {
      "topic": {
        "type": "str",
        "description": "The topic for which to fetch news headlines (e.g., 'technology', 'finance')."
      }
    },
    "output": {
      "headlines": {
        "type": "list[str]",
        "description": "A list of recent news headlines related to the topic."
      }
    },
    "description": "Fetches recent news headlines.",
    "keywords": ["news", "headlines", "fetch", "topic", "current events"],
    "meta": {
      "usage_examples": ["Get the latest news headlines for 'artificial intelligence'."],
      "related_tools": ["search_google_tool", "summarize_webpage_tool"]
    }
  },
  {
    "name": "generate_answer_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["question answering", "nlp", "knowledge retrieval"],
    "input": {
      "question": {
        "type": "str",
        "description": "The question to be answered."
      }
    },
    "output": {
      "answer": {
        "type": "str",
        "description": "The answer generated by a QA model."
      }
    },
    "description": "Returns an answer using a QA model.",
    "keywords": ["generate", "answer", "question", "QA", "nlp"],
    "meta": {
      "usage_examples": ["What is the capital of France?"],
      "related_tools": ["search_google_tool", "summarize_text_tool"]
    }
  },
  {
    "name": "extract_entities_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["named entity recognition", "ner", "nlp", "text analysis"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text from which to extract entities."
      }
    },
    "output": {
      "entities": {
        "type": "list[str]",
        "description": "A list of named entities (e.g., persons, organizations, locations) found in the text."
      }
    },
    "description": "Performs named entity recognition.",
    "keywords": ["extract", "entities", "ner", "nlp", "text"],
    "meta": {
      "usage_examples": ["Extract all named entities from the news article about Google's latest project."],
      "related_tools": ["classify_text_tool", "extract_keywords_tool"]
    }
  },
  {
    "name": "classify_text_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text classification", "nlp", "topic modeling", "sentiment analysis"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text to be classified."
      }
    },
    "output": {
      "label": {
        "type": "str",
        "description": "The category or label assigned to the text (e.g., 'sports', 'technology', 'positive', 'negative')."
      }
    },
    "description": "Categorizes text by topic.",
    "keywords": ["classify", "text", "topic", "category", "nlp", "sentiment"],
    "meta": {
      "usage_examples": ["Classify the customer review as 'positive', 'negative', or 'neutral'."],
      "related_tools": ["extract_entities_tool", "summarize_text_tool"]
    }
  },
  {
    "name": "compare_text_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text similarity", "nlp", "document comparison", "cosine similarity"],
    "input": {
      "a": {
        "type": "str",
        "description": "The first text string."
      },
      "b": {
        "type": "str",
        "description": "The second text string."
      }
    },
    "output": {
      "similarity": {
        "type": "float",
        "description": "A numerical score (e.g., cosine similarity) indicating the similarity between the two texts."
      }
    },
    "description": "Returns a cosine/text similarity score.",
    "keywords": ["compare", "text", "similarity", "nlp", "cosine"],
    "meta": {
      "usage_examples": ["Compare the similarity between document A and document B."],
      "related_tools": ["diff_tool", "plagiarism_checker_tool"]
    }
  },
  {
    "name": "generate_prompt_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["prompt engineering", "llm", "text generation"],
    "input": {
      "task": {
        "type": "str",
        "description": "A short description of the task for which to generate a prompt."
      }
    },
    "output": {
      "prompt": {
        "type": "str",
        "description": "A detailed and effective prompt crafted for the specified task."
      }
    },
    "description": "Crafts a detailed prompt from a short task.",
    "keywords": ["generate", "prompt", "llm", "task", "nlp"],
    "meta": {
      "usage_examples": ["Generate a detailed prompt for an LLM to write a blog post about climate change."],
      "related_tools": ["generate_answer_tool", "summarize_text_tool"]
    }
  },
  {
    "name": "summarize_code_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["code analysis", "nlp", "developer tool", "code documentation"],
    "input": {
      "code": {
        "type": "str",
        "description": "The source code to be summarized."
      }
    },
    "output": {
      "summary": {
        "type": "str",
        "description": "A natural language explanation of what the code does."
      }
    },
    "description": "Explains what the code does.",
    "keywords": ["summarize", "code", "explain", "nlp", "developer"],
    "meta": {
      "usage_examples": ["Summarize the provided Python script that performs data analysis."],
      "related_tools": ["code_formatter_tool", "syntax_highlighter_tool"]
    }
  },
  {
    "name": "generate_slug_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["slug generation", "url optimization", "text utility"],
    "input": {
      "title": {
        "type": "str",
        "description": "The title or string to convert into a slug."
      }
    },
    "output": {
      "slug": {
        "type": "str",
        "description": "The URL-safe slug."
      }
    },
    "description": "Converts a title into a URL-safe slug.",
    "keywords": ["generate", "slug", "url", "seo", "link"],
    "meta": {
      "usage_examples": ["Generate a slug for the blog post title 'My Awesome Article!'."],
      "related_tools": ["slugify_text_tool", "sanitize_filename_tool"]
    }
  },
  {
    "name": "detect_language_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["language detection", "nlp", "text analysis", "multilingual"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text for which to detect the language."
      }
    },
    "output": {
      "lang_code": {
        "type": "str",
        "description": "The detected language code (e.g., 'en', 'es', 'fr')."
      }
    },
    "description": "Identifies the language of a text.",
    "keywords": ["detect", "language", "nlp", "text", "identify"],
    "meta": {
      "usage_examples": ["Detect the language of the text 'Bonjour le monde'."],
      "related_tools": ["translate_text_tool"]
    }
  },
  {
    "name": "random_password_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["password generation", "security", "randomizer"],
    "input": {
      "length": {
        "type": "int",
        "description": "The desired length of the password."
      }
    },
    "output": {
      "password": {
        "type": "str",
        "description": "The generated secure random password."
      }
    },
    "description": "Returns a secure password.",
    "keywords": ["random", "password", "generate", "secure", "security"],
    "meta": {
      "usage_examples": ["Generate a random password of length 16."],
      "related_tools": ["password_strength_tool", "generate_uuid_tool"]
    }
  },
  {
    "name": "get_datetime_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["date time", "timezone", "time utility"],
    "input": {
      "timezone": {
        "type": "str",
        "description": "Optional: The timezone for which to get the current date and time (e.g., 'UTC', 'America/New_York'). Defaults to system timezone if not provided."
      }
    },
    "output": {
      "timestamp": {
        "type": "str",
        "description": "The current date and time as a formatted string, including timezone information."
      }
    },
    "description": "Returns the current time in that timezone.",
    "keywords": ["get", "datetime", "time", "date", "timezone", "now"],
    "meta": {
      "usage_examples": ["Get the current date and time in 'Europe/London'.", "Get the current UTC time."],
      "related_tools": ["format_date_tool", "timezone_convert_tool"]
    }
  },
  {
    "name": "encode_base64_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["encoding", "base64", "data conversion"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string to be encoded."
      }
    },
    "output": {
      "encoded": {
        "type": "str",
        "description": "The Base64 encoded string."
      }
    },
    "description": "Encodes text to Base64 format.",
    "keywords": ["encode", "base64", "text", "convert", "format"],
    "meta": {
      "usage_examples": ["Encode the string 'Hello World' to Base64."],
      "related_tools": ["decode_base64_tool", "hash_text_tool"]
    }
  },
  {
    "name": "decode_base64_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["decoding", "base64", "data conversion"],
    "input": {
      "encoded": {
        "type": "str",
        "description": "The Base64 encoded string to be decoded."
      }
    },
    "output": {
      "text": {
        "type": "str",
        "description": "The original decoded text string."
      }
    },
    "description": "Decodes Base64 text to original format.",
    "keywords": ["decode", "base64", "text", "convert", "format"],
    "meta": {
      "usage_examples": ["Decode the Base64 string 'SGVsbG8gV29ybGQ='."],
      "related_tools": ["encode_base64_tool"]
    }
  },
  {
    "name": "hash_text_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["hashing", "security", "data integrity", "md5", "sha256"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string to be hashed."
      },
      "algorithm": {
        "type": "str",
        "description": "The hashing algorithm to use (e.g., 'md5', 'sha256', 'sha512')."
      }
    },
    "output": {
      "hash": {
        "type": "str",
        "description": "The generated hash string."
      }
    },
    "description": "Generates hash using MD5, SHA256, etc.",
    "keywords": ["hash", "text", "md5", "sha256", "encrypt"],
    "meta": {
      "usage_examples": ["Generate an MD5 hash for the string 'password123'.", "Calculate the SHA256 hash of a document's content for integrity check."],
      "related_tools": ["checksum_tool", "encode_base64_tool"]
    }
  },
  {
    "name": "generate_uuid_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["uuid", "unique identifier", "id generation"],
    "input": {},
    "output": {
      "uuid": {
        "type": "str",
        "description": "A universally unique identifier string."
      }
    },
    "description": "Creates a unique identifier string.",
    "keywords": ["generate", "uuid", "unique", "identifier", "id"],
    "meta": {
      "usage_examples": ["Generate a new UUID for a database record."],
      "related_tools": ["generate_uuid_batch_tool", "random_password_tool"]
    }
  },
  {
    "name": "calculate_distance_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["geolocation", "distance calculation", "gps"],
    "input": {
      "lat1": {
        "type": "float",
        "description": "Latitude of the first point."
      },
      "lon1": {
        "type": "float",
        "description": "Longitude of the first point."
      },
      "lat2": {
        "type": "float",
        "description": "Latitude of the second point."
      },
      "lon2": {
        "type": "float",
        "description": "Longitude of the second point."
      }
    },
    "output": {
      "distance": {
        "type": "float",
        "description": "The calculated distance between the two coordinates (typically in kilometers or miles, specify units if possible)."
      }
    },
    "description": "Calculates distance between two coordinates.",
    "keywords": ["calculate", "distance", "coordinates", "location", "gps"],
    "meta": {
      "usage_examples": ["Calculate the distance between New York (40.7128, -74.0060) and London (51.5074, -0.1278)."],
      "related_tools": ["ip_lookup_tool"]
    }
  },
  {
    "name": "compress_text_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text compression", "data compression", "gzip"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string to be compressed."
      }
    },
    "output": {
      "compressed": {
        "type": "str",
        "description": "The compressed text string (often Base64 encoded if binary)."
      }
    },
    "description": "Compresses text using gzip or similar.",
    "keywords": ["compress", "text", "gzip", "reduce", "size"],
    "meta": {
      "usage_examples": ["Compress a long log file content before saving."],
      "related_tools": ["decompress_text_tool", "zip_files_tool"]
    }
  },
  {
    "name": "decompress_text_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text decompression", "data decompression", "gzip"],
    "input": {
      "compressed": {
        "type": "str",
        "description": "The compressed text string (often Base64 encoded if binary)."
      }
    },
    "output": {
      "text": {
        "type": "str",
        "description": "The original decompressed text string."
      }
    },
    "description": "Decompresses previously compressed text.",
    "keywords": ["decompress", "text", "gzip", "expand", "restore"],
    "meta": {
      "usage_examples": ["Decompress the content of a compressed log file."],
      "related_tools": ["compress_text_tool", "unzip_files_tool"]
    }
  },
  {
    "name": "validate_url_tool",
    "category": "Data Validation",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url validation", "web utility", "format check"],
    "input": {
      "url": {
        "type": "str",
        "description": "The URL string to validate."
      }
    },
    "output": {
      "is_valid": {
        "type": "bool",
        "description": "True if the URL is properly formatted, False otherwise."
      }
    },
    "description": "Checks if a URL is properly formatted.",
    "keywords": ["validate", "url", "check", "format", "web"],
    "meta": {
      "usage_examples": ["Validate if 'https://toolmate.ai' is a correctly formatted URL."],
      "related_tools": ["shorten_url_tool", "extract_domain_tool"]
    }
  },
  {
    "name": "extract_domain_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url parsing", "domain extraction", "web utility"],
    "input": {
      "url": {
        "type": "str",
        "description": "The URL string from which to extract the domain."
      }
    },
    "output": {
      "domain": {
        "type": "str",
        "description": "The extracted domain name (e.g., 'example.com')."
      }
    },
    "description": "Extracts domain name from a URL.",
    "keywords": ["extract", "domain", "url", "parse", "web"],
    "meta": {
      "usage_examples": ["Extract the domain from 'https://www.example.com/path/page.html'."],
      "related_tools": ["validate_url_tool", "extract_weblink_domains_tool"]
    }
  },
  {
    "name": "format_phone_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["phone number formatting", "data cleaning", "localization"],
    "input": {
      "phone": {
        "type": "str",
        "description": "The phone number string to format."
      },
      "country": {
        "type": "str",
        "description": "The country code (e.g., 'US', 'GB') for region-specific formatting."
      }
    },
    "output": {
      "formatted": {
        "type": "str",
        "description": "The phone number formatted according to the specified country's conventions."
      }
    },
    "description": "Formats phone number for a country.",
    "keywords": ["format", "phone", "number", "country", "validate"],
    "meta": {
      "usage_examples": ["Format the phone number '1234567890' for the 'US' country code."],
      "related_tools": ["validate_phone_tool", "extract_phone_numbers_tool"]
    }
  },
  {
    "name": "validate_credit_card_tool",
    "category": "Data Validation",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["credit card validation", "luhn algorithm", "payment processing"],
    "input": {
      "number": {
        "type": "str",
        "description": "The credit card number string to validate."
      }
    },
    "output": {
      "is_valid": {
        "type": "bool",
        "description": "True if the credit card number is valid according to the Luhn algorithm, False otherwise."
      }
    },
    "description": "Validates credit card using Luhn algorithm.",
    "keywords": ["validate", "credit", "card", "luhn", "payment"],
    "meta": {
      "usage_examples": ["Validate the credit card number '49927398716'."],
      "related_tools": ["validate_email_tool"]
    }
  },
  {
    "name": "calculate_age_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["age calculation", "date utility", "demographics"],
    "input": {
      "birth_date": {
        "type": "str",
        "description": "The birth date string (e.g., 'YYYY-MM-DD')."
      }
    },
    "output": {
      "age": {
        "type": "int",
        "description": "The calculated age in years."
      }
    },
    "description": "Calculates age from birth date.",
    "keywords": ["calculate", "age", "birth", "date", "years"],
    "meta": {
      "usage_examples": ["Calculate the age of someone born on '1990-05-15'."],
      "related_tools": ["format_date_tool", "days_between_tool"]
    }
  },
  {
    "name": "format_date_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["date formatting", "time utility", "string conversion"],
    "input": {
      "date": {
        "type": "str",
        "description": "The date string to format (e.g., '2024-07-21', '07/21/2024')."
      },
      "format": {
        "type": "str",
        "description": "The desired output format string (e.g., '%Y-%m-%d', '%d/%m/%Y %H:%M:%S')."
      }
    },
    "output": {
      "formatted": {
        "type": "str",
        "description": "The date string formatted according to the specified format."
      }
    },
    "description": "Formats date string to specified format.",
    "keywords": ["format", "date", "time", "convert", "string"],
    "meta": {
      "usage_examples": ["Format the date '2024/07/21' to 'July 21, 2024'.", "Convert '21-07-2024' to '2024-07-21'."],
      "related_tools": ["get_datetime_tool", "add_days_tool"]
    }
  },
  {
    "name": "add_days_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["date calculation", "time utility", "scheduling"],
    "input": {
      "date": {
        "type": "str",
        "description": "The starting date string (e.g., 'YYYY-MM-DD')."
      },
      "days": {
        "type": "int",
        "description": "The number of days to add (positive integer) or subtract (negative integer)."
      }
    },
    "output": {
      "new_date": {
        "type": "str",
        "description": "The new date string after adding/subtracting the specified number of days."
      }
    },
    "description": "Adds or subtracts days from a date.",
    "keywords": ["add", "days", "date", "calculate", "time"],
    "meta": {
      "usage_examples": ["Add 7 days to '2024-07-21'.", "Subtract 30 days from '2024-08-15'."],
      "related_tools": ["days_between_tool", "next_business_day_tool"]
    }
  },
  {
    "name": "days_between_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["date calculation", "time utility", "duration calculation"],
    "input": {
      "date1": {
        "type": "str",
        "description": "The first date string (e.g., 'YYYY-MM-DD')."
      },
      "date2": {
        "type": "str",
        "description": "The second date string (e.g., 'YYYY-MM-DD')."
      }
    },
    "output": {
      "days": {
        "type": "int",
        "description": "The number of days between the two dates."
      }
    },
    "description": "Calculates days between two dates.",
    "keywords": ["days", "between", "date", "difference", "calculate"],
    "meta": {
      "usage_examples": ["Calculate the number of days between '2024-07-01' and '2024-07-21'."],
      "related_tools": ["add_days_tool", "calculate_age_tool"]
    }
  },
  {
    "name": "is_weekend_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["date utility", "time utility", "scheduling"],
    "input": {
      "date": {
        "type": "str",
        "description": "The date string to check (e.g., 'YYYY-MM-DD')."
      }
    },
    "output": {
      "is_weekend": {
        "type": "bool",
        "description": "True if the date falls on a weekend (Saturday or Sunday), False otherwise."
      }
    },
    "description": "Checks if a date falls on weekend.",
    "keywords": ["weekend", "date", "check", "saturday", "sunday"],
    "meta": {
      "usage_examples": ["Check if '2024-07-20' is a weekend day."],
      "related_tools": ["next_business_day_tool"]
    }
  },
  {
    "name": "next_business_day_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["date calculation", "time utility", "scheduling", "business days"],
    "input": {
      "date": {
        "type": "str",
        "description": "The starting date string (e.g., 'YYYY-MM-DD')."
      }
    },
    "output": {
      "next_date": {
        "type": "str",
        "description": "The date string of the next business day (Monday-Friday)."
      }
    },
    "description": "Finds next business day from given date.",
    "keywords": ["next", "business", "day", "weekday", "calculate"],
    "meta": {
      "usage_examples": ["Find the next business day after '2024-07-19' (a Friday)."],
      "related_tools": ["add_days_tool", "is_weekend_tool"]
    }
  },
  {
    "name": "timezone_convert_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["timezone conversion", "date time", "localization"],
    "input": {
      "datetime": {
        "type": "str",
        "description": "The datetime string to convert (e.g., '2024-07-21T10:00:00')."
      },
      "from_tz": {
        "type": "str",
        "description": "The timezone of the input datetime string (e.g., 'UTC', 'America/New_York')."
      },
      "to_tz": {
        "type": "str",
        "description": "The target timezone to convert to (e.g., 'Europe/London', 'Asia/Tokyo')."
      }
    },
    "output": {
      "converted": {
        "type": "str",
        "description": "The datetime string converted to the target timezone."
      }
    },
    "description": "Converts datetime between timezones.",
    "keywords": ["timezone", "convert", "datetime", "time", "zone"],
    "meta": {
      "usage_examples": ["Convert '2024-07-21 14:00:00' from 'America/New_York' to 'Europe/London'."],
      "related_tools": ["get_datetime_tool", "format_date_tool"]
    }
  },
  {
    "name": "parse_user_agent_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["user agent parsing", "web analytics", "device detection"],
    "input": {
      "user_agent": {
        "type": "str",
        "description": "The user agent string from an HTTP request."
      }
    },
    "output": {
      "parsed": {
        "type": "dict",
        "description": "A dictionary containing parsed information like browser name, version, OS, and device type."
      }
    },
    "description": "Extracts browser/OS info from user agent.",
    "keywords": ["parse", "user", "agent", "browser", "device"],
    "meta": {
      "usage_examples": ["Parse the user agent string 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) ...' to identify browser and OS."],
      "related_tools": ["ip_lookup_tool"]
    }
  },
  {
    "name": "sanitize_filename_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["filename sanitization", "file system utility", "string cleaning"],
    "input": {
      "filename": {
        "type": "str",
        "description": "The filename string to sanitize."
      }
    },
    "output": {
      "sanitized": {
        "type": "str",
        "description": "The filename with invalid characters removed or replaced, making it safe for file systems."
      }
    },
    "description": "Removes invalid characters from filename.",
    "keywords": ["sanitize", "filename", "clean", "valid", "characters"],
    "meta": {
      "usage_examples": ["Sanitize the filename 'My Report*Final?.docx' to 'My Report_Final_.docx'."],
      "related_tools": ["generate_slug_tool", "slugify_text_tool"]
    }
  },
  {
    "name": "slugify_text_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["slug generation", "text to url", "string utility"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string to convert into a slug."
      }
    },
    "output": {
      "slug": {
        "type": "str",
        "description": "The URL-friendly slug (e.g., 'my-awesome-post')."
      }
    },
    "description": "Converts text to URL-friendly slug.",
    "keywords": ["slugify", "text", "url", "friendly", "convert"],
    "meta": {
      "usage_examples": ["Slugify the title 'A Comprehensive Guide to AI' to 'a-comprehensive-guide-to-ai'."],
      "related_tools": ["generate_slug_tool", "sanitize_filename_tool"]
    }
  },
  {
    "name": "word_count_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text statistics", "nlp", "content analysis"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string for which to count words."
      }
    },
    "output": {
      "count": {
        "type": "int",
        "description": "The total number of words in the text."
      }
    },
    "description": "Counts words in a text string.",
    "keywords": ["word", "count", "text", "analyze", "length"],
    "meta": {
      "usage_examples": ["Count the words in the abstract of the research paper."],
      "related_tools": ["character_count_tool", "sentence_count_tool", "reading_time_tool"]
    }
  },
  {
    "name": "character_count_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text statistics", "nlp", "content analysis"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string for which to count characters."
      }
    },
    "output": {
      "count": {
        "type": "int",
        "description": "The total number of characters in the text (options for with/without spaces may exist)."
      }
    },
    "description": "Counts characters in a text string.",
    "keywords": ["character", "count", "text", "length", "size"],
    "meta": {
      "usage_examples": ["Count the characters in the tweet to ensure it's within limits."],
      "related_tools": ["word_count_tool", "sentence_count_tool"]
    }
  },
  {
    "name": "sentence_count_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text statistics", "nlp", "content analysis", "grammar"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string for which to count sentences."
      }
    },
    "output": {
      "count": {
        "type": "int",
        "description": "The total number of sentences in the text."
      }
    },
    "description": "Counts sentences in a text string.",
    "keywords": ["sentence", "count", "text", "analyze", "grammar"],
    "meta": {
      "usage_examples": ["Count the sentences in the introductory paragraph."],
      "related_tools": ["word_count_tool", "character_count_tool", "split_paragraphs_tool"]
    }
  },
  {
    "name": "extract_keywords_tool",
    "category": "Text Analysis",
    "version": "1.1",
    "author": "ToolmateAI",
    "tags": ["keyword extraction", "nlp", "seo", "topic modeling"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text from which to extract keywords."
      },
      "count": {
        "type": "int",
        "description": "The number of top keywords to extract."
      }
    },
    "output": {
      "keywords": {
        "type": "list[str]",
        "description": "A list of the top extracted keywords."
      }
    },
    "description": "Extracts top keywords from text.",
    "keywords": ["extract", "keywords", "text", "analyze", "terms"],
    "meta": {
      "usage_examples": ["Extract the top 5 keywords from the blog post about renewable energy."],
      "related_tools": ["summarize_text_tool", "classify_text_tool", "search_keyword_tool"]
    }
  },
  {
    "name": "reading_time_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text statistics", "nlp", "content usability"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text for which to estimate reading time."
      }
    },
    "output": {
      "minutes": {
        "type": "int",
        "description": "The estimated reading time in minutes."
      }
    },
    "description": "Estimates reading time for text.",
    "keywords": ["reading", "time", "text", "estimate", "minutes"],
    "meta": {
      "usage_examples": ["Estimate the reading time for the article of 1500 words."],
      "related_tools": ["word_count_tool"]
    }
  },
  {
    "name": "reverse_text_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text manipulation", "string utility"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string to be reversed."
      }
    },
    "output": {
      "reversed": {
        "type": "str",
        "description": "The text string with characters in reverse order."
      }
    },
    "description": "Reverses the order of characters in text.",
    "keywords": ["reverse", "text", "string", "backwards", "flip"],
    "meta": {
      "usage_examples": ["Reverse the string 'hello' to get 'olleh'."],
      "related_tools": []
    }
  },
  {
    "name": "capitalize_words_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text formatting", "string utility", "case conversion"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string to capitalize."
      }
    },
    "output": {
      "capitalized": {
        "type": "str",
        "description": "The text string with the first letter of each word capitalized."
      }
    },
    "description": "Capitalizes first letter of each word.",
    "keywords": ["capitalize", "words", "text", "title", "case"],
    "meta": {
      "usage_examples": ["Capitalize the words in 'john doe smith' to get 'John Doe Smith'."],
      "related_tools": ["remove_whitespace_tool"]
    }
  },
  {
    "name": "remove_whitespace_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text cleaning", "string utility", "data preparation"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to remove extra whitespace."
      }
    },
    "output": {
      "trimmed": {
        "type": "str",
        "description": "The text string with leading/trailing and excessive internal whitespace removed."
      }
    },
    "description": "Removes extra whitespace from text.",
    "keywords": ["remove", "whitespace", "text", "trim", "clean"],
    "meta": {
      "usage_examples": ["Remove extra spaces from '  Hello   World  ' to get 'Hello World'."],
      "related_tools": ["replace_text_tool"]
    }
  },
  {
    "name": "replace_text_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text manipulation", "string utility", "find and replace"],
    "input": {
      "text": {
        "type": "str",
        "description": "The original text string."
      },
      "find": {
        "type": "str",
        "description": "The substring to find."
      },
      "replace": {
        "type": "str",
        "description": "The substring to replace occurrences with."
      }
    },
    "output": {
      "replaced": {
        "type": "str",
        "description": "The text string with all occurrences of the 'find' string replaced by the 'replace' string."
      }
    },
    "description": "Replaces all occurrences of text.",
    "keywords": ["replace", "text", "find", "substitute", "change"],
    "meta": {
      "usage_examples": ["In the text 'Hello World', replace 'World' with 'Universe'."],
      "related_tools": ["remove_whitespace_tool", "search_keyword_tool"]
    }
  },
  {
    "name": "extract_numbers_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["data extraction", "text processing", "regex"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract numbers."
      }
    },
    "output": {
      "numbers": {
        "type": "list[float]",
        "description": "A list of all numbers (integers and floats) found in the text."
      }
    },
    "description": "Extracts all numbers from text.",
    "keywords": ["extract", "numbers", "text", "parse", "digits"],
    "meta": {
      "usage_examples": ["Extract all numbers from the string 'The price is $19.99 and quantity is 2.'."],
      "related_tools": ["extract_emails_tool", "extract_phone_numbers_tool"]
    }
  },
  {
    "name": "color_hex_to_rgb_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["color conversion", "hex", "rgb", "graphics"],
    "input": {
      "hex": {
        "type": "str",
        "description": "The hexadecimal color code (e.g., '#FF0000', 'FF0000')."
      }
    },
    "output": {
      "rgb": {
        "type": "dict",
        "description": "A dictionary containing the RGB values (e.g., {'r': 255, 'g': 0, 'b': 0})."
      }
    },
    "description": "Converts hex color to RGB values.",
    "keywords": ["color", "hex", "rgb", "convert", "format"],
    "meta": {
      "usage_examples": ["Convert the hex color '#3498db' to its RGB equivalent."],
      "related_tools": ["color_rgb_to_hex_tool", "generate_color_palette_tool"]
    }
  },
  {
    "name": "color_rgb_to_hex_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["color conversion", "rgb", "hex", "graphics"],
    "input": {
      "r": {
        "type": "int",
        "description": "The Red component value (0-255)."
      },
      "g": {
        "type": "int",
        "description": "The Green component value (0-255)."
      },
      "b": {
        "type": "int",
        "description": "The Blue component value (0-255)."
      }
    },
    "output": {
      "hex": {
        "type": "str",
        "description": "The hexadecimal color code (e.g., '#FF0000')."
      }
    },
    "description": "Converts RGB color to hex format.",
    "keywords": ["color", "rgb", "hex", "convert", "format"],
    "meta": {
      "usage_examples": ["Convert RGB(52, 152, 219) to its hex color code."],
      "related_tools": ["color_hex_to_rgb_tool", "generate_color_palette_tool"]
    }
  },
  {
    "name": "generate_color_palette_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["color palette", "design tool", "graphics", "ui generation"],
    "input": {
      "base_color": {
        "type": "str",
        "description": "The base color in hex or RGB format (e.g., '#3498db', 'rgb(52,152,219)')."
      },
      "count": {
        "type": "int",
        "description": "The number of colors to generate in the palette."
      }
    },
    "output": {
      "palette": {
        "type": "list[str]",
        "description": "A list of color codes (hex or RGB) representing the generated palette."
      }
    },
    "description": "Generates color palette from base color.",
    "keywords": ["generate", "color", "palette", "scheme", "design"],
    "meta": {
      "usage_examples": ["Generate a palette of 5 colors based on the primary color '#2ecc71'."],
      "related_tools": ["color_hex_to_rgb_tool", "color_rgb_to_hex_tool"]
    }
  },
  {
    "name": "image_resize_tool",
    "category": "Image Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["image manipulation", "resize", "graphics"],
    "input": {
      "image_path": {
        "type": "str",
        "description": "The file path of the image to be resized."
      },
      "width": {
        "type": "int",
        "description": "The desired width of the resized image in pixels."
      },
      "height": {
        "type": "int",
        "description": "The desired height of the resized image in pixels."
      }
    },
    "output": {
      "resized_path": {
        "type": "str",
        "description": "The file path of the resized image."
      }
    },
    "description": "Resizes an image to specified dimensions.",
    "keywords": ["image", "resize", "dimensions", "scale", "photo"],
    "meta": {
      "usage_examples": ["Resize 'input.jpg' to a width of 800 pixels and a height of 600 pixels."],
      "related_tools": ["image_crop_tool", "image_rotate_tool"]
    }
  },
  {
    "name": "image_crop_tool",
    "category": "Image Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["image manipulation", "crop", "graphics"],
    "input": {
      "image_path": {
        "type": "str",
        "description": "The file path of the image to be cropped."
      },
      "x": {
        "type": "int",
        "description": "The x-coordinate of the top-left corner of the crop area."
      },
      "y": {
        "type": "int",
        "description": "The y-coordinate of the top-left corner of the crop area."
      },
      "width": {
        "type": "int",
        "description": "The width of the crop area in pixels."
      },
      "height": {
        "type": "int",
        "description": "The height of the crop area in pixels."
      }
    },
    "output": {
      "cropped_path": {
        "type": "str",
        "description": "The file path of the cropped image."
      }
    },
    "description": "Crops an image to specified area.",
    "keywords": ["image", "crop", "cut", "area", "photo"],
    "meta": {
      "usage_examples": ["Crop 'input.png' from (100, 150) with a width of 300 and height of 200."],
      "related_tools": ["image_resize_tool", "image_rotate_tool"]
    }
  },
  {
    "name": "image_rotate_tool",
    "category": "Image Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["image manipulation", "rotate", "graphics"],
    "input": {
      "image_path": {
        "type": "str",
        "description": "The file path of the image to be rotated."
      },
      "degrees": {
        "type": "int",
        "description": "The angle in degrees by which to rotate the image (e.g., 90, -90, 180)."
      }
    },
    "output": {
      "rotated_path": {
        "type": "str",
        "description": "The file path of the rotated image."
      }
    },
    "description": "Rotates an image by specified degrees.",
    "keywords": ["image", "rotate", "degrees", "turn", "photo"],
    "meta": {
      "usage_examples": ["Rotate 'landscape.jpg' by 90 degrees clockwise."],
      "related_tools": ["image_resize_tool", "image_crop_tool"]
    }
  },
  {
    "name": "image_metadata_tool",
    "category": "Image Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["image metadata", "exif data", "file information"],
    "input": {
      "image_path": {
        "type": "str",
        "description": "The file path of the image."
      }
    },
    "output": {
      "metadata": {
        "type": "dict",
        "description": "A dictionary containing image metadata (e.g., EXIF data, dimensions, format)."
      }
    },
    "description": "Extracts metadata from image file.",
    "keywords": ["image", "metadata", "exif", "info", "photo"],
    "meta": {
      "usage_examples": ["Extract EXIF metadata from 'photo.jpg'."],
      "related_tools": ["file_size_tool", "file_type_tool"]
    }
  },
  {
    "name": "pdf_merge_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["pdf manipulation", "document merging", "file combination"],
    "input": {
      "pdf_files": {
        "type": "list[str]",
        "description": "A list of file paths for the PDF files to be merged."
      }
    },
    "output": {
      "merged_path": {
        "type": "str",
        "description": "The file path of the merged PDF document."
      }
    },
    "description": "Merges multiple PDF files into one.",
    "keywords": ["pdf", "merge", "combine", "files", "document"],
    "meta": {
      "usage_examples": ["Merge 'report_part1.pdf' and 'report_part2.pdf' into 'full_report.pdf'."],
      "related_tools": ["pdf_split_tool", "merge_documents_tool"]
    }
  },
  {
    "name": "pdf_split_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["pdf manipulation", "document splitting", "page extraction"],
    "input": {
      "pdf_path": {
        "type": "str",
        "description": "The file path of the PDF to be split."
      },
      "pages": {
        "type": "list[int]",
        "description": "A list of page numbers or ranges to extract into new files (e.g., [1, 3, '5-7'])."
      }
    },
    "output": {
      "split_files": {
        "type": "list[str]",
        "description": "A list of file paths for the newly created PDF files."
      }
    },
    "description": "Splits PDF into separate files by pages.",
    "keywords": ["pdf", "split", "pages", "separate", "document"],
    "meta": {
      "usage_examples": ["Split 'large_document.pdf' into individual pages or specified page ranges."],
      "related_tools": ["pdf_merge_tool", "pdf_page_count_tool"]
    }
  },
  {
    "name": "pdf_encrypt_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["pdf security", "encryption", "password protection"],
    "input": {
      "pdf_path": {
        "type": "str",
        "description": "The file path of the PDF to be encrypted."
      },
      "password": {
        "type": "str",
        "description": "The password to use for encrypting the PDF."
      }
    },
    "output": {
      "encrypted_path": {
        "type": "str",
        "description": "The file path of the encrypted PDF document."
      }
    },
    "description": "Encrypts PDF with password protection.",
    "keywords": ["pdf", "encrypt", "password", "protect", "security"],
    "meta": {
      "usage_examples": ["Encrypt 'sensitive_report.pdf' with the password 'secure123'."],
      "related_tools": ["random_password_tool"]
    }
  },
  {
    "name": "pdf_page_count_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["pdf utility", "document information", "page count"],
    "input": {
      "pdf_path": {
        "type": "str",
        "description": "The file path of the PDF document."
      }
    },
    "output": {
      "count": {
        "type": "int",
        "description": "The total number of pages in the PDF file."
      }
    },
    "description": "Counts total pages in PDF file.",
    "keywords": ["pdf", "page", "count", "total", "document"],
    "meta": {
      "usage_examples": ["Count the number of pages in 'manual.pdf'."],
      "related_tools": ["pdf_split_tool", "read_pdf_tool"]
    }
  },
  {
    "name": "zip_files_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file compression", "archiving", "zip utility"],
    "input": {
      "files": {
        "type": "list[str]",
        "description": "A list of file paths to be included in the ZIP archive."
      },
      "zip_name": {
        "type": "str",
        "description": "The desired name for the output ZIP file (e.g., 'archive.zip')."
      }
    },
    "output": {
      "zip_path": {
        "type": "str",
        "description": "The file path of the created ZIP archive."
      }
    },
    "description": "Creates ZIP archive from multiple files.",
    "keywords": ["zip", "archive", "compress", "files", "package"],
    "meta": {
      "usage_examples": ["Create a ZIP archive named 'project_files.zip' containing 'main.py', 'utils.py', and 'README.md'."],
      "related_tools": ["unzip_files_tool", "compress_text_tool"]
    }
  },
  {
    "name": "unzip_files_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file decompression", "archiving", "zip utility"],
    "input": {
      "zip_path": {
        "type": "str",
        "description": "The file path of the ZIP archive to be extracted."
      },
      "extract_to": {
        "type": "str",
        "description": "The directory path where the contents of the ZIP archive should be extracted."
      }
    },
    "output": {
      "extracted_files": {
        "type": "list[str]",
        "description": "A list of file paths for the extracted files and directories."
      }
    },
    "description": "Extracts files from ZIP archive.",
    "keywords": ["unzip", "extract", "archive", "files", "decompress"],
    "meta": {
      "usage_examples": ["Extract the contents of 'backup.zip' to the './restored_backup' directory."],
      "related_tools": ["zip_files_tool", "decompress_text_tool"]
    }
  },
  {
    "name": "file_size_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file information", "storage utility", "system information"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The file path for which to get the size."
      }
    },
    "output": {
      "size_bytes": {
        "type": "int",
        "description": "The size of the file in bytes."
      }
    },
    "description": "Gets file size in bytes.",
    "keywords": ["file", "size", "bytes", "info", "storage"],
    "meta": {
      "usage_examples": ["Get the size of 'large_dataset.csv' in bytes."],
      "related_tools": ["file_type_tool", "disk_usage_tool"]
    }
  },
  {
    "name": "file_type_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file information", "mime type", "format detection"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The file path for which to determine the type."
      }
    },
    "output": {
      "type": {
        "type": "str",
        "description": "The determined file type (e.g., 'PDF document', 'JPEG image', 'text/plain')."
      }
    },
    "description": "Determines file type from extension/content.",
    "keywords": ["file", "type", "extension", "format", "mime"],
    "meta": {
      "usage_examples": ["Determine the file type of 'unknown_file.dat'."],
      "related_tools": ["file_size_tool", "extract_text_tool"]
    }
  },
  {
    "name": "backup_file_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file backup", "data safety", "file management"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The file path of the file to be backed up."
      }
    },
    "output": {
      "backup_path": {
        "type": "str",
        "description": "The file path of the created backup copy (e.g., with a timestamp or '.bak' extension)."
      }
    },
    "description": "Creates backup copy of a file.",
    "keywords": ["backup", "file", "copy", "save", "duplicate"],
    "meta": {
      "usage_examples": ["Create a backup of 'important_document.docx' before making changes."],
      "related_tools": ["delete_file_tool", "zip_files_tool"]
    }
  },
  {
    "name": "delete_file_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file deletion", "file management", "system utility"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The file path of the file to be deleted."
      }
    },
    "output": {
      "deleted": {
        "type": "bool",
        "description": "True if the file was successfully deleted, False otherwise."
      }
    },
    "description": "Safely deletes a file from system.",
    "keywords": ["delete", "file", "remove", "cleanup", "storage"],
    "meta": {
      "usage_examples": ["Delete the temporary file 'temp_data.tmp' after processing."],
      "related_tools": ["backup_file_tool", "list_directory_tool"]
    }
  },
  {
    "name": "list_directory_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["directory listing", "file system navigation", "file management"],
    "input": {
      "directory": {
        "type": "str",
        "description": "The path of the directory to list."
      }
    },
    "output": {
      "files": {
        "type": "list[str]",
        "description": "A list of names of files and subdirectories within the specified directory."
      }
    },
    "description": "Lists all files in a directory.",
    "keywords": ["list", "directory", "files", "folder", "browse"],
    "meta": {
      "usage_examples": ["List all files in the '/home/user/documents' directory."],
      "related_tools": ["create_directory_tool", "delete_file_tool", "find_recent_files_tool"]
    }
  },
  {
    "name": "create_directory_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["directory creation", "file system management", "folder utility"],
    "input": {
      "path": {
        "type": "str",
        "description": "The path where the new directory should be created (including the new directory's name)."
      }
    },
    "output": {
      "created": {
        "type": "bool",
        "description": "True if the directory was successfully created, False otherwise (e.g., if it already exists or path is invalid)."
      }
    },
    "description": "Creates a new directory.",
    "keywords": ["create", "directory", "folder", "path", "make"],
    "meta": {
      "usage_examples": ["Create a new directory named 'output_reports' in the current working directory."],
      "related_tools": ["list_directory_tool", "delete_file_tool"]
    }
  },
  {
    "name": "system_info_tool",
    "category": "System Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["system information", "os details", "hardware info"],
    "input": {},
    "output": {
      "info": {
        "type": "dict",
        "description": "A dictionary containing system information such as OS version, CPU details, and memory usage."
      }
    },
    "description": "Gets system information (OS, CPU, memory).",
    "keywords": ["system", "info", "os", "cpu", "memory"],
    "meta": {
      "usage_examples": ["Get current system information."],
      "related_tools": ["disk_usage_tool", "process_list_tool", "memory_usage_tool", "cpu_usage_tool"]
    }
  },
  {
    "name": "disk_usage_tool",
    "category": "System Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["disk space", "storage management", "file system"],
    "input": {
      "path": {
        "type": "str",
        "description": "The directory path for which to get disk usage information (e.g., '/', '/mnt/data')."
      }
    },
    "output": {
      "usage": {
        "type": "dict",
        "description": "A dictionary containing disk space usage details (e.g., total, used, free space)."
      }
    },
    "description": "Gets disk space usage for path.",
    "keywords": ["disk", "usage", "space", "storage", "free"],
    "meta": {
      "usage_examples": ["Check the disk usage for the '/var/log' directory."],
      "related_tools": ["system_info_tool", "file_size_tool"]
    }
  },
  {
    "name": "process_list_tool",
    "category": "System Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["process management", "task manager", "system monitoring"],
    "input": {},
    "output": {
      "processes": {
        "type": "list[dict]",
        "description": "A list of currently running system processes, with details like PID, name, CPU usage, and memory usage for each."
      }
    },
    "description": "Lists running system processes.",
    "keywords": ["process", "list", "running", "system", "tasks"],
    "meta": {
      "usage_examples": ["List all currently running processes on the system."],
      "related_tools": ["system_info_tool", "cpu_usage_tool", "memory_usage_tool"]
    }
  },
  {
    "name": "network_ping_tool",
    "category": "Network Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["network diagnostics", "ping", "connectivity test"],
    "input": {
      "host": {
        "type": "str",
        "description": "The hostname or IP address to ping (e.g., 'google.com', '8.8.8.8')."
      }
    },
    "output": {
      "response_time": {
        "type": "float",
        "description": "The response time in milliseconds, or an indicator of failure/timeout."
      }
    },
    "description": "Pings host and returns response time.",
    "keywords": ["network", "ping", "host", "response", "time"],
    "meta": {
      "usage_examples": ["Ping 'google.com' to check network connectivity."],
      "related_tools": ["check_server_status_tool", "port_scan_tool", "dns_lookup_tool"]
    }
  },
  {
    "name": "port_scan_tool",
    "category": "Network Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["network security", "port scanning", "network diagnostics"],
    "input": {
      "host": {
        "type": "str",
        "description": "The hostname or IP address to scan."
      },
      "ports": {
        "type": "list[int]",
        "description": "A list of port numbers to scan (e.g., [80, 443, 22])."
      }
    },
    "output": {
      "open_ports": {
        "type": "list[int]",
        "description": "A list of port numbers that are open on the specified host."
      }
    },
    "description": "Scans for open ports on host.",
    "keywords": ["port", "scan", "host", "open", "network"],
    "meta": {
      "usage_examples": ["Scan 'localhost' for open ports 80, 443, and 8080."],
      "related_tools": ["network_ping_tool", "check_server_status_tool"]
    }
  },
  {
    "name": "dns_lookup_tool",
    "category": "Network Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["dns resolution", "network diagnostics", "ip address"],
    "input": {
      "domain": {
        "type": "str",
        "description": "The domain name to resolve (e.g., 'google.com')."
      }
    },
    "output": {
      "ip_address": {
        "type": "str",
        "description": "The IP address associated with the domain name."
      }
    },
    "description": "Resolves domain name to IP address.",
    "keywords": ["dns", "lookup", "domain", "ip", "resolve"],
    "meta": {
      "usage_examples": ["Perform a DNS lookup for 'toolmate.ai'."],
      "related_tools": ["network_ping_tool", "ip_lookup_tool"]
    }
  },
  {
    "name": "generate_barcode_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["barcode generation", "image generation", "data encoding"],
    "input": {
      "data": {
        "type": "str",
        "description": "The data to be encoded in the barcode (e.g., product ID, URL)."
      },
      "format": {
        "type": "str",
        "description": "The barcode format (e.g., 'CODE128', 'EAN13', 'UPCA')."
      }
    },
    "output": {
      "barcode_path": {
        "type": "str",
        "description": "The file path of the generated barcode image."
      }
    },
    "description": "Generates barcode image from data.",
    "keywords": ["generate", "barcode", "image", "data", "code"],
    "meta": {
      "usage_examples": ["Generate a CODE128 barcode for the product ID '12345ABC'."],
      "related_tools": ["read_barcode_tool", "generate_qr_tool"]
    }
  },
  {
    "name": "read_barcode_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["barcode reading", "image processing", "data extraction"],
    "input": {
      "image_path": {
        "type": "str",
        "description": "The file path of the barcode image to be read."
      }
    },
    "output": {
      "data": {
        "type": "str",
        "description": "The data decoded from the barcode."
      }
    },
    "description": "Reads data from barcode image.",
    "keywords": ["read", "barcode", "image", "decode", "scan"],
    "meta": {
      "usage_examples": ["Read the data from the barcode image 'product_barcode.png'."],
      "related_tools": ["generate_barcode_tool", "image_to_text_tool"]
    }
  },
  {
    "name": "text_to_speech_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text to speech", "tts", "audio generation", "accessibility"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text to be converted to speech."
      },
      "voice": {
        "type": "str",
        "description": "Optional: The desired voice for the speech synthesis (e.g., 'male', 'female', specific voice ID)."
      }
    },
    "output": {
      "audio_path": {
        "type": "str",
        "description": "The file path of the generated audio file (e.g., MP3, WAV)."
      }
    },
    "description": "Converts text to speech audio file.",
    "keywords": ["text", "speech", "audio", "voice", "convert"],
    "meta": {
      "usage_examples": ["Convert the welcome message 'Hello, welcome to Toolmate!' into an audio file."],
      "related_tools": ["speech_to_text_tool", "audio_duration_tool"]
    }
  },
  {
    "name": "speech_to_text_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["speech to text", "stt", "audio transcription", "voice recognition"],
    "input": {
      "audio_path": {
        "type": "str",
        "description": "The file path of the audio file to be transcribed."
      }
    },
    "output": {
      "text": {
        "type": "str",
        "description": "The transcribed text from the audio file."
      }
    },
    "description": "Converts speech audio to text.",
    "keywords": ["speech", "text", "audio", "transcribe", "convert"],
    "meta": {
      "usage_examples": ["Transcribe the audio recording 'meeting_notes.wav' into text."],
      "related_tools": ["text_to_speech_tool", "summarize_meeting_tool"]
    }
  },
  {
    "name": "audio_duration_tool",
    "category": "Media Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["audio processing", "media information", "duration calculation"],
    "input": {
      "audio_path": {
        "type": "str",
        "description": "The file path of the audio file."
      }
    },
    "output": {
      "duration": {
        "type": "float",
        "description": "The duration of the audio file in seconds."
      }
    },
    "description": "Gets duration of audio file in seconds.",
    "keywords": ["audio", "duration", "length", "time", "seconds"],
    "meta": {
      "usage_examples": ["Get the duration of the podcast episode 'episode1.mp3'."],
      "related_tools": ["audio_convert_tool", "video_info_tool"]
    }
  },
  {
    "name": "audio_convert_tool",
    "category": "Media Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["audio conversion", "format change", "media processing", "video to audio"],
    "input": {
      "audio_path": {
        "type": "str",
        "description": "The file path of the input audio or video file."
      },
      "format": {
        "type": "str",
        "description": "The target audio format (e.g., 'mp3', 'wav', 'aac')."
      },
      "from_video": {
        "type": "bool",
        "description": "Set to true if the input is a video file and audio needs to be extracted and converted."
      }
    },
    "output": {
      "converted_path": {
        "type": "str",
        "description": "The file path of the converted audio file."
      }
    },
    "description": "Converts audio between formats or extracts audio from video files.",
    "keywords": ["audio", "convert", "format", "mp3", "wav", "video-to-audio"],
    "meta": {
      "usage_examples": ["Convert 'song.flac' to 'song.mp3'.", "Extract audio from 'video_lecture.mp4' and save as 'lecture_audio.wav'."],
      "related_tools": ["audio_duration_tool", "video_info_tool", "file_converter_tool"]
    }
  },
  {
    "name": "video_info_tool",
    "category": "Media Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["video information", "media metadata", "file details"],
    "input": {
      "video_path": {
        "type": "str",
        "description": "The file path of the video file."
      }
    },
    "output": {
      "info": {
        "type": "dict",
        "description": "A dictionary containing video file information (e.g., resolution, duration, codec, frame rate)."
      }
    },
    "description": "Gets video file information and metadata.",
    "keywords": ["video", "info", "metadata", "resolution", "duration"],
    "meta": {
      "usage_examples": ["Get information about 'movie_clip.mp4', including its duration and resolution."],
      "related_tools": ["video_thumbnail_tool", "audio_convert_tool"]
    }
  },
  {
    "name": "video_thumbnail_tool",
    "category": "Media Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["video processing", "thumbnail generation", "image extraction"],
    "input": {
      "video_path": {
        "type": "str",
        "description": "The file path of the video file."
      },
      "timestamp": {
        "type": "float",
        "description": "The timestamp in seconds from which to extract the thumbnail (e.g., 30.5 for 30.5 seconds into the video)."
      }
    },
    "output": {
      "thumbnail_path": {
        "type": "str",
        "description": "The file path of the generated thumbnail image."
      }
    },
    "description": "Extracts thumbnail from video at timestamp.",
    "keywords": ["video", "thumbnail", "extract", "frame", "image"],
    "meta": {
      "usage_examples": ["Extract a thumbnail from 'tutorial.mov' at the 15-second mark."],
      "related_tools": ["video_info_tool", "image_resize_tool"]
    }
  },
  {
    "name": "batch_rename_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file renaming", "batch processing", "file management"],
    "input": {
      "files": {
        "type": "list[str]",
        "description": "A list of file paths to be renamed."
      },
      "pattern": {
        "type": "str",
        "description": "A renaming pattern, potentially using placeholders for original filename, numbers, dates (e.g., 'new_name_{{i}}.jpg', '{{original_name}}_backup.{{ext}}')."
      },
      "to_lowercase": {
        "type": "bool",
        "description": "Optional: If true, converts the new filenames to lowercase."
      }
    },
    "output": {
      "renamed": {
        "type": "list[str]",
        "description": "A list of the new file paths after renaming."
      }
    },
    "description": "Renames multiple files using a pattern. Optionally converts filenames to lowercase.",
    "keywords": ["batch", "rename", "files", "pattern", "multiple", "lowercase"],
    "meta": {
      "usage_examples": ["Rename all '.jpeg' files in a list to '.jpg' using pattern '{{original_name}}.jpg'.", "Rename selected photos to 'holiday_photo_{{i}}.png' and convert to lowercase."],
      "related_tools": ["list_directory_tool", "sanitize_filename_tool"]
    }
  },
  {
    "name": "find_replace_files_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text manipulation", "batch processing", "file editing"],
    "input": {
      "directory": {
        "type": "str",
        "description": "The directory path containing the files to process."
      },
      "find": {
        "type": "str",
        "description": "The text string to find within the files."
      },
      "replace": {
        "type": "str",
        "description": "The text string to replace occurrences with."
      }
    },
    "output": {
      "modified": {
        "type": "list[str]",
        "description": "A list of file paths that were modified."
      }
    },
    "description": "Find and replace text across files in directory.",
    "keywords": ["find", "replace", "files", "directory", "text"],
    "meta": {
      "usage_examples": ["In all '.txt' files in the 'project_docs' directory, replace 'old_company_name' with 'new_company_name'."],
      "related_tools": ["replace_text_tool", "list_directory_tool"]
    }
  },
  {
    "name": "duplicate_finder_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file management", "disk cleanup", "duplicate detection"],
    "input": {
      "directory": {
        "type": "str",
        "description": "The directory path to search for duplicate files."
      }
    },
    "output": {
      "duplicates": {
        "type": "list[list[str]]",
        "description": "A list of groups, where each group is a list of file paths identified as duplicates of each other."
      }
    },
    "description": "Finds duplicate files in directory.",
    "keywords": ["duplicate", "finder", "files", "directory", "similar"],
    "meta": {
      "usage_examples": ["Find all duplicate photos in the '/Pictures/Vacation2023' directory."],
      "related_tools": ["checksum_tool", "delete_file_tool"]
    }
  },
  {
    "name": "checksum_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file integrity", "hashing", "data verification", "md5", "sha256"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The file path for which to calculate the checksum."
      },
      "algorithm": {
        "type": "str",
        "description": "The checksum algorithm to use (e.g., 'md5', 'sha1', 'sha256', 'sha512')."
      }
    },
    "output": {
      "checksum": {
        "type": "str",
        "description": "The calculated checksum string."
      }
    },
    "description": "Calculates file checksum using algorithm.",
    "keywords": ["checksum", "file", "hash", "verify", "integrity"],
    "meta": {
      "usage_examples": ["Calculate the SHA256 checksum for 'archive.zip' to verify its integrity after download."],
      "related_tools": ["hash_text_tool", "duplicate_finder_tool"]
    }
  },
  {
    "name": "monitor_file_tool",
    "category": "System Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file monitoring", "system watcher", "change detection"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The file path of the file to monitor for changes."
      }
    },
    "output": {
      "changes": {
        "type": "list[dict]",
        "description": "A list of dictionaries, where each dictionary describes a detected change (e.g., {'type': 'modified', 'timestamp': '...'} ). This might be a long-running or event-driven tool."
      }
    },
    "description": "Monitors file for changes over time.",
    "keywords": ["monitor", "file", "changes", "watch", "track"],
    "meta": {
      "usage_examples": ["Monitor 'application.log' for any new entries or modifications."],
      "related_tools": ["log_parser_tool", "system_info_tool"]
    }
  },
  {
    "name": "log_parser_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["log analysis", "text parsing", "regex", "data extraction"],
    "input": {
      "log_path": {
        "type": "str",
        "description": "The file path of the log file to be parsed."
      },
      "pattern": {
        "type": "str",
        "description": "A regular expression pattern to match and extract specific information from log entries."
      }
    },
    "output": {
      "matches": {
        "type": "list[dict]",
        "description": "A list of dictionaries, where each dictionary represents a matched log entry with extracted groups from the pattern."
      }
    },
    "description": "Parses log files for specific patterns.",
    "keywords": ["log", "parser", "pattern", "analyze", "extract"],
    "meta": {
      "usage_examples": ["Parse 'server.log' to extract all error messages matching the pattern 'ERROR: (.*)'."],
      "related_tools": ["monitor_file_tool", "regex_test_tool", "extract_text_tool"]
    }
  },
  {
    "name": "performance_timer_tool",
    "category": "System Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["performance monitoring", "benchmarking", "developer tool"],
    "input": {
      "function_name": {
        "type": "str",
        "description": "The name or identifier of the function/code block to be timed. (Note: Actual execution and timing would happen in the tool's implementation)."
      }
    },
    "output": {
      "execution_time": {
        "type": "float",
        "description": "The execution time in seconds or milliseconds."
      }
    },
    "description": "Measures function execution time.",
    "keywords": ["performance", "timer", "execution", "time", "benchmark"],
    "meta": {
      "usage_examples": ["Measure the execution time of the 'data_processing_pipeline' function."],
      "related_tools": ["cpu_usage_tool", "memory_usage_tool"]
    }
  },
  {
    "name": "memory_usage_tool",
    "category": "System Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["system monitoring", "resource management", "performance"],
    "input": {},
    "output": {
      "usage": {
        "type": "dict",
        "description": "A dictionary containing current memory usage statistics (e.g., total, used, free, percentage)."
      }
    },
    "description": "Gets current memory usage statistics.",
    "keywords": ["memory", "usage", "ram", "statistics", "system"],
    "meta": {
      "usage_examples": ["Get the current system memory usage."],
      "related_tools": ["cpu_usage_tool", "disk_usage_tool", "system_info_tool"]
    }
  },
  {
    "name": "cpu_usage_tool",
    "category": "System Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["system monitoring", "resource management", "performance"],
    "input": {},
    "output": {
      "usage": {
        "type": "float",
        "description": "The current CPU usage percentage."
      }
    },
    "description": "Gets current CPU usage percentage.",
    "keywords": ["cpu", "usage", "processor", "percentage", "system"],
    "meta": {
      "usage_examples": ["Get the current CPU utilization."],
      "related_tools": ["memory_usage_tool", "process_list_tool", "system_info_tool"]
    }
  },
  {
    "name": "temperature_convert_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["unit conversion", "temperature", "measurement"],
    "input": {
      "value": {
        "type": "float",
        "description": "The temperature value to convert."
      },
      "from_unit": {
        "type": "str",
        "description": "The unit of the input temperature (e.g., 'C' for Celsius, 'F' for Fahrenheit, 'K' for Kelvin)."
      },
      "to_unit": {
        "type": "str",
        "description": "The target unit for temperature conversion (e.g., 'C', 'F', 'K')."
      }
    },
    "output": {
      "converted": {
        "type": "float",
        "description": "The converted temperature value."
      }
    },
    "description": "Converts temperature between units.",
    "keywords": ["temperature", "convert", "celsius", "fahrenheit", "kelvin"],
    "meta": {
      "usage_examples": ["Convert 25 degrees Celsius to Fahrenheit.", "Convert 77 F to C."],
      "related_tools": ["distance_convert_tool", "weight_convert_tool", "advanced_unit_converter_tool"]
    }
  },
  {
    "name": "distance_convert_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["unit conversion", "distance", "length", "measurement"],
    "input": {
      "value": {
        "type": "float",
        "description": "The distance value to convert."
      },
      "from_unit": {
        "type": "str",
        "description": "The unit of the input distance (e.g., 'm', 'km', 'ft', 'mi')."
      },
      "to_unit": {
        "type": "str",
        "description": "The target unit for distance conversion (e.g., 'm', 'km', 'ft', 'mi')."
      }
    },
    "output": {
      "converted": {
        "type": "float",
        "description": "The converted distance value."
      }
    },
    "description": "Converts distance between units.",
    "keywords": ["distance", "convert", "meters", "feet", "miles"],
    "meta": {
      "usage_examples": ["Convert 10 kilometers to miles.", "Convert 500 feet to meters."],
      "related_tools": ["temperature_convert_tool", "weight_convert_tool", "advanced_unit_converter_tool"]
    }
  },
  {
    "name": "weight_convert_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["unit conversion", "weight", "mass", "measurement"],
    "input": {
      "value": {
        "type": "float",
        "description": "The weight value to convert."
      },
      "from_unit": {
        "type": "str",
        "description": "The unit of the input weight (e.g., 'kg', 'g', 'lb', 'oz')."
      },
      "to_unit": {
        "type": "str",
        "description": "The target unit for weight conversion (e.g., 'kg', 'g', 'lb', 'oz')."
      }
    },
    "output": {
      "converted": {
        "type": "float",
        "description": "The converted weight value."
      }
    },
    "description": "Converts weight between units.",
    "keywords": ["weight", "convert", "kilograms", "pounds", "grams"],
    "meta": {
      "usage_examples": ["Convert 5 kilograms to pounds.", "Convert 16 ounces to grams."],
      "related_tools": ["temperature_convert_tool", "distance_convert_tool", "advanced_unit_converter_tool"]
    }
  },
  {
    "name": "volume_convert_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["unit conversion", "volume", "capacity", "measurement"],
    "input": {
      "value": {
        "type": "float",
        "description": "The volume value to convert."
      },
      "from_unit": {
        "type": "str",
        "description": "The unit of the input volume (e.g., 'L', 'mL', 'gal', 'oz')."
      },
      "to_unit": {
        "type": "str",
        "description": "The target unit for volume conversion (e.g., 'L', 'mL', 'gal', 'oz')."
      }
    },
    "output": {
      "converted": {
        "type": "float",
        "description": "The converted volume value."
      }
    },
    "description": "Converts volume between units.",
    "keywords": ["volume", "convert", "liters", "gallons", "milliliters"],
    "meta": {
      "usage_examples": ["Convert 2 liters to gallons.", "Convert 12 fluid ounces to milliliters."],
      "related_tools": ["area_convert_tool", "speed_convert_tool", "advanced_unit_converter_tool"]
    }
  },
  {
    "name": "area_convert_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["unit conversion", "area", "surface", "measurement"],
    "input": {
      "value": {
        "type": "float",
        "description": "The area value to convert."
      },
      "from_unit": {
        "type": "str",
        "description": "The unit of the input area (e.g., 'sqm', 'sqft', 'acre', 'ha')."
      },
      "to_unit": {
        "type": "str",
        "description": "The target unit for area conversion (e.g., 'sqm', 'sqft', 'acre', 'ha')."
      }
    },
    "output": {
      "converted": {
        "type": "float",
        "description": "The converted area value."
      }
    },
    "description": "Converts area between units.",
    "keywords": ["area", "convert", "square", "meters", "feet"],
    "meta": {
      "usage_examples": ["Convert 100 square meters to square feet.", "Convert 2 acres to hectares."],
      "related_tools": ["volume_convert_tool", "speed_convert_tool", "advanced_unit_converter_tool"]
    }
  },
  {
    "name": "speed_convert_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["unit conversion", "speed", "velocity", "measurement"],
    "input": {
      "value": {
        "type": "float",
        "description": "The speed value to convert."
      },
      "from_unit": {
        "type": "str",
        "description": "The unit of the input speed (e.g., 'kmh', 'mph', 'm/s')."
      },
      "to_unit": {
        "type": "str",
        "description": "The target unit for speed conversion (e.g., 'kmh', 'mph', 'm/s')."
      }
    },
    "output": {
      "converted": {
        "type": "float",
        "description": "The converted speed value."
      }
    },
    "description": "Converts speed between units.",
    "keywords": ["speed", "convert", "mph", "kmh", "velocity"],
    "meta": {
      "usage_examples": ["Convert 60 mph to km/h.", "Convert 10 meters per second to miles per hour."],
      "related_tools": ["angle_convert_tool", "advanced_unit_converter_tool"]
    }
  },
  {
    "name": "angle_convert_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["unit conversion", "angle", "geometry", "measurement"],
    "input": {
      "value": {
        "type": "float",
        "description": "The angle value to convert."
      },
      "from_unit": {
        "type": "str",
        "description": "The unit of the input angle ('degrees' or 'radians')."
      },
      "to_unit": {
        "type": "str",
        "description": "The target unit for angle conversion ('degrees' or 'radians')."
      }
    },
    "output": {
      "converted": {
        "type": "float",
        "description": "The converted angle value."
      }
    },
    "description": "Converts angles between degrees and radians.",
    "keywords": ["angle", "convert", "degrees", "radians", "rotation"],
    "meta": {
      "usage_examples": ["Convert 180 degrees to radians.", "Convert PI/2 radians to degrees."],
      "related_tools": ["speed_convert_tool", "advanced_unit_converter_tool"]
    }
  },
  {
    "name": "percentage_calculator_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["math", "percentage", "calculation"],
    "input": {
      "part": {
        "type": "float",
        "description": "The part value."
      },
      "whole": {
        "type": "float",
        "description": "The whole value."
      }
    },
    "output": {
      "percentage": {
        "type": "float",
        "description": "The calculated percentage (part / whole * 100)."
      }
    },
    "description": "Calculates percentage from part and whole.",
    "keywords": ["percentage", "calculate", "part", "whole", "ratio"],
    "meta": {
      "usage_examples": ["What percentage is 20 of 50?", "Calculate the percentage of completed tasks (15 out of 20)."],
      "related_tools": ["calculate_percent_change_tool"]
    }
  },
  {
    "name": "compound_interest_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["finance", "investment", "interest calculation"],
    "input": {
      "principal": {
        "type": "float",
        "description": "The initial principal amount."
      },
      "rate": {
        "type": "float",
        "description": "The annual interest rate (as a decimal, e.g., 0.05 for 5%)."
      },
      "time": {
        "type": "float",
        "description": "The number of years the money is invested or borrowed for."
      },
      "compound": {
        "type": "int",
        "description": "The number of times that interest is compounded per year (e.g., 1 for annually, 12 for monthly)."
      }
    },
    "output": {
      "amount": {
        "type": "float",
        "description": "The future value of the investment/loan, including interest."
      }
    },
    "description": "Calculates compound interest.",
    "keywords": ["compound", "interest", "calculate", "finance", "investment"],
    "meta": {
      "usage_examples": ["Calculate compound interest for a principal of $1000 at 5% rate for 10 years, compounded annually."],
      "related_tools": ["loan_payment_tool", "tax_calculator_tool"]
    }
  },
  {
    "name": "loan_payment_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["finance", "loan", "mortgage", "payment calculation"],
    "input": {
      "loan_amount": {
        "type": "float",
        "description": "The total amount of the loan."
      },
      "rate": {
        "type": "float",
        "description": "The annual interest rate (as a decimal, e.g., 0.05 for 5%)."
      },
      "months": {
        "type": "int",
        "description": "The total number of months for loan repayment."
      }
    },
    "output": {
      "payment": {
        "type": "float",
        "description": "The calculated monthly loan payment."
      }
    },
    "description": "Calculates monthly loan payment.",
    "keywords": ["loan", "payment", "monthly", "calculate", "finance"],
    "meta": {
      "usage_examples": ["Calculate the monthly payment for a $200,000 loan at 4.5% annual interest over 30 years (360 months)."],
      "related_tools": ["compound_interest_tool"]
    }
  },
  {
    "name": "tax_calculator_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["finance", "tax", "income calculation"],
    "input": {
      "income": {
        "type": "float",
        "description": "The taxable income amount."
      },
      "rate": {
        "type": "float",
        "description": "The tax rate (as a decimal, e.g., 0.20 for 20%)."
      }
    },
    "output": {
      "tax": {
        "type": "float",
        "description": "The calculated tax amount."
      }
    },
    "description": "Calculates tax amount from income and rate.",
    "keywords": ["tax", "calculate", "income", "rate", "finance"],
    "meta": {
      "usage_examples": ["Calculate the tax on an income of $50,000 at a tax rate of 15%."],
      "related_tools": ["compound_interest_tool"]
    }
  },
  {
    "name": "tip_calculator_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["restaurant", "gratuity", "payment calculation"],
    "input": {
      "bill": {
        "type": "float",
        "description": "The total bill amount."
      },
      "percentage": {
        "type": "float",
        "description": "The tip percentage (e.g., 15 for 15%, 20 for 20%)."
      }
    },
    "output": {
      "tip": {
        "type": "float",
        "description": "The calculated tip amount."
      }
    },
    "description": "Calculates tip amount for a bill.",
    "keywords": ["tip", "calculate", "bill", "percentage", "service"],
    "meta": {
      "usage_examples": ["Calculate a 20% tip for a bill of $75.50."],
      "related_tools": ["percentage_calculator_tool"]
    }
  },
  {
    "name": "bmi_calculator_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["health", "fitness", "bmi", "body mass index"],
    "input": {
      "weight": {
        "type": "float",
        "description": "Weight of the person."
      },
      "height": {
        "type": "float",
        "description": "Height of the person."
      },
      "unit": {
        "type": "str",
        "description": "The unit system used for weight and height ('metric' for kg/m or 'imperial' for lbs/in)."
      }
    },
    "output": {
      "bmi": {
        "type": "float",
        "description": "The calculated Body Mass Index."
      }
    },
    "description": "Calculates Body Mass Index.",
    "keywords": ["bmi", "calculate", "weight", "height", "health"],
    "meta": {
      "usage_examples": ["Calculate BMI for a person weighing 70 kg and 1.75 m tall (metric).", "Calculate BMI for a person weighing 150 lbs and 68 inches tall (imperial)."],
      "related_tools": ["calorie_calculator_tool"]
    }
  },
  {
    "name": "calorie_calculator_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["health", "fitness", "nutrition", "diet"],
    "input": {
      "age": {
        "type": "int",
        "description": "Age of the person in years."
      },
      "gender": {
        "type": "str",
        "description": "Gender of the person ('male' or 'female')."
      },
      "weight": {
        "type": "float",
        "description": "Weight of the person (ensure consistency with height unit for formulas like Mifflin-St Jeor)."
      },
      "height": {
        "type": "float",
        "description": "Height of the person (ensure consistency with weight unit)."
      },
      "activity": {
        "type": "str",
        "description": "Activity level (e.g., 'sedentary', 'light', 'moderate', 'active', 'very_active')."
      }
    },
    "output": {
      "calories": {
        "type": "float",
        "description": "Estimated daily calorie needs."
      }
    },
    "description": "Calculates daily calorie needs.",
    "keywords": ["calorie", "calculate", "daily", "needs", "health"],
    "meta": {
      "usage_examples": ["Calculate daily calorie needs for a 30-year-old male, 80kg, 180cm, with a 'moderate' activity level."],
      "related_tools": ["bmi_calculator_tool"]
    }
  },
  {
    "name": "password_strength_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["security", "password checker", "strength evaluation"],
    "input": {
      "password": {
        "type": "str",
        "description": "The password string to evaluate."
      }
    },
    "output": {
      "strength": {
        "type": "str",
        "description": "A qualitative description of the password strength (e.g., 'Weak', 'Moderate', 'Strong')."
      },
      "score": {
        "type": "int",
        "description": "A numerical score representing password strength (e.g., 0-100 or 0-4)."
      }
    },
    "description": "Evaluates password strength and security.",
    "keywords": ["password", "strength", "security", "evaluate", "score"],
    "meta": {
      "usage_examples": ["Evaluate the strength of the password 'P@$$wOrd123!'."],
      "related_tools": ["random_password_tool"]
    }
  },
  {
    "name": "regex_test_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["regex", "regular expression", "pattern matching", "text processing"],
    "input": {
      "pattern": {
        "type": "str",
        "description": "The regular expression pattern."
      },
      "text": {
        "type": "str",
        "description": "The text string to test the pattern against."
      }
    },
    "output": {
      "matches": {
        "type": "list[str]",
        "description": "A list of all substrings that match the regex pattern."
      }
    },
    "description": "Tests regex pattern against text.",
    "keywords": ["regex", "test", "pattern", "match", "text"],
    "meta": {
      "usage_examples": ["Test the regex pattern '\\d+' against the text 'User ID: 123, Item Code: AB456'."],
      "related_tools": ["log_parser_tool", "extract_emails_tool"]
    }
  },
  {
    "name": "json_validator_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["json", "validation", "data format", "syntax check"],
    "input": {
      "json_string": {
        "type": "str",
        "description": "The JSON string to validate."
      }
    },
    "output": {
      "is_valid": {
        "type": "bool",
        "description": "True if the JSON string is well-formed, False otherwise."
      },
      "error": {
        "type": "str",
        "description": "An error message if the JSON is invalid, otherwise empty or null."
      }
    },
    "description": "Validates JSON string format.",
    "keywords": ["json", "validate", "format", "check", "syntax"],
    "meta": {
      "usage_examples": ["Validate the JSON string '{\"name\": \"John\", \"age\": 30}'.", "Check if '{\"name\": \"Jane\" \"age\": 25}' is valid JSON."],
      "related_tools": ["xml_validator_tool", "parse_csv_tool"]
    }
  },
  {
    "name": "xml_validator_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["xml", "validation", "data format", "syntax check"],
    "input": {
      "xml_string": {
        "type": "str",
        "description": "The XML string to validate."
      }
    },
    "output": {
      "is_valid": {
        "type": "bool",
        "description": "True if the XML string is well-formed, False otherwise."
      },
      "error": {
        "type": "str",
        "description": "An error message if the XML is invalid, otherwise empty or null."
      }
    },
    "description": "Validates XML string format.",
    "keywords": ["xml", "validate", "format", "check", "syntax"],
    "meta": {
      "usage_examples": ["Validate the XML string '<note><to>User</to><from>System</from></note>'."],
      "related_tools": ["json_validator_tool", "parse_html_tool"]
    }
  },
  {
    "name": "markdown_to_html_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["markdown", "html", "conversion", "text formatting"],
    "input": {
      "markdown": {
        "type": "str",
        "description": "The Markdown formatted text string."
      }
    },
    "output": {
      "html": {
        "type": "str",
        "description": "The converted HTML string."
      }
    },
    "description": "Converts Markdown text to HTML.",
    "keywords": ["markdown", "html", "convert", "format", "text"],
    "meta": {
      "usage_examples": ["Convert the Markdown content of 'README.md' to HTML for web display."],
      "related_tools": ["html_to_text_tool"]
    }
  },
  {
    "name": "html_to_text_tool",
    "category": "Web Scraping",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["html parsing", "text extraction", "content cleaning"],
    "input": {
      "html": {
        "type": "str",
        "description": "The HTML string to convert."
      }
    },
    "output": {
      "text": {
        "type": "str",
        "description": "The extracted plain text content from the HTML."
      }
    },
    "description": "Extracts plain text from HTML.",
    "keywords": ["html", "text", "extract", "plain", "convert"],
    "meta": {
      "usage_examples": ["Extract the textual content from an HTML email, removing all tags."],
      "related_tools": ["markdown_to_html_tool", "parse_html_tool"]
    }
  },
  {
    "name": "css_minify_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["css", "minification", "web optimization", "code compression"],
    "input": {
      "css": {
        "type": "str",
        "description": "The CSS code string to minify."
      }
    },
    "output": {
      "minified": {
        "type": "str",
        "description": "The minified CSS code string with unnecessary characters removed."
      }
    },
    "description": "Minifies CSS code by removing whitespace.",
    "keywords": ["css", "minify", "compress", "optimize", "code"],
    "meta": {
      "usage_examples": ["Minify 'styles.css' to reduce its file size for faster web loading."],
      "related_tools": ["js_minify_tool"]
    }
  },
  {
    "name": "js_minify_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["javascript", "minification", "web optimization", "code compression"],
    "input": {
      "javascript": {
        "type": "str",
        "description": "The JavaScript code string to minify."
      }
    },
    "output": {
      "minified": {
        "type": "str",
        "description": "The minified JavaScript code string."
      }
    },
    "description": "Minifies JavaScript code.",
    "keywords": ["javascript", "minify", "compress", "optimize", "code"],
    "meta": {
      "usage_examples": ["Minify 'script.js' to improve website performance."],
      "related_tools": ["css_minify_tool", "code_formatter_tool"]
    }
  },
  {
    "name": "code_formatter_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["code formatting", "beautifier", "linter", "developer productivity"],
    "input": {
      "code": {
        "type": "str",
        "description": "The source code string to format."
      },
      "language": {
        "type": "str",
        "description": "The programming language of the code (e.g., 'python', 'javascript', 'java')."
      }
    },
    "output": {
      "formatted": {
        "type": "str",
        "description": "The code string formatted with proper indentation and style according to language conventions."
      }
    },
    "description": "Formats code with proper indentation.",
    "keywords": ["code", "format", "indent", "style", "beautify"],
    "meta": {
      "usage_examples": ["Format the Python script 'analysis.py' to follow PEP 8 guidelines."],
      "related_tools": ["syntax_highlighter_tool", "summarize_code_tool"]
    }
  },
  {
    "name": "syntax_highlighter_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["syntax highlighting", "code display", "developer tool"],
    "input": {
      "code": {
        "type": "str",
        "description": "The source code string."
      },
      "language": {
        "type": "str",
        "description": "The programming language of the code (e.g., 'python', 'javascript', 'html')."
      }
    },
    "output": {
      "highlighted": {
        "type": "str",
        "description": "The code string with syntax highlighting markup (e.g., HTML with CSS classes for different tokens)."
      }
    },
    "description": "Adds syntax highlighting to code.",
    "keywords": ["syntax", "highlight", "code", "color", "format"],
    "meta": {
      "usage_examples": ["Generate HTML with syntax highlighting for a Python code snippet to display on a webpage."],
      "related_tools": ["code_formatter_tool", "markdown_to_html_tool"]
    }
  },
  {
    "name": "diff_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text comparison", "difference analysis", "version control aid"],
    "input": {
      "text1": {
        "type": "str",
        "description": "The first text string or file content."
      },
      "text2": {
        "type": "str",
        "description": "The second text string or file content to compare against."
      }
    },
    "output": {
      "diff": {
        "type": "str",
        "description": "A string representing the differences between the two texts (e.g., in unified diff format)."
      }
    },
    "description": "Shows differences between two texts.",
    "keywords": ["diff", "compare", "text", "changes", "difference"],
    "meta": {
      "usage_examples": ["Show the differences between 'file_v1.txt' and 'file_v2.txt'."],
      "related_tools": ["compare_text_tool", "merge_conflict_resolver_tool"]
    }
  },
  {
    "name": "merge_conflict_resolver_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["version control", "git helper", "conflict resolution"],
    "input": {
      "conflicted_text": {
        "type": "str",
        "description": "The text content containing merge conflict markers (e.g., <<<<<<<, =======, >>>>>>>)."
      }
    },
    "output": {
      "resolved": {
        "type": "str",
        "description": "The text with conflicts potentially resolved or suggestions for resolution. (Actual resolution might require user intervention based on tool's capability)."
      }
    },
    "description": "Helps resolve merge conflicts in text.",
    "keywords": ["merge", "conflict", "resolve", "git", "text"],
    "meta": {
      "usage_examples": ["Attempt to automatically resolve or provide suggestions for merge conflicts in 'conflicted_file.py'."],
      "related_tools": ["diff_tool"]
    }
  },
  {
    "name": "schedule_event_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["calendar management", "scheduling", "event planning"],
    "input": {
      "title": {
        "type": "str",
        "description": "The title or name of the event."
      },
      "date": {
        "type": "str",
        "description": "The date of the event (e.g., 'YYYY-MM-DD')."
      },
      "time": {
        "type": "str",
        "description": "The time of the event (e.g., 'HH:MM', '14:30')."
      },
      "location": {
        "type": "str",
        "description": "Optional: The location of the event."
      }
    },
    "output": {
      "event_id": {
        "type": "str",
        "description": "An identifier for the scheduled event, if successful."
      }
    },
    "description": "Schedules a calendar event with title, date, time, and location.",
    "keywords": ["schedule", "event", "calendar", "meeting", "reminder"],
    "meta": {
      "usage_examples": ["Schedule a meeting titled 'Project Sync' for '2024-08-01' at '10:00 AM' in 'Conference Room B'."],
      "related_tools": ["create_calendar_event_tool", "deadline_reminder_tool", "meeting_scheduler_tool"]
    }
  },
  {
    "name": "todo_list_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["task management", "to-do list", "organization"],
    "input": {
      "tasks": {
        "type": "list[str]",
        "description": "A list of task descriptions."
      }
    },
    "output": {
      "todo_id": {
        "type": "str",
        "description": "An identifier for the created to-do list, if successful."
      }
    },
    "description": "Creates a to-do list from a set of tasks.",
    "keywords": ["todo", "list", "tasks", "organize", "plan", "overdue", "reminder", "deadline", "responsible"],
    "meta": {
      "usage_examples": ["Create a to-do list with tasks: 'Finish report', 'Email team', 'Schedule follow-up'."],
      "related_tools": ["project_tracker_tool", "deadline_reminder_tool"]
    }
  },
  {
    "name": "deadline_reminder_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["reminder", "task management", "notification"],
    "input": {
      "task": {
        "type": "str",
        "description": "The description of the task."
      },
      "deadline": {
        "type": "str",
        "description": "The deadline for the task (e.g., 'YYYY-MM-DD HH:MM', 'Tomorrow 5 PM')."
      }
    },
    "output": {
      "reminder_id": {
        "type": "str",
        "description": "An identifier for the set reminder, if successful."
      }
    },
    "description": "Sets a reminder for a task with a deadline.",
    "keywords": ["reminder", "deadline", "task", "alert", "notify", "overdue", "responsible"],
    "meta": {
      "usage_examples": ["Set a reminder for 'Submit project proposal' by '2024-07-25 17:00'."],
      "related_tools": ["schedule_event_tool", "overdue_task_notifier_tool"]
    }
  },
  {
    "name": "summarize_webpage_tool",
    "category": "Web Scraping",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["web content summarization", "nlp", "information extraction"],
    "input": {
      "url": {
        "type": "str",
        "description": "The URL of the webpage to summarize."
      }
    },
    "output": {
      "summary": {
        "type": "str",
        "description": "A summary of the main content of the webpage."
      }
    },
    "description": "Summarizes the main content of a webpage.",
    "keywords": ["summarize", "webpage", "url", "content", "extract"],
    "meta": {
      "usage_examples": ["Summarize the article at 'https://example.com/news/latest-tech'."],
      "related_tools": ["fetch_website_text_tool", "summarize_text_tool"]
    }
  },
  {
    "name": "extract_references_tool",
    "category": "Academic & Research",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["citation extraction", "bibliography tool", "research aid", "nlp"],
    "input": {
      "text": {
        "type": "str",
        "description": "The academic text or paper content from which to extract references."
      }
    },
    "output": {
      "references": {
        "type": "list[str]",
        "description": "A list of extracted references or citations."
      }
    },
    "description": "Extracts references or citations from academic text.",
    "keywords": ["extract", "references", "citations", "academic", "text"],
    "meta": {
      "usage_examples": ["Extract all references from the provided research paper on quantum physics."],
      "related_tools": ["find_scholar_articles_tool", "citation_formatter_tool"]
    }
  },
  {
    "name": "brainstorm_ideas_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["idea generation", "creativity tool", "brainstorming"],
    "input": {
      "topic": {
        "type": "str",
        "description": "The topic or problem for which to brainstorm ideas."
      }
    },
    "output": {
      "ideas": {
        "type": "list[str]",
        "description": "A list of generated creative ideas related to the topic."
      }
    },
    "description": "Generates a list of creative ideas for a given topic.",
    "keywords": ["brainstorm", "ideas", "creative", "topic", "generate"],
    "meta": {
      "usage_examples": ["Brainstorm ideas for a new mobile application for fitness tracking."],
      "related_tools": ["generate_prompt_tool"]
    }
  },
  {
    "name": "generate_study_plan_tool",
    "category": "Academic & Research",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["study planning", "education tool", "schedule generation"],
    "input": {
      "subject": {
        "type": "str",
        "description": "The subject or topic to create a study plan for."
      },
      "duration_days": {
        "type": "int",
        "description": "The total number of days available for study."
      }
    },
    "output": {
      "plan": {
        "type": "list[dict]",
        "description": "A structured study plan, possibly a list of daily tasks or topics with allocated time."
      }
    },
    "description": "Creates a structured study plan for a subject over a number of days.",
    "keywords": ["study", "plan", "subject", "schedule", "days"],
    "meta": {
      "usage_examples": ["Generate a 7-day study plan for the 'Introduction to Calculus' exam."],
      "related_tools": ["todo_list_tool", "schedule_event_tool", "syllabus_analyzer_tool"]
    }
  },
  {
    "name": "find_scholar_articles_tool",
    "category": "Academic & Research",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["research tool", "literature search", "academic database"],
    "input": {
      "query": {
        "type": "str",
        "description": "The research query or keywords to search for scholarly articles."
      }
    },
    "output": {
      "articles": {
        "type": "list[dict]",
        "description": "A list of relevant scholarly articles, each with details like title, authors, abstract, and link."
      }
    },
    "description": "Finds relevant scholarly articles for a research query.",
    "keywords": ["find", "scholar", "articles", "research", "query"],
    "meta": {
      "usage_examples": ["Find scholarly articles on 'machine learning applications in healthcare' published in the last 5 years."],
      "related_tools": ["arxiv_search_tool", "extract_references_tool"]
    }
  },
  {
    "name": "motivational_quote_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["inspiration", "quotes", "motivation"],
    "input": {
      "topic": {
        "type": "str",
        "description": "Optional: A topic for the motivational quote (e.g., 'perseverance', 'learning'). If not provided, a general quote may be returned."
      }
    },
    "output": {
      "quote": {
        "type": "str",
        "description": "A motivational quote."
      }
    },
    "description": "Returns a motivational quote for a given topic.",
    "keywords": ["motivational", "quote", "inspire", "topic", "encourage"],
    "meta": {
      "usage_examples": ["Get a motivational quote about 'success'.", "Find an inspiring quote for today."],
      "related_tools": []
    }
  },
  {
    "name": "meeting_minutes_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["meeting documentation", "nlp", "transcript processing"],
    "input": {
      "transcript": {
        "type": "str",
        "description": "The full transcript of the meeting."
      }
    },
    "output": {
      "minutes": {
        "type": "str",
        "description": "Concise meeting minutes, including key decisions, action items, and attendees."
      }
    },
    "description": "Generates concise meeting minutes from a transcript.",
    "keywords": ["meeting", "minutes", "transcript", "summary", "notes"],
    "meta": {
      "usage_examples": ["Generate meeting minutes from the transcript of the weekly team sync."],
      "related_tools": ["summarize_meeting_tool", "speech_to_text_tool"]
    }
  },
  {
    "name": "plagiarism_checker_tool",
    "category": "Academic & Research",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["originality check", "academic integrity", "content verification"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text content to check for plagiarism."
      }
    },
    "output": {
      "plagiarism_score": {
        "type": "float",
        "description": "A score indicating the likelihood of plagiarism (e.g., 0.0 to 1.0)."
      },
      "sources": {
        "type": "list[str]",
        "description": "A list of potential source URLs or documents if plagiarism is detected."
      }
    },
    "description": "Checks text for plagiarism and lists matching sources.",
    "keywords": ["plagiarism", "check", "sources", "text", "originality"],
    "meta": {
      "usage_examples": ["Check the essay for plagiarism before submission."],
      "related_tools": ["compare_text_tool", "diff_tool"]
    }
  },
  {
    "name": "flashcard_generator_tool",
    "category": "Academic & Research",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["study aid", "learning tool", "flashcards"],
    "input": {
      "notes": {
        "type": "str",
        "description": "The study notes or text content to generate flashcards from (e.g., term-definition pairs, question-answer format)."
      }
    },
    "output": {
      "flashcards": {
        "type": "list[dict]",
        "description": "A list of flashcards, where each flashcard is a dictionary with 'front' and 'back' keys."
      }
    },
    "description": "Generates flashcards from study notes.",
    "keywords": ["flashcard", "generate", "study", "notes", "quiz"],
    "meta": {
      "usage_examples": ["Generate flashcards from the vocabulary list: 'apple:pomme, banana:banane'."],
      "related_tools": ["quiz_generator_tool", "generate_study_plan_tool"]
    }
  },
  {
    "name": "quiz_generator_tool",
    "category": "Academic & Research",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["assessment tool", "learning aid", "quiz creation"],
    "input": {
      "topic": {
        "type": "str",
        "description": "The topic or subject matter for the quiz."
      },
      "num_questions": {
        "type": "int",
        "description": "The desired number of questions in the quiz."
      }
    },
    "output": {
      "quiz": {
        "type": "list[dict]",
        "description": "A list of quiz questions, where each question is a dictionary with 'question', 'options' (optional), and 'answer'."
      }
    },
    "description": "Creates a quiz on a topic with a specified number of questions.",
    "keywords": ["quiz", "generate", "topic", "questions", "test"],
    "meta": {
      "usage_examples": ["Generate a 5-question quiz on 'World War II History'."],
      "related_tools": ["flashcard_generator_tool"]
    }
  },
  {
    "name": "citation_formatter_tool",
    "category": "Academic & Research",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["citation management", "bibliography", "academic writing", "apa", "mla"],
    "input": {
      "reference": {
        "type": "str",
        "description": "The raw reference string or structured information (e.g., author, title, year)."
      },
      "style": {
        "type": "str",
        "description": "The target citation style (e.g., 'APA', 'MLA', 'Chicago', 'Harvard')."
      }
    },
    "output": {
      "formatted_citation": {
        "type": "str",
        "description": "The reference formatted according to the specified citation style."
      }
    },
    "description": "Formats a reference in a given citation style (APA, MLA, etc).",
    "keywords": ["citation", "format", "reference", "style", "bibliography"],
    "meta": {
      "usage_examples": ["Format the reference 'Doe, J. (2023). My Awesome Book. Publisher.' into APA style."],
      "related_tools": ["extract_references_tool", "find_scholar_articles_tool"]
    }
  },
  {
    "name": "syllabus_analyzer_tool",
    "category": "Academic & Research",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["education tool", "syllabus parsing", "academic planning"],
    "input": {
      "syllabus_text": {
        "type": "str",
        "description": "The full text content of the course syllabus."
      }
    },
    "output": {
      "key_dates": {
        "type": "list[str]",
        "description": "A list of key dates extracted from the syllabus (e.g., exam dates, assignment deadlines)."
      },
      "topics": {
        "type": "list[str]",
        "description": "A list of main topics or modules covered in the course."
      }
    },
    "description": "Extracts key dates and topics from a syllabus.",
    "keywords": ["syllabus", "analyze", "dates", "topics", "extract"],
    "meta": {
      "usage_examples": ["Analyze the provided syllabus for 'CS101' to extract exam dates and weekly topics."],
      "related_tools": ["generate_study_plan_tool", "schedule_event_tool"]
    }
  },
  {
    "name": "focus_timer_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["time management", "pomodoro technique", "productivity booster"],
    "input": {
      "duration_minutes": {
        "type": "int",
        "description": "The duration of the focus session in minutes."
      }
    },
    "output": {
      "timer_id": {
        "type": "str",
        "description": "An identifier for the started timer, if successful. (The tool might run in the background or provide notifications)."
      }
    },
    "description": "Starts a focus timer for a set duration.",
    "keywords": ["focus", "timer", "productivity", "pomodoro", "duration"],
    "meta": {
      "usage_examples": ["Start a 25-minute focus timer for a Pomodoro session."],
      "related_tools": ["distraction_blocker_tool", "break_reminder_tool"]
    }
  },
  {
    "name": "distraction_blocker_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["focus aid", "website blocker", "digital wellbeing"],
    "input": {
      "websites": {
        "type": "list[str]",
        "description": "A list of website domain names to block (e.g., ['facebook.com', 'twitter.com'])."
      },
      "duration_minutes": {
        "type": "int",
        "description": "The duration in minutes for which to block the websites."
      }
    },
    "output": {
      "block_id": {
        "type": "str",
        "description": "An identifier for the active blocking session, if successful."
      }
    },
    "description": "Blocks distracting websites for a set time.",
    "keywords": ["distraction", "block", "websites", "focus", "productivity"],
    "meta": {
      "usage_examples": ["Block 'youtube.com' and 'reddit.com' for the next 60 minutes to focus on work."],
      "related_tools": ["focus_timer_tool"]
    }
  },
  {
    "name": "daily_journal_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["journaling", "personal logging", "reflection"],
    "input": {
      "entry": {
        "type": "str",
        "description": "The text content of the journal entry."
      }
    },
    "output": {
      "journal_id": {
        "type": "str",
        "description": "An identifier for the saved journal entry, if successful."
      }
    },
    "description": "Saves a daily journal entry.",
    "keywords": ["journal", "daily", "entry", "log", "reflection"],
    "meta": {
      "usage_examples": ["Save today's journal entry about my progress on the project."],
      "related_tools": ["gratitude_logger_tool", "mood_tracker_tool"]
    }
  },
  {
    "name": "project_tracker_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["project management", "task tracking", "progress monitoring"],
    "input": {
      "project_name": {
        "type": "str",
        "description": "The name of the project."
      },
      "tasks": {
        "type": "list[str]",
        "description": "A list of tasks associated with the project."
      }
    },
    "output": {
      "tracker_id": {
        "type": "str",
        "description": "An identifier for the created project tracker, if successful."
      }
    },
    "description": "Creates a tracker for project tasks.",
    "keywords": ["project", "tracker", "tasks", "progress", "manage"],
    "meta": {
      "usage_examples": ["Create a project tracker for 'Website Redesign' with tasks: 'Design mockups', 'Develop frontend', 'Test backend'."],
      "related_tools": ["todo_list_tool", "time_tracker_tool", "generate_gantt_chart_tool"]
    }
  },
  {
    "name": "time_tracker_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["time management", "activity logging", "productivity analysis"],
    "input": {
      "activity": {
        "type": "str",
        "description": "The name or description of the activity being tracked."
      },
      "duration_minutes": {
        "type": "int",
        "description": "The duration of the activity in minutes."
      }
    },
    "output": {
      "log_id": {
        "type": "str",
        "description": "An identifier for the logged time entry, if successful."
      }
    },
    "description": "Logs time spent on an activity.",
    "keywords": ["time", "tracker", "activity", "log", "duration"],
    "meta": {
      "usage_examples": ["Log 120 minutes spent on 'Coding feature X'."],
      "related_tools": ["project_tracker_tool", "focus_timer_tool"]
    }
  },
  {
    "name": "goal_setter_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["goal setting", "personal development", "achievement tracking"],
    "input": {
      "goal": {
        "type": "str",
        "description": "The description of the personal or academic goal."
      },
      "deadline": {
        "type": "str",
        "description": "The target deadline for achieving the goal (e.g., 'YYYY-MM-DD')."
      }
    },
    "output": {
      "goal_id": {
        "type": "str",
        "description": "An identifier for the set goal, if successful."
      }
    },
    "description": "Sets a personal or academic goal with a deadline.",
    "keywords": ["goal", "set", "deadline", "personal", "academic"],
    "meta": {
      "usage_examples": ["Set a goal to 'Learn Python programming basics' by '2024-12-31'."],
      "related_tools": ["project_tracker_tool", "deadline_reminder_tool"]
    }
  },
  {
    "name": "meeting_scheduler_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["calendar management", "meeting coordination", "scheduling"],
    "input": {
      "participants": {
        "type": "list[str]",
        "description": "A list of email addresses or names of the meeting participants."
      },
      "date": {
        "type": "str",
        "description": "The proposed date for the meeting."
      },
      "time": {
        "type": "str",
        "description": "The proposed time for the meeting."
      }
    },
    "output": {
      "meeting_id": {
        "type": "str",
        "description": "An identifier for the scheduled meeting or sent invitation, if successful."
      }
    },
    "description": "Schedules a meeting with participants.",
    "keywords": ["meeting", "schedule", "participants", "calendar", "invite"],
    "meta": {
      "usage_examples": ["Schedule a meeting with 'john.doe@example.com' and 'jane.smith@example.com' for '2024-07-28' at '15:00'."],
      "related_tools": ["schedule_event_tool", "check_meeting_conflict_tool"]
    }
  },
  {
    "name": "feedback_generator_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["constructive feedback", "ai writing aid", "review tool"],
    "input": {
      "work": {
        "type": "str",
        "description": "The text content of the work to be reviewed (e.g., essay, report, code snippet)."
      },
      "criteria": {
        "type": "str",
        "description": "Optional: Specific criteria or points to focus on for feedback."
      }
    },
    "output": {
      "feedback": {
        "type": "str",
        "description": "Generated constructive feedback on the submitted work."
      }
    },
    "description": "Generates constructive feedback for submitted work.",
    "keywords": ["feedback", "generate", "work", "criteria", "review"],
    "meta": {
      "usage_examples": ["Generate feedback for the submitted essay on 'The Impact of AI', focusing on clarity and argumentation."],
      "related_tools": ["polite_rephraser_tool"]
    }
  },
  {
    "name": "polite_rephraser_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["tone adjustment", "professional communication", "text refinement", "nlp"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string to be rephrased."
      }
    },
    "output": {
      "polite_text": {
        "type": "str",
        "description": "The rephrased text with a more polite and professional tone."
      }
    },
    "description": "Rephrases text to be more polite and professional.",
    "keywords": ["polite", "rephrase", "text", "professional", "tone"],
    "meta": {
      "usage_examples": ["Rephrase the sentence 'Your idea is bad' to be more constructive and polite."],
      "related_tools": ["feedback_generator_tool", "generate_email_body_tool"]
    }
  },
  {
    "name": "group_poll_creator_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["polling tool", "decision making", "group collaboration"],
    "input": {
      "question": {
        "type": "str",
        "description": "The question for the poll."
      },
      "options": {
        "type": "list[str]",
        "description": "A list of options for the poll."
      }
    },
    "output": {
      "poll_id": {
        "type": "str",
        "description": "An identifier or link for the created poll, if successful."
      }
    },
    "description": "Creates a poll for group decision-making.",
    "keywords": ["group", "poll", "create", "decision", "vote"],
    "meta": {
      "usage_examples": ["Create a poll: 'Where should we go for the team lunch?' with options ['Italian Place', 'Mexican Grill', 'Sushi Bar']."],
      "related_tools": ["rsvp_tracker_tool"]
    }
  },
  {
    "name": "rsvp_tracker_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["event management", "attendance tracking", "rsvp collection"],
    "input": {
      "event": {
        "type": "str",
        "description": "The name or description of the event."
      },
      "invitees": {
        "type": "list[str]",
        "description": "A list of invitee names or email addresses."
      }
    },
    "output": {
      "rsvp_list": {
        "type": "list[dict]",
        "description": "A list of invitees with their RSVP status (e.g., {'name': 'John Doe', 'status': 'Attending'})."
      }
    },
    "description": "Tracks RSVPs for an event.",
    "keywords": ["rsvp", "track", "event", "invitees", "attendance"],
    "meta": {
      "usage_examples": ["Track RSVPs for the 'Company Anniversary Party' for the invited employees."],
      "related_tools": ["generate_invite_tool", "send_email_tool"]
    }
  },
  {
    "name": "image_to_text_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["ocr", "optical character recognition", "image processing", "text extraction"],
    "input": {
      "image_path": {
        "type": "str",
        "description": "The file path of the image from which to extract text."
      }
    },
    "output": {
      "text": {
        "type": "str",
        "description": "The text extracted from the image using OCR."
      }
    },
    "description": "Extracts text from an image using OCR.",
    "keywords": ["image", "text", "ocr", "extract", "photo"],
    "meta": {
      "usage_examples": ["Extract text from a scanned document image 'scan.png'."],
      "related_tools": ["read_pdf_tool", "extract_text_tool"]
    }
  },
  {
    "name": "audio_summarizer_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["audio processing", "summarization", "speech analysis", "nlp"],
    "input": {
      "audio_path": {
        "type": "str",
        "description": "The file path of the audio file to be summarized."
      }
    },
    "output": {
      "summary": {
        "type": "str",
        "description": "A textual summary of the audio file's content."
      }
    },
    "description": "Summarizes the content of an audio file.",
    "keywords": ["audio", "summarize", "content", "file", "speech"],
    "meta": {
      "usage_examples": ["Summarize the content of the lecture recording 'lecture.mp3'."],
      "related_tools": ["speech_to_text_tool", "summarize_text_tool", "video_summarizer_tool"]
    }
  },
  {
    "name": "video_summarizer_tool",
    "category": "AI & NLP",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["video processing", "summarization", "content analysis", "nlp"],
    "input": {
      "video_path": {
        "type": "str",
        "description": "The file path of the video file to be summarized."
      }
    },
    "output": {
      "summary": {
        "type": "str",
        "description": "A textual summary of the video file's content (e.g., based on audio track or visual elements if supported)."
      }
    },
    "description": "Summarizes the content of a video file.",
    "keywords": ["video", "summarize", "content", "file", "movie"],
    "meta": {
      "usage_examples": ["Summarize the key points from the webinar recording 'webinar.mp4'."],
      "related_tools": ["audio_summarizer_tool", "speech_to_text_tool", "video_info_tool"]
    }
  },
  {
    "name": "file_converter_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file conversion", "format change", "document utility", "media utility"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The file path of the file to be converted."
      },
      "to_format": {
        "type": "str",
        "description": "The target format to convert to (e.g., 'pdf', 'docx', 'jpg', 'png', 'mp3')."
      }
    },
    "output": {
      "converted_path": {
        "type": "str",
        "description": "The file path of the converted file."
      }
    },
    "description": "Converts a file to a different format.",
    "keywords": ["file", "convert", "format", "type", "change"],
    "meta": {
      "usage_examples": ["Convert 'document.txt' to 'document.pdf'.", "Convert 'image.bmp' to 'image.png'."],
      "related_tools": ["audio_convert_tool", "image_resize_tool"]
    }
  },
  {
    "name": "file_comparer_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file comparison", "diff utility", "version control aid"],
    "input": {
      "file1": {
        "type": "str",
        "description": "The file path of the first file."
      },
      "file2": {
        "type": "str",
        "description": "The file path of the second file to compare against."
      }
    },
    "output": {
      "differences": {
        "type": "str",
        "description": "A textual representation of the differences between the two files."
      }
    },
    "description": "Compares two files and lists differences.",
    "keywords": ["file", "compare", "differences", "content", "check"],
    "meta": {
      "usage_examples": ["Compare 'config_v1.json' with 'config_v2.json' to see the changes."],
      "related_tools": ["diff_tool", "checksum_tool"]
    }
  },
  {
    "name": "graph_plotter_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "data visualization", "plotting", "reporting"],
    "input": {
      "data": {
        "type": "list[float]",
        "description": "A list of numerical data points or a list of lists for multi-series plots."
      },
      "type": {
        "type": "str",
        "description": "The type of graph to plot (e.g., 'line', 'bar', 'scatter', 'histogram')."
      },
      "output_format": {
        "type": "str",
        "description": "The desired output format for the graph image (e.g., 'png', 'jpg', 'svg')."
      }
    },
    "output": {
      "graph_path": {
        "type": "str",
        "description": "The file path of the generated graph image."
      }
    },
    "description": "Plots a graph from data (line, bar, etc) and can export as PNG or other formats.",
    "keywords": ["graph", "plot", "data", "visualize", "chart", "png"],
    "meta": {
      "usage_examples": ["Plot a line graph of monthly sales data and save as 'sales_trend.png'.", "Generate a bar chart for product category distribution."],
      "related_tools": ["data_visualizer_tool", "generate_pie_chart_tool", "generate_scatter_plot_tool"]
    }
  },
  {
    "name": "equation_solver_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["math solver", "algebra", "equation calculation"],
    "input": {
      "equation": {
        "type": "str",
        "description": "The mathematical equation to solve (e.g., '2*x + 5 = 15', 'x^2 - 4 = 0')."
      }
    },
    "output": {
      "solution": {
        "type": "str",
        "description": "The solution(s) to the equation, or an indication if no solution/multiple solutions exist."
      }
    },
    "description": "Solves a mathematical equation.",
    "keywords": ["equation", "solve", "math", "calculate", "solution"],
    "meta": {
      "usage_examples": ["Solve the equation '3*x - 7 = 2' for x."],
      "related_tools": ["percentage_calculator_tool"]
    }
  },
  {
    "name": "data_visualizer_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["data visualization", "charting tool", "graph generation"],
    "input": {
      "data": {
        "type": "list[dict]",
        "description": "The data to visualize, typically a list of dictionaries or a structured array."
      },
      "chart_type": {
        "type": "str",
        "description": "The type of chart to generate (e.g., 'bar_chart', 'line_plot', 'scatter_matrix', 'heatmap')."
      }
    },
    "output": {
      "chart_path": {
        "type": "str",
        "description": "The file path of the generated chart image or interactive visualization."
      }
    },
    "description": "Visualizes data as a chart or graph.",
    "keywords": ["data", "visualize", "chart", "graph", "plot"],
    "meta": {
      "usage_examples": ["Visualize the sales data as a bar chart showing sales per quarter."],
      "related_tools": ["graph_plotter_tool", "generate_pie_chart_tool"]
    }
  },
  {
    "name": "advanced_unit_converter_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["unit conversion", "measurement", "multi-unit support"],
    "input": {
      "value": {
        "type": "float",
        "description": "The numerical value to convert."
      },
      "from_unit": {
        "type": "str",
        "description": "The unit of the input value (supports a wide range of units across categories like length, weight, volume, temperature, etc.)."
      },
      "to_unit": {
        "type": "str",
        "description": "The target unit for conversion."
      }
    },
    "output": {
      "converted": {
        "type": "float",
        "description": "The converted value in the target unit."
      }
    },
    "description": "Converts between a wide range of units.",
    "keywords": ["unit", "convert", "advanced", "value", "measurement"],
    "meta": {
      "usage_examples": ["Convert 100 pounds per square inch (psi) to kilopascals (kPa).", "Convert 5 nautical miles to kilometers."],
      "related_tools": ["temperature_convert_tool", "distance_convert_tool", "weight_convert_tool", "volume_convert_tool"]
    }
  },
  {
    "name": "gpa_calculator_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["academic tool", "gpa calculation", "grade point average"],
    "input": {
      "grades": {
        "type": "list[float]",
        "description": "A list of grades received (e.g., on a 4.0 scale, or percentage that can be mapped)."
      },
      "credits": {
        "type": "list[float]",
        "description": "A list of corresponding credit hours for each grade."
      }
    },
    "output": {
      "gpa": {
        "type": "float",
        "description": "The calculated Grade Point Average."
      }
    },
    "description": "Calculates GPA from grades and credits.",
    "keywords": ["gpa", "calculate", "grades", "credits", "average"],
    "meta": {
      "usage_examples": ["Calculate GPA for grades [4.0, 3.7, 3.3] with credits [3, 3, 4]."],
      "related_tools": ["generate_study_plan_tool"]
    }
  },
  {
    "name": "mood_tracker_tool",
    "category": "Wellbeing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["mental health", "mood logging", "personal wellness"],
    "input": {
      "mood": {
        "type": "str",
        "description": "A word or phrase describing the current mood (e.g., 'Happy', 'Stressed', 'Productive')."
      },
      "notes": {
        "type": "str",
        "description": "Optional: Additional notes or context about the mood."
      }
    },
    "output": {
      "entry_id": {
        "type": "str",
        "description": "An identifier for the logged mood entry."
      }
    },
    "description": "Logs mood and notes for wellbeing tracking.",
    "keywords": ["mood", "track", "wellbeing", "log", "notes"],
    "meta": {
      "usage_examples": ["Log current mood as 'Content' with notes 'Finished a major task'."],
      "related_tools": ["daily_journal_tool", "gratitude_logger_tool", "stress_level_estimator_tool"]
    }
  },
  {
    "name": "break_reminder_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["time management", "work break", "health reminder"],
    "input": {
      "interval_minutes": {
        "type": "int",
        "description": "The interval in minutes for break reminders (e.g., 60 for a reminder every hour)."
      }
    },
    "output": {
      "reminder_id": {
        "type": "str",
        "description": "An identifier for the set break reminder schedule."
      }
    },
    "description": "Sets a reminder to take regular breaks.",
    "keywords": ["break", "reminder", "interval", "rest", "notify"],
    "meta": {
      "usage_examples": ["Set a reminder to take a 5-minute break every 55 minutes."],
      "related_tools": ["focus_timer_tool", "healthy_habit_suggester_tool"]
    }
  },
  {
    "name": "healthy_habit_suggester_tool",
    "category": "Wellbeing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["health advice", "habit formation", "lifestyle suggestions"],
    "input": {
      "goal": {
        "type": "str",
        "description": "The health or wellbeing goal (e.g., 'Reduce stress', 'Improve sleep', 'Eat healthier')."
      }
    },
    "output": {
      "suggestions": {
        "type": "list[str]",
        "description": "A list of suggested healthy habits related to the goal."
      }
    },
    "description": "Suggests healthy habits based on a goal.",
    "keywords": ["healthy", "habit", "suggest", "goal", "wellbeing"],
    "meta": {
      "usage_examples": ["Suggest healthy habits for someone wanting to 'Increase daily physical activity'."],
      "related_tools": ["break_reminder_tool", "mood_tracker_tool"]
    }
  },
  {
    "name": "gratitude_logger_tool",
    "category": "Wellbeing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["positive psychology", "journaling", "mindfulness"],
    "input": {
      "entry": {
        "type": "str",
        "description": "The gratitude entry (e.g., 'Grateful for a sunny day')."
      }
    },
    "output": {
      "log_id": {
        "type": "str",
        "description": "An identifier for the logged gratitude entry."
      }
    },
    "description": "Logs a gratitude entry for positive psychology.",
    "keywords": ["gratitude", "log", "entry", "positive", "psychology"],
    "meta": {
      "usage_examples": ["Log gratitude: 'Thankful for supportive colleagues today.'"],
      "related_tools": ["daily_journal_tool", "mood_tracker_tool"]
    }
  },
  {
    "name": "stress_level_estimator_tool",
    "category": "Wellbeing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["mental health assessment", "stress management", "questionnaire"],
    "input": {
      "responses": {
        "type": "list[int]",
        "description": "A list of numerical responses to a standardized stress questionnaire (e.g., Perceived Stress Scale)."
      }
    },
    "output": {
      "stress_score": {
        "type": "float",
        "description": "An estimated stress score or level based on the responses."
      }
    },
    "description": "Estimates stress level based on questionnaire responses.",
    "keywords": ["stress", "level", "estimate", "questionnaire", "score"],
    "meta": {
      "usage_examples": ["Estimate stress level based on responses [2, 3, 1, 4, 2] to a 5-question survey."],
      "related_tools": ["mood_tracker_tool", "healthy_habit_suggester_tool"]
    }
  },
  {
    "name": "calculate_average_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["math", "statistics", "average", "mean"],
    "input": {
      "data": {
        "type": "list[float]",
        "description": "A list of numerical values."
      }
    },
    "output": {
      "average": {
        "type": "float",
        "description": "The calculated average (mean) of the numbers in the list."
      }
    },
    "description": "Calculates the average of a list of numbers.",
    "keywords": ["average", "mean", "calculate", "data", "calculateAverageTool"],
    "meta": {
      "usage_examples": ["Calculate the average score from the list [85, 90, 78, 92, 88]."],
      "related_tools": ["calculate_sum_tool", "calculate_median_tool", "summarize_numeric_tool"]
    }
  },
  {
    "name": "arxiv_search_tool",
    "category": "Academic & Research",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["research", "arxiv", "scientific papers", "literature search"],
    "input": {
      "query": {
        "type": "str",
        "description": "The search query or keywords for arXiv articles."
      }
    },
    "output": {
      "results": {
        "type": "list[dict]",
        "description": "A list of relevant articles from arXiv, including titles, authors, abstracts, and links."
      }
    },
    "description": "Searches arXiv for relevant articles.",
    "keywords": ["arxiv", "search", "articles", "papers", "arxivSearchTool"],
    "meta": {
      "usage_examples": ["Search arXiv for papers on 'quantum entanglement published in 2023'."],
      "related_tools": ["find_scholar_articles_tool", "extract_references_tool"]
    }
  },
  {
    "name": "save_to_markdown_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file writing", "markdown", "document creation", "reporting"],
    "input": {
      "content": {
        "type": "str",
        "description": "The text content to be saved in Markdown format."
      },
      "file_name": {
        "type": "str",
        "description": "The desired name for the output Markdown file (e.g., 'report.md')."
      }
    },
    "output": {
      "markdown_file": {
        "type": "str",
        "description": "The file path of the created Markdown file."
      }
    },
    "description": "Saves content to a Markdown (.md) file.",
    "keywords": ["save", "markdown", "file", "write", "saveToMarkdownTool"],
    "meta": {
      "usage_examples": ["Save the generated meeting notes as 'meeting_summary.md'."],
      "related_tools": ["generate_markdown_report_tool", "markdown_to_html_tool"]
    }
  },
  {
    "name": "convert_units_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["unit conversion", "measurement", "generic converter"],
    "input": {
      "value": {
        "type": "float",
        "description": "The numerical value to convert."
      },
      "from_unit": {
        "type": "str",
        "description": "The unit of the input value (e.g., 'kg', 'm', 'liter', 'Celsius')."
      },
      "to_unit": {
        "type": "str",
        "description": "The target unit for conversion."
      }
    },
    "output": {
      "converted": {
        "type": "float",
        "description": "The converted value in the target unit."
      }
    },
    "description": "Converts a value from one unit to another. This is a generic version; prefer specific converters like 'temperature_convert_tool' if available.",
    "keywords": ["convert", "units", "unit", "conversion", "convertUnitsTool"],
    "meta": {
      "usage_examples": ["Convert 10 inches to centimeters.", "Convert 2.5 gallons to liters."],
      "related_tools": ["advanced_unit_converter_tool", "temperature_convert_tool", "distance_convert_tool"]
    }
  },
  {
    "name": "parse_text_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text extraction", "file parsing", "content retrieval"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The path to the file (e.g., TXT, DOCX, PDF - depending on implementation) from which to extract plain text."
      }
    },
    "output": {
      "text": {
        "type": "str",
        "description": "The extracted plain text content from the file."
      }
    },
    "description": "Extracts plain text from a file. Similar to 'extract_text_tool', may have different underlying libraries or specificities.",
    "keywords": ["parse", "text", "extract", "file", "extractTextTool"],
    "meta": {
      "usage_examples": ["Parse the text content from 'document.txt'."],
      "related_tools": ["extract_text_tool", "read_pdf_tool"]
    }
  },
  {
    "name": "calculate_sum_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["math", "summation", "aggregation"],
    "input": {
      "data": {
        "type": "list[float]",
        "description": "A list of numerical values to sum up."
      }
    },
    "output": {
      "sum": {
        "type": "float",
        "description": "The total sum of the numbers in the list."
      }
    },
    "description": "Calculates the sum of a list of numbers.",
    "keywords": ["sum", "total", "calculate", "data", "calculateSumTool"],
    "meta": {
      "usage_examples": ["Calculate the sum of [10, 20, 30, 40]."],
      "related_tools": ["calculate_average_tool", "aggregate_data_tool"]
    }
  },
  {
    "name": "send_to_dashboard_tool",
    "category": "Reporting",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["data visualization", "dashboarding", "business intelligence"],
    "input": {
      "data": {
        "type": "dict",
        "description": "The data to be sent to the dashboard, typically structured as key-value pairs or a JSON object."
      },
      "dashboard_id": {
        "type": "str",
        "description": "The identifier of the target dashboard or visualization service."
      }
    },
    "output": {
      "status": {
        "type": "str",
        "description": "The status of the data sending operation (e.g., 'success', 'failed')."
      }
    },
    "description": "Sends data to a specified dashboard.",
    "keywords": ["send", "dashboard", "data", "report", "sendToDashboardTool"],
    "meta": {
      "usage_examples": ["Send the processed sales summary to the 'Sales_Performance_Dashboard'."],
      "related_tools": ["generate_html_report_tool", "graph_plotter_tool"]
    }
  },
  {
    "name": "read_applications_tool",
    "category": "Data Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["hr", "recruitment", "data extraction", "file parsing"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The path to the file containing job applications (e.g., CSV, JSON, or a folder of resumes)."
      }
    },
    "output": {
      "applications": {
        "type": "list[dict]",
        "description": "A list of dictionaries, where each dictionary represents a job application with extracted details."
      }
    },
    "description": "Reads job applications from a file.",
    "keywords": ["read", "applications", "job", "file", "readApplicationsTool"],
    "meta": {
      "usage_examples": ["Read all job applications from 'applications.csv'."],
      "related_tools": ["parse_csv_tool", "extract_text_tool", "extract_emails_tool"]
    }
  },
  {
    "name": "write_csv_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file writing", "csv generation", "data export"],
    "input": {
      "data": {
        "type": "list[dict]",
        "description": "A list of dictionaries, where each dictionary represents a row to be written to the CSV."
      },
      "file_name": {
        "type": "str",
        "description": "The desired name for the output CSV file (e.g., 'output_data.csv')."
      }
    },
    "output": {
      "csv_file": {
        "type": "str",
        "description": "The file path of the created CSV file."
      }
    },
    "description": "Writes data to a CSV file.",
    "keywords": ["write", "csv", "file", "save", "writeCSVTool"],
    "meta": {
      "usage_examples": ["Write the processed customer data to 'processed_customers.csv'."],
      "related_tools": ["parse_csv_tool", "generate_csv_report_tool"]
    }
  },
  {
    "name": "get_emails_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["email client", "inbox management", "message retrieval"],
    "input": {
      "count": {
        "type": "int",
        "description": "The number of most recent emails to retrieve."
      }
    },
    "output": {
      "emails": {
        "type": "list[dict]",
        "description": "A list of email objects, each containing details like sender, subject, body, and date."
      }
    },
    "description": "Retrieves the last N received emails.",
    "keywords": ["get", "emails", "retrieve", "inbox", "getEmailsTool"],
    "meta": {
      "usage_examples": ["Get the last 10 emails from the inbox."],
      "related_tools": ["send_email_tool", "extract_emails_tool"]
    }
  },
  {
    "name": "send_slack_message_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["slack integration", "team communication", "messaging"],
    "input": {
      "channel": {
        "type": "str",
        "description": "The Slack channel name or ID (e.g., '#general', 'C1234567890')."
      },
      "content": {
        "type": "str",
        "description": "The message content to send."
      }
    },
    "output": {
      "status": {
        "type": "str",
        "description": "The status of the message sending operation (e.g., 'sent', 'failed')."
      }
    },
    "description": "Sends a message to a Slack channel.",
    "keywords": ["send", "slack", "message", "channel"],
    "meta": {
      "usage_examples": ["Send a notification 'Deployment successful!' to the '#devops' Slack channel."],
      "related_tools": ["send_email_tool", "send_sms_tool"]
    }
  },
  {
    "name": "get_stock_data_tool",
    "category": "Finance",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["stock market", "financial data", "historical prices", "api integration"],
    "input": {
      "symbol": {
        "type": "str",
        "description": "The stock symbol (e.g., 'AAPL', 'GOOGL')."
      },
      "start_date": {
        "type": "str",
        "description": "The start date for the historical data (e.g., 'YYYY-MM-DD')."
      },
      "end_date": {
        "type": "str",
        "description": "The end date for the historical data (e.g., 'YYYY-MM-DD')."
      }
    },
    "output": {
      "prices": {
        "type": "list[float]",
        "description": "A list of stock prices (e.g., closing prices) for the symbol over the specified date range."
      }
    },
    "description": "Gets stock prices for a symbol over a date range.",
    "keywords": ["get", "stock", "data", "prices", "getStockDataTool"],
    "meta": {
      "usage_examples": ["Get historical stock prices for 'TSLA' from '2023-01-01' to '2023-12-31'."],
      "related_tools": ["fetch_stock_price_tool", "analyze_trend_tool"]
    }
  },
  {
    "name": "analyze_trend_tool",
    "category": "Data Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["trend analysis", "data interpretation", "statistical analysis"],
    "input": {
      "data": {
        "type": "list[float]",
        "description": "A list of numerical data points, typically ordered chronologically."
      }
    },
    "output": {
      "trend": {
        "type": "str",
        "description": "A description of the trend (e.g., 'positive', 'negative', 'neutral', 'upward', 'downward')."
      }
    },
    "description": "Analyzes a list of numbers and returns the trend (positive/negative/neutral).",
    "keywords": ["analyze", "trend", "data", "positive", "negative", "analyzeTrendTool"],
    "meta": {
      "usage_examples": ["Analyze the trend of monthly website visitors data: [1000, 1200, 1100, 1500, 1800]."],
      "related_tools": ["forecast_sales_tool", "summarize_numeric_tool"]
    }
  },
  {
    "name": "summarize_analysis_tool",
    "category": "Reporting",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["summary generation", "report writing", "nlp"],
    "input": {
      "analysis": {
        "type": "str",
        "description": "The detailed analysis text or report to be summarized."
      }
    },
    "output": {
      "summary": {
        "type": "str",
        "description": "A concise summary of the key findings or points from the analysis."
      }
    },
    "description": "Summarizes an analysis into key points.",
    "keywords": ["summarize", "analysis", "key points", "summary", "summarizeAnalysisTool"],
    "meta": {
      "usage_examples": ["Summarize the detailed market research analysis into a 3-bullet point summary."],
      "related_tools": ["summarize_text_tool", "generate_email_body_tool"]
    }
  },
  {
    "name": "compare_numbers_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["math", "comparison", "numerical logic"],
    "input": {
      "a": {
        "type": "float",
        "description": "The first number."
      },
      "b": {
        "type": "float",
        "description": "The second number."
      }
    },
    "output": {
      "comparison": {
        "type": "str",
        "description": "A string indicating the comparison result (e.g., 'a > b', 'a < b', 'a == b')."
      }
    },
    "description": "Compares two numbers and returns which is greater, or if they are equal.",
    "keywords": ["compare", "numbers", "greater", "less", "equal", "compareNumbersTool"],
    "meta": {
      "usage_examples": ["Compare if 100 is greater than 50."],
      "related_tools": ["filter_data_tool"]
    }
  },
  {
    "name": "run_python_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["code execution", "scripting", "python interpreter"],
    "input": {
      "code": {
        "type": "str",
        "description": "The Python code string to be executed."
      }
    },
    "output": {
      "output": {
        "type": "str",
        "description": "The standard output (stdout) generated by the executed Python code. Errors (stderr) might also be captured."
      }
    },
    "description": "Executes Python code and returns the output.",
    "keywords": ["run", "python", "code", "execute", "runPythonTool"],
    "meta": {
      "usage_examples": ["Run the Python code 'print(\"Hello from Toolmate!\")'."],
      "related_tools": ["code_formatter_tool", "summarize_code_tool"]
    }
  },
  {
    "name": "generate_whatsapp_message_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["whatsapp", "messaging", "drafting", "communication automation"],
    "input": {
      "content": {
        "type": "str",
        "description": "The main content for the WhatsApp message."
      },
      "recipients": {
        "type": "list[str]",
        "description": "A list of recipient phone numbers or contact names."
      }
    },
    "output": {
      "message": {
        "type": "str",
        "description": "The drafted WhatsApp message, possibly formatted for easy sending."
      }
    },
    "description": "Drafts a WhatsApp message for given recipients.",
    "keywords": ["whatsapp", "message", "draft", "recipients", "generate"],
    "meta": {
      "usage_examples": ["Draft a WhatsApp message 'Team meeting at 3 PM today.' for recipients ['+1234567890', '+0987654321']."],
      "related_tools": ["send_whatsapp_tool", "format_sms_tool"]
    }
  },
  {
    "name": "send_whatsapp_tool",
    "category": "Communication",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["whatsapp", "messaging", "notification"],
    "input": {
      "to": {
        "type": "str",
        "description": "The recipient's phone number or WhatsApp contact identifier."
      },
      "content": {
        "type": "str",
        "description": "The message content to send."
      }
    },
    "output": {
      "status": {
        "type": "str",
        "description": "The status of the WhatsApp message sending operation (e.g., 'sent', 'delivered', 'failed')."
      }
    },
    "description": "Sends a WhatsApp message to a contact.",
    "keywords": ["send", "whatsapp", "message", "contact"],
    "meta": {
      "usage_examples": ["Send a WhatsApp message 'Reminder: Project deadline is tomorrow.' to '+1122334455'."],
      "related_tools": ["generate_whatsapp_message_tool", "send_sms_tool"]
    }
  },
  {
    "name": "calculate_median_tool",
    "category": "Calculators",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["math", "statistics", "median", "data analysis"],
    "input": {
      "data": {
        "type": "list[float]",
        "description": "A list of numerical values."
      }
    },
    "output": {
      "median": {
        "type": "float",
        "description": "The median value of the numbers in the list."
      }
    },
    "description": "Calculates the median value of a list of numbers.",
    "keywords": ["median", "calculate", "data", "statistics"],
    "meta": {
      "usage_examples": ["Calculate the median of the dataset [10, 20, 5, 25, 15]."],
      "related_tools": ["calculate_average_tool", "summarize_numeric_tool"]
    }
  },
  {
    "name": "validate_phone_tool",
    "category": "Data Validation",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["phone number validation", "data cleaning", "format check"],
    "input": {
      "phone": {
        "type": "str",
        "description": "The phone number string to validate."
      }
    },
    "output": {
      "is_valid": {
        "type": "bool",
        "description": "True if the phone number is in a valid format (and optionally for a specific region if supported), False otherwise."
      }
    },
    "description": "Validates a phone number for correct format and region.",
    "keywords": ["validate", "phone", "number", "check", "region"],
    "meta": {
      "usage_examples": ["Validate the phone number '+1-555-123-4567'.", "Check if '07700900000' is a valid UK phone number."],
      "related_tools": ["format_phone_tool", "extract_phone_numbers_tool"]
    }
  },
  {
    "name": "detect_suspicious_email_tool",
    "category": "Security",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["email security", "phishing detection", "spam filter aid"],
    "input": {
      "email": {
        "type": "str",
        "description": "The email address or full email content to analyze."
      }
    },
    "output": {
      "is_suspicious": {
        "type": "bool",
        "description": "True if the email is flagged as suspicious (e.g., based on sender, links, content patterns), False otherwise."
      }
    },
    "description": "Detects if an email address is suspicious or likely fake.",
    "keywords": ["detect", "suspicious", "email", "fake", "phishing"],
    "meta": {
      "usage_examples": ["Check if the email from 'support@paypai.com' is suspicious."],
      "related_tools": ["validate_email_tool", "extract_urls_from_text_tool"]
    }
  },
  {
    "name": "check_meeting_conflict_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["calendar management", "scheduling conflict", "availability check"],
    "input": {
      "meetings": {
        "type": "list[dict]",
        "description": "A list of existing meeting objects, each with 'start_time' and 'end_time'."
      },
      "new_meeting": {
        "type": "dict",
        "description": "The new meeting object to check, with 'start_time' and 'end_time'."
      }
    },
    "output": {
      "conflict": {
        "type": "bool",
        "description": "True if the new meeting conflicts with any existing meetings, False otherwise."
      }
    },
    "description": "Checks if a new meeting conflicts with existing meetings.",
    "keywords": ["check", "meeting", "conflict", "schedule", "calendar"],
    "meta": {
      "usage_examples": ["Check if scheduling a new meeting from 2 PM to 3 PM conflicts with existing appointments."],
      "related_tools": ["schedule_event_tool", "meeting_scheduler_tool"]
    }
  },
  {
    "name": "extract_images_from_pdf_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["pdf processing", "image extraction", "media retrieval"],
    "input": {
      "pdf_path": {
        "type": "str",
        "description": "The file path of the PDF document."
      }
    },
    "output": {
      "images": {
        "type": "list[str]",
        "description": "A list of file paths for the extracted images."
      }
    },
    "description": "Extracts all images from a PDF file.",
    "keywords": ["extract", "images", "pdf", "file", "media"],
    "meta": {
      "usage_examples": ["Extract all images from 'product_catalog.pdf'."],
      "related_tools": ["read_pdf_tool", "image_to_text_tool"]
    }
  },
  {
    "name": "upload_to_cloud_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["cloud storage", "file backup", "data synchronization", "google drive", "dropbox"],
    "input": {
      "file_paths": {
        "type": "list[str]",
        "description": "A list of local file paths to be uploaded."
      },
      "cloud_service": {
        "type": "str",
        "description": "The name of the cloud service (e.g., 'Google Drive', 'Dropbox', 'AWS S3')."
      }
    },
    "output": {
      "status": {
        "type": "str",
        "description": "The status of the upload operation (e.g., 'success', 'failed', 'partial_success'), possibly with details or links to uploaded files."
      }
    },
    "description": "Uploads files to a specified cloud service (e.g., Google Drive, Dropbox).",
    "keywords": ["upload", "cloud", "files", "service", "backup"],
    "meta": {
      "usage_examples": ["Upload 'important_report.docx' and 'presentation.pptx' to Google Drive."],
      "related_tools": ["backup_file_tool", "zip_files_tool"]
    }
  },
  {
    "name": "find_recent_files_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["file search", "directory utility", "date filtering"],
    "input": {
      "directory": {
        "type": "str",
        "description": "The directory path to search within."
      },
      "days": {
        "type": "int",
        "description": "The number of days to look back for modified files (e.g., 7 for files modified in the last week)."
      }
    },
    "output": {
      "files": {
        "type": "list[str]",
        "description": "A list of file paths that were modified within the specified number of days."
      }
    },
    "description": "Finds files in a directory modified within the last N days.",
    "keywords": ["find", "recent", "files", "modified", "days"],
    "meta": {
      "usage_examples": ["Find all files in '/Downloads' that were modified in the last 3 days."],
      "related_tools": ["list_directory_tool", "monitor_file_tool"]
    }
  },
  {
    "name": "suggest_activity_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["recommendation engine", "lifestyle", "weather based suggestion"],
    "input": {
      "weather": {
        "type": "dict",
        "description": "A dictionary containing weather information (e.g., from 'get_weather_tool'). Expected keys might be 'condition', 'temperature'."
      },
      "activity": {
        "type": "str",
        "description": "The proposed activity (e.g., 'hiking', 'picnic', 'movie marathon')."
      }
    },
    "output": {
      "suggestion": {
        "type": "str",
        "description": "A suggestion or recommendation about the suitability of the activity based on the weather (e.g., 'Good day for hiking!', 'Might be too cold for a picnic.')."
      }
    },
    "description": "Suggests if an activity is suitable based on weather conditions.",
    "keywords": ["suggest", "activity", "weather", "suitable", "recommend"],
    "meta": {
      "usage_examples": ["Based on current weather in 'Paris', suggest if 'outdoor sightseeing' is a good idea."],
      "related_tools": ["get_weather_tool", "brainstorm_ideas_tool"]
    }
  },
  {
    "name": "extract_zip_metadata_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["archive utility", "zip file", "metadata extraction"],
    "input": {
      "zip_path": {
        "type": "str",
        "description": "The file path of the ZIP archive."
      }
    },
    "output": {
      "metadata": {
        "type": "dict",
        "description": "A dictionary containing metadata about the ZIP archive, such as a list of files, their sizes, and modification dates."
      }
    },
    "description": "Extracts metadata (file names, sizes, dates) from a ZIP archive.",
    "keywords": ["extract", "zip", "metadata", "archive", "info"],
    "meta": {
      "usage_examples": ["Get the list of files and their sizes from 'documents_archive.zip' without extracting it."],
      "related_tools": ["unzip_files_tool", "zip_files_tool", "extract_zip_file_list_tool"]
    }
  },
  {
    "name": "find_duplicate_rows_tool",
    "category": "Data Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["data cleaning", "deduplication", "dataset analysis"],
    "input": {
      "data": {
        "type": "list[dict]",
        "description": "A list of dictionaries, where each dictionary represents a row in a dataset."
      }
    },
    "output": {
      "duplicates": {
        "type": "list[dict]",
        "description": "A list of rows that are identified as duplicates (excluding the first occurrence)."
      }
    },
    "description": "Finds duplicate rows in a dataset.",
    "keywords": ["find", "duplicate", "rows", "data", "dataset"],
    "meta": {
      "usage_examples": ["Find and list all duplicate customer entries in the 'customer_list.csv' data."],
      "related_tools": ["remove_duplicates_tool", "filter_data_tool"]
    }
  },
  {
    "name": "extract_urls_from_text_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "text processing", "regex", "web scraping aid"],
    "input": {
      "text": {
        "type": "str",
        "description": "The block of text from which to extract URLs."
      }
    },
    "output": {
      "urls": {
        "type": "list[str]",
        "description": "A list of all URLs found in the text."
      }
    },
    "description": "Extracts all URLs from a block of text.",
    "keywords": ["extract", "urls", "text", "find", "links"],
    "meta": {
      "usage_examples": ["Extract all website links from the provided article content."],
      "related_tools": ["validate_url_tool", "fetch_website_text_tool", "extract_html_links_tool"]
    }
  },
  {
    "name": "generate_random_data_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["data generation", "mock data", "testing utility", "simulation"],
    "input": {
      "schema": {
        "type": "dict",
        "description": "A dictionary defining the schema for the data to be generated (e.g., {'name': 'string', 'age': 'int_range(18,65)', 'email': 'email'})."
      },
      "count": {
        "type": "int",
        "description": "The number of random data records to generate."
      }
    },
    "output": {
      "data": {
        "type": "list[dict]",
        "description": "A list of generated random data records conforming to the schema."
      }
    },
    "description": "Generates random data based on a schema for testing or simulation.",
    "keywords": ["generate", "random", "data", "schema", "test"],
    "meta": {
      "usage_examples": ["Generate 100 random user profiles with fields: name, email, and age between 20 and 50."],
      "related_tools": ["random_password_tool", "generate_uuid_tool"]
    }
  },
  {
    "name": "extract_dates_from_text_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["date extraction", "text processing", "nlp", "information retrieval"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract dates."
      }
    },
    "output": {
      "dates": {
        "type": "list[str]",
        "description": "A list of all date strings found in the text (may include various formats)."
      }
    },
    "description": "Extracts all date strings from text.",
    "keywords": ["extract", "dates", "text", "find", "parse"],
    "meta": {
      "usage_examples": ["Extract all dates mentioned in the historical document."],
      "related_tools": ["format_date_tool", "days_between_tool"]
    }
  },
  {
    "name": "generate_uuid_batch_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["uuid generation", "batch processing", "unique identifiers"],
    "input": {
      "count": {
        "type": "int",
        "description": "The number of UUIDs to generate."
      }
    },
    "output": {
      "uuids": {
        "type": "list[str]",
        "description": "A list of generated unique UUID strings."
      }
    },
    "description": "Generates a batch of unique UUIDs.",
    "keywords": ["generate", "uuid", "batch", "unique", "id"],
    "meta": {
      "usage_examples": ["Generate 50 unique identifiers for new product entries."],
      "related_tools": ["generate_uuid_tool"]
    }
  },
  {
    "name": "extract_phone_numbers_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["phone number extraction", "text processing", "regex", "data extraction"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract phone numbers."
      }
    },
    "output": {
      "phones": {
        "type": "list[str]",
        "description": "A list of phone numbers found in the text."
      }
    },
    "description": "Extracts all phone numbers from text.",
    "keywords": ["extract", "phone", "numbers", "text", "find"],
    "meta": {
      "usage_examples": ["Extract all phone numbers from the contact list text."],
      "related_tools": ["validate_phone_tool", "format_phone_tool", "extract_emails_tool"]
    }
  },
  {
    "name": "generate_html_report_tool",
    "category": "Reporting",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["report generation", "html output", "data presentation"],
    "input": {
      "title": {
        "type": "str",
        "description": "The title of the HTML report."
      },
      "content": {
        "type": "str",
        "description": "The main content of the report, which can be HTML formatted text, tables, or chart embed codes."
      }
    },
    "output": {
      "html_file": {
        "type": "str",
        "description": "The file path of the generated HTML report file."
      }
    },
    "description": "Generates an HTML report from title and content.",
    "keywords": ["generate", "html", "report", "file", "content"],
    "meta": {
      "usage_examples": ["Generate an HTML report titled 'Quarterly Sales Performance' with content including sales charts and summary tables."],
      "related_tools": ["generate_csv_report_tool", "generate_pdf_batch_tool", "markdown_to_html_tool"]
    }
  },
  {
    "name": "extract_hashtags_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["social media analysis", "hashtag extraction", "text processing"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string (e.g., from a social media post) from which to extract hashtags."
      }
    },
    "output": {
      "hashtags": {
        "type": "list[str]",
        "description": "A list of hashtags (e.g., '#AI', '#innovation') found in the text."
      }
    },
    "description": "Extracts all hashtags from a block of text.",
    "keywords": ["extract", "hashtags", "text", "find", "social"],
    "meta": {
      "usage_examples": ["Extract all hashtags from the tweet: 'Loving the new features in #Toolmate! #AI #WorkflowAutomation'."],
      "related_tools": ["extract_mentions_tool", "extract_urls_from_text_tool"]
    }
  },
  {
    "name": "generate_qr_batch_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["qr code generation", "batch processing", "image generation"],
    "input": {
      "data_list": {
        "type": "list[str]",
        "description": "A list of data strings, where each string will be encoded into a separate QR code."
      }
    },
    "output": {
      "qr_images": {
        "type": "list[str]",
        "description": "A list of file paths for the generated QR code images."
      }
    },
    "description": "Generates QR codes for a list of data strings.",
    "keywords": ["generate", "qr", "batch", "codes", "images"],
    "meta": {
      "usage_examples": ["Generate QR codes for a list of URLs: ['url1.com', 'url2.com', 'url3.com']."],
      "related_tools": ["generate_qr_tool", "generate_barcode_batch_tool"]
    }
  },
  {
    "name": "extract_mentions_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["social media analysis", "mention extraction", "nlp"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string (e.g., from a social media post) from which to extract @mentions."
      }
    },
    "output": {
      "mentions": {
        "type": "list[str]",
        "description": "A list of @mentions (e.g., '@ToolmateAI', '@username') found in the text."
      }
    },
    "description": "Extracts all @mentions from a block of text.",
    "keywords": ["extract", "mentions", "text", "find", "social"],
    "meta": {
      "usage_examples": ["Extract all user mentions from the comment: 'Great point, @JohnDoe! What do you think @JaneSmith?'."],
      "related_tools": ["extract_hashtags_tool", "extract_twitter_handles_tool"]
    }
  },
  {
    "name": "generate_barcode_batch_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["barcode generation", "batch processing", "image generation"],
    "input": {
      "data_list": {
        "type": "list[str]",
        "description": "A list of data strings, where each string will be encoded into a separate barcode."
      },
      "format": {
        "type": "str",
        "description": "The barcode format to use for all generated barcodes (e.g., 'CODE128')."
      }
    },
    "output": {
      "barcode_images": {
        "type": "list[str]",
        "description": "A list of file paths for the generated barcode images."
      }
    },
    "description": "Generates barcodes for a list of data strings.",
    "keywords": ["generate", "barcode", "batch", "codes", "images"],
    "meta": {
      "usage_examples": ["Generate CODE128 barcodes for a list of product SKUs: ['SKU001', 'SKU002', 'SKU003']."],
      "related_tools": ["generate_barcode_tool", "generate_qr_batch_tool"]
    }
  },
  {
    "name": "extract_currency_amounts_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["financial data extraction", "text processing", "nlp", "regex"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract currency amounts."
      }
    },
    "output": {
      "amounts": {
        "type": "list[float]",
        "description": "A list of numerical currency amounts found in the text (e.g., [19.99, 250.00]). Currency symbols might be handled or ignored depending on implementation."
      }
    },
    "description": "Extracts all currency amounts from text.",
    "keywords": ["extract", "currency", "amounts", "text", "find"],
    "meta": {
      "usage_examples": ["Extract all monetary values from the invoice text: 'Subtotal: $50.00, Tax: $5.00, Total: $55.00'."],
      "related_tools": ["extract_numbers_tool"]
    }
  },
  {
    "name": "generate_invoice_batch_tool",
    "category": "Finance",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["invoice generation", "batch processing", "pdf creation", "billing"],
    "input": {
      "clients": {
        "type": "list[str]",
        "description": "A list of client names or identifiers."
      },
      "items_list": {
        "type": "list[list[dict]]",
        "description": "A list of item lists, where each inner list corresponds to a client and contains dictionaries of items for their invoice."
      }
    },
    "output": {
      "invoices": {
        "type": "list[str]",
        "description": "A list of file paths for the generated PDF invoices."
      }
    },
    "description": "Generates PDF invoices for multiple clients.",
    "keywords": ["generate", "invoice", "batch", "pdf", "clients"],
    "meta": {
      "usage_examples": ["Generate invoices for clients ['Client A', 'Client B'] with their respective item lists."],
      "related_tools": ["generate_invoice_tool", "send_email_tool"]
    }
  },
  {
    "name": "extract_emojis_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["emoji extraction", "text processing", "unicode", "social media analysis"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract emojis."
      }
    },
    "output": {
      "emojis": {
        "type": "list[str]",
        "description": "A list of all emojis found in the text."
      }
    },
    "description": "Extracts all emojis from a block of text.",
    "keywords": ["extract", "emojis", "text", "find", "unicode"],
    "meta": {
      "usage_examples": ["Extract all emojis from the message: 'Great news! 🎉 Let's celebrate 🥳👍'."],
      "related_tools": ["extract_hashtags_tool", "extract_mentions_tool"]
    }
  },
  {
    "name": "generate_random_password_batch_tool",
    "category": "Utilities",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["password generation", "batch processing", "security"],
    "input": {
      "count": {
        "type": "int",
        "description": "The number of random passwords to generate."
      },
      "length": {
        "type": "int",
        "description": "The desired length for each generated password."
      }
    },
    "output": {
      "passwords": {
        "type": "list[str]",
        "description": "A list of generated secure random passwords."
      }
    },
    "description": "Generates a batch of random passwords.",
    "keywords": ["generate", "random", "password", "batch", "security"],
    "meta": {
      "usage_examples": ["Generate 10 random passwords, each 12 characters long."],
      "related_tools": ["random_password_tool", "password_strength_tool"]
    }
  },
  {
    "name": "extract_ip_addresses_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["ip address extraction", "text processing", "regex", "network analysis"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract IP addresses."
      }
    },
    "output": {
      "ips": {
        "type": "list[str]",
        "description": "A list of IP addresses (IPv4 and/or IPv6) found in the text."
      }
    },
    "description": "Extracts all IP addresses from text.",
    "keywords": ["extract", "ip", "addresses", "text", "find"],
    "meta": {
      "usage_examples": ["Extract all IP addresses from server log text: 'Access from 192.168.1.10 and 2001:0db8::1'."],
      "related_tools": ["ip_lookup_tool", "dns_lookup_tool"]
    }
  },
  {
    "name": "generate_csv_report_tool",
    "category": "Reporting",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["csv generation", "report creation", "data export"],
    "input": {
      "headers": {
        "type": "list[str]",
        "description": "A list of strings representing the header row for the CSV."
      },
      "rows": {
        "type": "list[list]",
        "description": "A list of lists, where each inner list represents a row of data for the CSV."
      }
    },
    "output": {
      "csv_file": {
        "type": "str",
        "description": "The file path of the generated CSV report file."
      }
    },
    "description": "Generates a CSV report from headers and rows.",
    "keywords": ["generate", "csv", "report", "file", "data"],
    "meta": {
      "usage_examples": ["Generate a CSV report with headers ['Name', 'Age', 'City'] and corresponding rows of data."],
      "related_tools": ["write_csv_tool", "generate_html_report_tool"]
    }
  },
  {
    "name": "extract_domains_from_emails_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["email analysis", "domain extraction", "data cleaning"],
    "input": {
      "emails": {
        "type": "list[str]",
        "description": "A list of email addresses."
      }
    },
    "output": {
      "domains": {
        "type": "list[str]",
        "description": "A list of unique domain names extracted from the email addresses."
      }
    },
    "description": "Extracts domain names from a list of email addresses.",
    "keywords": ["extract", "domains", "emails", "find", "parse"],
    "meta": {
      "usage_examples": ["Extract domains from the email list ['user1@example.com', 'user2@another.org', 'user3@example.com']."],
      "related_tools": ["extract_emails_tool", "validate_email_tool"]
    }
  },
  {
    "name": "generate_pdf_batch_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["pdf generation", "batch processing", "document creation"],
    "input": {
      "contents": {
        "type": "list[str]",
        "description": "A list of text strings, where each string will be the content of a separate PDF file."
      }
    },
    "output": {
      "pdf_files": {
        "type": "list[str]",
        "description": "A list of file paths for the generated PDF files."
      }
    },
    "description": "Generates multiple PDF files from a list of contents.",
    "keywords": ["generate", "pdf", "batch", "files", "content"],
    "meta": {
      "usage_examples": ["Generate individual PDF documents for each chapter text in a list."],
      "related_tools": ["generate_summary_pdf_tool", "pdf_merge_tool"]
    }
  },
  {
    "name": "extract_mac_addresses_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["mac address extraction", "text processing", "regex", "network analysis"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract MAC addresses."
      }
    },
    "output": {
      "macs": {
        "type": "list[str]",
        "description": "A list of MAC addresses found in the text (e.g., '00:1A:2B:3C:4D:5E')."
      }
    },
    "description": "Extracts all MAC addresses from text.",
    "keywords": ["extract", "mac", "addresses", "text", "find"],
    "meta": {
      "usage_examples": ["Extract MAC addresses from network scan results: 'Device A: 00-B0-D0-63-C2-26, Device B: ...'."],
      "related_tools": ["extract_ip_addresses_tool"]
    }
  },
  {
    "name": "generate_markdown_report_tool",
    "category": "Reporting",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["report generation", "markdown output", "text formatting"],
    "input": {
      "title": {
        "type": "str",
        "description": "The title of the Markdown report."
      },
      "content": {
        "type": "str",
        "description": "The main content of the report in Markdown format."
      }
    },
    "output": {
      "markdown_file": {
        "type": "str",
        "description": "The file path of the generated Markdown report file."
      }
    },
    "description": "Generates a Markdown report from title and content.",
    "keywords": ["generate", "markdown", "report", "file", "content"],
    "meta": {
      "usage_examples": ["Generate a Markdown report titled 'Weekly Progress' with sections for tasks completed and upcoming goals."],
      "related_tools": ["save_to_markdown_tool", "markdown_to_html_tool"]
    }
  },
  {
    "name": "extract_twitter_handles_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["social media analysis", "twitter data", "username extraction"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string (e.g., from a tweet or bio) from which to extract Twitter handles."
      }
    },
    "output": {
      "handles": {
        "type": "list[str]",
        "description": "A list of Twitter handles (e.g., '@ToolmateAI') found in the text."
      }
    },
    "description": "Extracts all Twitter handles from text.",
    "keywords": ["extract", "twitter", "handles", "text", "find"],
    "meta": {
      "usage_examples": ["Extract Twitter handles from the tweet: 'Check out @OpenAI and @GoogleAI for latest updates.'."],
      "related_tools": ["extract_mentions_tool", "extract_hashtags_tool"]
    }
  },
  {
    "name": "generate_excel_report_tool",
    "category": "Reporting",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["excel generation", "spreadsheet report", "data export", "xlsx"],
    "input": {
      "headers": {
        "type": "list[str]",
        "description": "A list of strings representing the header row for the Excel sheet."
      },
      "rows": {
        "type": "list[list]",
        "description": "A list of lists, where each inner list represents a row of data for the Excel sheet."
      }
    },
    "output": {
      "excel_file": {
        "type": "str",
        "description": "The file path of the generated Excel report file (.xlsx)."
      }
    },
    "description": "Generates an Excel report from headers and rows.",
    "keywords": ["generate", "excel", "report", "file", "data"],
    "meta": {
      "usage_examples": ["Generate an Excel report of sales data with columns 'Date', 'Product', 'Amount'."],
      "related_tools": ["write_csv_tool", "read_excel_file_tool"]
    }
  },
  {
    "name": "extract_numbers_from_csv_tool",
    "category": "Data Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["csv parsing", "data extraction", "numerical data"],
    "input": {
      "csv_path": {
        "type": "str",
        "description": "The file path of the CSV file."
      },
      "column": {
        "type": "str",
        "description": "The name or index of the column from which to extract numbers."
      }
    },
    "output": {
      "numbers": {
        "type": "list[float]",
        "description": "A list of all numerical values extracted from the specified column."
      }
    },
    "description": "Extracts all numbers from a specific column in a CSV file.",
    "keywords": ["extract", "numbers", "csv", "column", "find"],
    "meta": {
      "usage_examples": ["Extract all numbers from the 'Price' column of 'products.csv'."],
      "related_tools": ["parse_csv_tool", "extract_numbers_tool"]
    }
  },
  {
    "name": "generate_latex_equation_tool",
    "category": "Developer Tools",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["latex", "equation formatting", "mathematical typesetting"],
    "input": {
      "equation": {
        "type": "str",
        "description": "A mathematical equation in a standard format (e.g., 'x^2 + y^2 = r^2')."
      }
    },
    "output": {
      "latex": {
        "type": "str",
        "description": "The LaTeX representation of the equation."
      }
    },
    "description": "Generates a LaTeX representation of a mathematical equation.",
    "keywords": ["generate", "latex", "equation", "math", "format"],
    "meta": {
      "usage_examples": ["Generate LaTeX for the equation 'E = mc^2'."],
      "related_tools": ["equation_solver_tool"]
    }
  },
  {
    "name": "extract_rgb_colors_tool",
    "category": "Image Processing",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["color extraction", "image analysis", "dominant colors"],
    "input": {
      "image_path": {
        "type": "str",
        "description": "The file path of the image from which to extract RGB colors."
      }
    },
    "output": {
      "colors": {
        "type": "list[dict]",
        "description": "A list of dictionaries, where each dictionary represents a dominant RGB color (e.g., {'r': 255, 'g': 0, 'b': 0, 'percentage': 0.3})."
      }
    },
    "description": "Extracts all RGB colors from an image.",
    "keywords": ["extract", "rgb", "colors", "image", "find"],
    "meta": {
      "usage_examples": ["Extract the dominant RGB colors from 'logo.png'."],
      "related_tools": ["color_hex_to_rgb_tool", "generate_color_palette_tool"]
    }
  },
  {
    "name": "generate_gantt_chart_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["project management", "gantt chart", "scheduling visualization"],
    "input": {
      "tasks": {
        "type": "list[dict]",
        "description": "A list of task dictionaries, each with details like 'name', 'start_date', 'end_date' or 'duration'."
      }
    },
    "output": {
      "gantt_chart": {
        "type": "str",
        "description": "File path to the generated Gantt chart image or data for an interactive chart."
      }
    },
    "description": "Generates a Gantt chart from a list of tasks.",
    "keywords": ["generate", "gantt", "chart", "tasks", "project"],
    "meta": {
      "usage_examples": ["Generate a Gantt chart for the project plan with tasks, start dates, and durations."],
      "related_tools": ["project_tracker_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_youtube_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "youtube", "video links", "web scraping aid"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract YouTube video links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all YouTube video links found in the text."
      }
    },
    "description": "Extracts all YouTube links from text.",
    "keywords": ["extract", "youtube", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Extract YouTube links from a webpage's content or a list of messages."],
      "related_tools": ["extract_urls_from_text_tool", "video_info_tool"]
    }
  },
  {
    "name": "generate_pie_chart_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "pie chart", "data representation", "statistics"],
    "input": {
      "labels": {
        "type": "list[str]",
        "description": "A list of labels for the pie chart slices."
      },
      "values": {
        "type": "list[float]",
        "description": "A list of numerical values corresponding to each label."
      }
    },
    "output": {
      "pie_chart": {
        "type": "str",
        "description": "File path to the generated pie chart image."
      }
    },
    "description": "Generates a pie chart from labels and values.",
    "keywords": ["generate", "pie", "chart", "labels", "values"],
    "meta": {
      "usage_examples": ["Generate a pie chart showing market share with labels ['Company A', 'Company B'] and values [60, 40]."],
      "related_tools": ["graph_plotter_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_zip_file_list_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["archive utility", "zip content listing", "file inspection"],
    "input": {
      "zip_path": {
        "type": "str",
        "description": "The file path of the ZIP archive."
      }
    },
    "output": {
      "files": {
        "type": "list[str]",
        "description": "A list of all file and directory names inside the ZIP archive."
      }
    },
    "description": "Lists all files inside a ZIP archive.",
    "keywords": ["extract", "zip", "files", "archive", "list"],
    "meta": {
      "usage_examples": ["List all files contained within 'project_backup.zip'."],
      "related_tools": ["extract_zip_metadata_tool", "unzip_files_tool"]
    }
  },
  {
    "name": "generate_scatter_plot_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "scatter plot", "data relationship", "statistics"],
    "input": {
      "x": {
        "type": "list[float]",
        "description": "A list of numerical values for the X-axis."
      },
      "y": {
        "type": "list[float]",
        "description": "A list of numerical values for the Y-axis."
      }
    },
    "output": {
      "scatter_plot": {
        "type": "str",
        "description": "File path to the generated scatter plot image."
      }
    },
    "description": "Generates a scatter plot from X and Y data.",
    "keywords": ["generate", "scatter", "plot", "x", "y"],
    "meta": {
      "usage_examples": ["Generate a scatter plot to visualize the relationship between height and weight data points."],
      "related_tools": ["graph_plotter_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_html_links_tool",
    "category": "Web Scraping",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["html parsing", "link extraction", "hyperlink retrieval"],
    "input": {
      "html": {
        "type": "str",
        "description": "The HTML content string."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all hyperlink URLs (href attributes) found in the HTML."
      }
    },
    "description": "Extracts all hyperlinks from HTML content.",
    "keywords": ["extract", "html", "links", "content", "find"],
    "meta": {
      "usage_examples": ["Extract all links from the HTML of 'example.com/homepage'."],
      "related_tools": ["extract_urls_from_text_tool", "fetch_website_text_tool"]
    }
  },
  {
    "name": "generate_word_cloud_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["text visualization", "word cloud", "nlp", "keyword display"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text content from which to generate the word cloud."
      }
    },
    "output": {
      "word_cloud": {
        "type": "str",
        "description": "File path to the generated word cloud image."
      }
    },
    "description": "Generates a word cloud image from text.",
    "keywords": ["generate", "word", "cloud", "image", "text"],
    "meta": {
      "usage_examples": ["Generate a word cloud from the customer reviews text to highlight frequent terms."],
      "related_tools": ["extract_keywords_tool", "graph_plotter_tool"]
    }
  },
  {
    "name": "extract_pdf_metadata_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["pdf utility", "document information", "metadata extraction"],
    "input": {
      "pdf_path": {
        "type": "str",
        "description": "The file path of the PDF document."
      }
    },
    "output": {
      "metadata": {
        "type": "dict",
        "description": "A dictionary containing metadata from the PDF file (e.g., Author, Title, Subject, Keywords, CreationDate, Page Count)."
      }
    },
    "description": "Extracts metadata from a PDF file.",
    "keywords": ["extract", "pdf", "metadata", "file", "info"],
    "meta": {
      "usage_examples": ["Extract metadata like author and title from 'research_paper.pdf'."],
      "related_tools": ["read_pdf_tool", "pdf_page_count_tool"]
    }
  },
  {
    "name": "generate_box_plot_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "box plot", "statistical visualization", "data distribution"],
    "input": {
      "data": {
        "type": "list[float]",
        "description": "A list of numerical data points. For multiple box plots, this could be a list of lists."
      }
    },
    "output": {
      "box_plot": {
        "type": "str",
        "description": "File path to the generated box plot image."
      }
    },
    "description": "Generates a box plot from a list of numbers.",
    "keywords": ["generate", "box", "plot", "data", "statistics"],
    "meta": {
      "usage_examples": ["Generate a box plot for the distribution of exam scores."],
      "related_tools": ["summarize_numeric_tool", "generate_histogram_tool"]
    }
  },
  {
    "name": "extract_google_drive_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "google drive", "cloud storage links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Google Drive links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Google Drive file/folder links found in the text."
      }
    },
    "description": "Extracts all Google Drive links from text.",
    "keywords": ["extract", "google", "drive", "links", "text"],
    "meta": {
      "usage_examples": ["Find all Google Drive links shared in an email thread."],
      "related_tools": ["extract_urls_from_text_tool", "extract_dropbox_links_tool"]
    }
  },
  {
    "name": "generate_histogram_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "histogram", "data distribution", "frequency plot"],
    "input": {
      "data": {
        "type": "list[float]",
        "description": "A list of numerical data points."
      },
      "bins": {
        "type": "int",
        "description": "The number of bins (intervals) to use for the histogram."
      }
    },
    "output": {
      "histogram": {
        "type": "str",
        "description": "File path to the generated histogram image."
      }
    },
    "description": "Generates a histogram from data and bin count.",
    "keywords": ["generate", "histogram", "data", "bins", "plot"],
    "meta": {
      "usage_examples": ["Generate a histogram of student ages with 10 bins."],
      "related_tools": ["graph_plotter_tool", "generate_box_plot_tool"]
    }
  },
  {
    "name": "extract_amazon_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "amazon", "product links", "ecommerce"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Amazon product links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Amazon product links found in the text."
      }
    },
    "description": "Extracts all Amazon product links from text.",
    "keywords": ["extract", "amazon", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Extract Amazon links from a wishlist or product review page content."],
      "related_tools": ["extract_urls_from_text_tool"]
    }
  },
  {
    "name": "generate_timeline_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["timeline visualization", "event sequencing", "historical data"],
    "input": {
      "events": {
        "type": "list[dict]",
        "description": "A list of event dictionaries, each with details like 'date', 'title', 'description'."
      }
    },
    "output": {
      "timeline": {
        "type": "str",
        "description": "File path to the generated timeline image or data for an interactive timeline."
      }
    },
    "description": "Generates a timeline visualization from a list of events.",
    "keywords": ["generate", "timeline", "events", "visualize", "history"],
    "meta": {
      "usage_examples": ["Generate a timeline of project milestones with their respective dates."],
      "related_tools": ["generate_gantt_chart_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_facebook_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "facebook", "social media links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Facebook links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Facebook links (profiles, pages, posts) found in the text."
      }
    },
    "description": "Extracts all Facebook links from text.",
    "keywords": ["extract", "facebook", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Find all Facebook links mentioned in a marketing campaign brief."],
      "related_tools": ["extract_urls_from_text_tool", "extract_twitter_handles_tool"]
    }
  },
  {
    "name": "generate_calendar_ics_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["calendar export", "ics file", "event scheduling", "icalendar"],
    "input": {
      "events": {
        "type": "list[dict]",
        "description": "A list of event dictionaries, each with details like 'summary' (title), 'dtstart' (start datetime), 'dtend' (end datetime), 'location', 'description'."
      }
    },
    "output": {
      "ics_file": {
        "type": "str",
        "description": "The file path of the generated iCalendar (.ics) file."
      }
    },
    "description": "Generates an iCalendar (.ics) file from a list of events.",
    "keywords": ["generate", "calendar", "ics", "events", "file"],
    "meta": {
      "usage_examples": ["Generate an .ics file for the team's upcoming meetings and deadlines."],
      "related_tools": ["schedule_event_tool", "create_calendar_event_tool"]
    }
  },
  {
    "name": "extract_instagram_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "instagram", "social media links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Instagram links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Instagram links (profiles, posts) found in the text."
      }
    },
    "description": "Extracts all Instagram links from text.",
    "keywords": ["extract", "instagram", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Extract Instagram profile links from a list of influencers."],
      "related_tools": ["extract_urls_from_text_tool", "extract_facebook_links_tool"]
    }
  },
  {
    "name": "generate_heatmap_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "heatmap", "matrix visualization", "data density"],
    "input": {
      "data": {
        "type": "list[list[float]]",
        "description": "A 2D list (matrix) of numerical values for the heatmap."
      }
    },
    "output": {
      "heatmap": {
        "type": "str",
        "description": "File path to the generated heatmap image."
      }
    },
    "description": "Generates a heatmap from a 2D list of numbers.",
    "keywords": ["generate", "heatmap", "data", "2d", "visualize"],
    "meta": {
      "usage_examples": ["Generate a heatmap of user activity on a website grid."],
      "related_tools": ["graph_plotter_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_linkedin_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "linkedin", "professional networking links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract LinkedIn profile or company page links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all LinkedIn links found in the text."
      }
    },
    "description": "Extracts all LinkedIn links from text.",
    "keywords": ["extract", "linkedin", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Extract LinkedIn profile URLs from a list of conference attendees."],
      "related_tools": ["extract_urls_from_text_tool"]
    }
  },
  {
    "name": "generate_venn_diagram_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "venn diagram", "set theory visualization", "data comparison"],
    "input": {
      "sets": {
        "type": "list[list]",
        "description": "A list of lists, where each inner list represents a set of items. (e.g., [[1,2,3], [2,3,4]])."
      }
    },
    "output": {
      "venn_diagram": {
        "type": "str",
        "description": "File path to the generated Venn diagram image."
      }
    },
    "description": "Generates a Venn diagram from a list of sets.",
    "keywords": ["generate", "venn", "diagram", "sets", "visualize"],
    "meta": {
      "usage_examples": ["Generate a Venn diagram to show the overlap between three sets of customer interests."],
      "related_tools": ["graph_plotter_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_tiktok_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "tiktok", "social media links", "video links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract TikTok links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all TikTok video or profile links found in the text."
      }
    },
    "description": "Extracts all TikTok links from text.",
    "keywords": ["extract", "tiktok", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Find TikTok video links in a curated list of viral content."],
      "related_tools": ["extract_urls_from_text_tool", "extract_youtube_links_tool"]
    }
  },
  {
    "name": "generate_radar_chart_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "radar chart", "spider chart", "multi-variable comparison"],
    "input": {
      "labels": {
        "type": "list[str]",
        "description": "A list of labels for the axes of the radar chart."
      },
      "values": {
        "type": "list[float]",
        "description": "A list of numerical values corresponding to each label for a single data series. For multiple series, this could be a list of lists."
      }
    },
    "output": {
      "radar_chart": {
        "type": "str",
        "description": "File path to the generated radar chart image."
      }
    },
    "description": "Generates a radar chart from labels and values.",
    "keywords": ["generate", "radar", "chart", "labels", "values"],
    "meta": {
      "usage_examples": ["Generate a radar chart to compare skills (e.g., Communication, Teamwork, Problem Solving) for an employee performance review."],
      "related_tools": ["graph_plotter_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_pinterest_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "pinterest", "social media links", "image links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Pinterest links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Pinterest pin or board links found in the text."
      }
    },
    "description": "Extracts all Pinterest links from text.",
    "keywords": ["extract", "pinterest", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Extract Pinterest board links from a blog post about home decor ideas."],
      "related_tools": ["extract_urls_from_text_tool", "extract_instagram_links_tool"]
    }
  },
  {
    "name": "generate_area_chart_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "area chart", "time series visualization", "trend display"],
    "input": {
      "labels": {
        "type": "list[str]",
        "description": "A list of labels for the X-axis (e.g., dates, categories)."
      },
      "values": {
        "type": "list[float]",
        "description": "A list of numerical values for the Y-axis. For stacked area charts, this could be a list of lists."
      }
    },
    "output": {
      "area_chart": {
        "type": "str",
        "description": "File path to the generated area chart image."
      }
    },
    "description": "Generates an area chart from labels and values.",
    "keywords": ["generate", "area", "chart", "labels", "values"],
    "meta": {
      "usage_examples": ["Generate an area chart showing website traffic over the past year with monthly data points."],
      "related_tools": ["graph_plotter_tool", "data_visualizer_tool", "generate_line_plot_tool (if separate)"]
    }
  },
  {
    "name": "extract_reddit_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "reddit", "social media links", "forum links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Reddit links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Reddit post or subreddit links found in the text."
      }
    },
    "description": "Extracts all Reddit links from text.",
    "keywords": ["extract", "reddit", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Find all Reddit links in a discussion thread about a specific topic."],
      "related_tools": ["extract_urls_from_text_tool"]
    }
  },
  {
    "name": "generate_bubble_chart_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "bubble chart", "multi-dimensional data", "comparison plot"],
    "input": {
      "x": {
        "type": "list[float]",
        "description": "A list of numerical values for the X-axis."
      },
      "y": {
        "type": "list[float]",
        "description": "A list of numerical values for the Y-axis."
      },
      "sizes": {
        "type": "list[float]",
        "description": "A list of numerical values representing the size of each bubble."
      }
    },
    "output": {
      "bubble_chart": {
        "type": "str",
        "description": "File path to the generated bubble chart image."
      }
    },
    "description": "Generates a bubble chart from X, Y, and size data.",
    "keywords": ["generate", "bubble", "chart", "x", "y", "sizes"],
    "meta": {
      "usage_examples": ["Generate a bubble chart to visualize market competitors based on market share (size), revenue (y-axis), and growth rate (x-axis)."],
      "related_tools": ["generate_scatter_plot_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_snapchat_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "snapchat", "social media links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Snapchat links or usernames."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Snapchat links or recognized username patterns found in the text."
      }
    },
    "description": "Extracts all Snapchat links from text.",
    "keywords": ["extract", "snapchat", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Identify Snapchat links in user-generated content."],
      "related_tools": ["extract_urls_from_text_tool", "extract_instagram_links_tool"]
    }
  },
  {
    "name": "generate_tree_map_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "tree map", "hierarchical data", "proportional display"],
    "input": {
      "labels": {
        "type": "list[str]",
        "description": "A list of labels for the rectangles in the tree map."
      },
      "values": {
        "type": "list[float]",
        "description": "A list of numerical values determining the size of each rectangle."
      }
    },
    "output": {
      "tree_map": {
        "type": "str",
        "description": "File path to the generated tree map image."
      }
    },
    "description": "Generates a tree map from labels and values.",
    "keywords": ["generate", "tree", "map", "labels", "values"],
    "meta": {
      "usage_examples": ["Generate a tree map to visualize budget allocation across different departments, where rectangle size represents budget amount."],
      "related_tools": ["generate_pie_chart_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_telegram_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "telegram", "messaging links", "group links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Telegram links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Telegram channel, group, or user links (t.me) found in the text."
      }
    },
    "description": "Extracts all Telegram links from text.",
    "keywords": ["extract", "telegram", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Extract Telegram group links from a community announcement post."],
      "related_tools": ["extract_urls_from_text_tool", "extract_discord_links_tool"]
    }
  },
  {
    "name": "generate_sankey_diagram_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "sankey diagram", "flow diagram", "data flow visualization"],
    "input": {
      "nodes": {
        "type": "list[str]",
        "description": "A list of node names."
      },
      "links": {
        "type": "list[dict]",
        "description": "A list of link dictionaries, each with 'source' (node index), 'target' (node index), and 'value' (flow amount)."
      }
    },
    "output": {
      "sankey_diagram": {
        "type": "str",
        "description": "File path to the generated Sankey diagram image or data for an interactive chart."
      }
    },
    "description": "Generates a Sankey diagram from nodes and links.",
    "keywords": ["generate", "sankey", "diagram", "nodes", "links"],
    "meta": {
      "usage_examples": ["Generate a Sankey diagram to visualize energy flow from sources to consumptions."],
      "related_tools": ["data_visualizer_tool", "generate_flow_chart_tool (if exists)"]
    }
  },
  {
    "name": "extract_discord_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "discord", "server invites", "community links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Discord invite links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Discord server invite links (e.g., discord.gg/invitecode) found in the text."
      }
    },
    "description": "Extracts all Discord links from text.",
    "keywords": ["extract", "discord", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Find all Discord invite links in a forum post."],
      "related_tools": ["extract_urls_from_text_tool", "extract_telegram_links_tool"]
    }
  },
  {
    "name": "generate_parallel_coordinates_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "parallel coordinates plot", "multi-dimensional data", "data comparison"],
    "input": {
      "data": {
        "type": "list[dict]",
        "description": "A list of dictionaries, where each dictionary represents a data point with multiple attributes (dimensions)."
      }
    },
    "output": {
      "parallel_coordinates": {
        "type": "str",
        "description": "File path to the generated parallel coordinates plot image."
      }
    },
    "description": "Generates a parallel coordinates plot from data.",
    "keywords": ["generate", "parallel", "coordinates", "plot", "data"],
    "meta": {
      "usage_examples": ["Generate a parallel coordinates plot to compare different car models based on attributes like MPG, horsepower, and price."],
      "related_tools": ["data_visualizer_tool", "generate_radar_chart_tool"]
    }
  },
  {
    "name": "extract_medium_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "medium.com", "blog links", "article links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Medium.com article links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Medium.com article links found in the text."
      }
    },
    "description": "Extracts all Medium.com links from text.",
    "keywords": ["extract", "medium", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Extract Medium article links from a curated reading list."],
      "related_tools": ["extract_urls_from_text_tool", "summarize_webpage_tool"]
    }
  },
  {
    "name": "generate_violin_plot_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "violin plot", "data distribution", "statistical visualization", "density plot"],
    "input": {
      "data": {
        "type": "list[float]",
        "description": "A list of numerical data points. For multiple violin plots, this could be a list of lists or grouped data."
      }
    },
    "output": {
      "violin_plot": {
        "type": "str",
        "description": "File path to the generated violin plot image."
      }
    },
    "description": "Generates a violin plot from a list of numbers.",
    "keywords": ["generate", "violin", "plot", "data", "statistics"],
    "meta": {
      "usage_examples": ["Generate a violin plot to show the distribution of salaries across different departments."],
      "related_tools": ["generate_box_plot_tool", "generate_histogram_tool"]
    }
  },
  {
    "name": "extract_stackoverflow_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "stackoverflow", "developer resources", "q&a links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Stack Overflow links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Stack Overflow question or answer links found in the text."
      }
    },
    "description": "Extracts all Stack Overflow links from text.",
    "keywords": ["extract", "stackoverflow", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Find Stack Overflow links in a developer's blog post or forum discussion."],
      "related_tools": ["extract_urls_from_text_tool", "extract_github_links_tool"]
    }
  },
  {
    "name": "generate_sunburst_chart_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "sunburst chart", "hierarchical data", "proportional display"],
    "input": {
      "labels": {
        "type": "list[str]",
        "description": "A list of labels for each segment of the sunburst chart."
      },
      "parents": {
        "type": "list[str]",
        "description": "A list of parent labels defining the hierarchy. Empty string or null for root nodes."
      },
      "values": {
        "type": "list[float]",
        "description": "A list of numerical values corresponding to each label, determining segment size."
      }
    },
    "output": {
      "sunburst_chart": {
        "type": "str",
        "description": "File path to the generated sunburst chart image."
      }
    },
    "description": "Generates a sunburst chart from labels, parents, and values.",
    "keywords": ["generate", "sunburst", "chart", "labels", "values"],
    "meta": {
      "usage_examples": ["Generate a sunburst chart to visualize file system usage by directory and subdirectory sizes."],
      "related_tools": ["generate_tree_map_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_github_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "github", "developer resources", "repository links"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract GitHub repository or profile links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all GitHub links found in the text."
      }
    },
    "description": "Extracts all GitHub links from text.",
    "keywords": ["extract", "github", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Extract GitHub repository links from a project's README file or a technical blog post."],
      "related_tools": ["extract_urls_from_text_tool", "extract_stackoverflow_links_tool"]
    }
  },
  {
    "name": "generate_chord_diagram_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["charting", "chord diagram", "relationship visualization", "network graph"],
    "input": {
      "matrix": {
        "type": "list[list[float]]",
        "description": "An adjacency matrix representing the flow or relationship strength between nodes."
      },
      "labels": {
        "type": "list[str]",
        "description": "A list of labels for the nodes corresponding to the matrix rows/columns."
      }
    },
    "output": {
      "chord_diagram": {
        "type": "str",
        "description": "File path to the generated chord diagram image."
      }
    },
    "description": "Generates a chord diagram from a matrix and labels.",
    "keywords": ["generate", "chord", "diagram", "matrix", "labels"],
    "meta": {
      "usage_examples": ["Generate a chord diagram to visualize migration patterns between countries, using a matrix of migration flows and country labels."],
      "related_tools": ["generate_sankey_diagram_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_bitly_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "bitly", "shortened urls", "link tracking"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Bitly short links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Bitly short links (e.g., bit.ly/xxxx) found in the text."
      }
    },
    "description": "Extracts all Bitly short links from text.",
    "keywords": ["extract", "bitly", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Find all Bitly links in a marketing email content."],
      "related_tools": ["extract_urls_from_text_tool", "shorten_url_tool"]
    }
  },
  {
    "name": "generate_sankey_matrix_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["sankey diagram", "matrix visualization", "flow analysis"],
    "input": {
      "matrix": {
        "type": "list[list[float]]",
        "description": "An adjacency matrix representing flows between categories."
      },
      "labels": {
        "type": "list[str]",
        "description": "Labels for the rows/columns of the matrix."
      }
    },
    "output": {
      "sankey_matrix": {
        "type": "str",
        "description": "File path to the generated Sankey matrix diagram."
      }
    },
    "description": "Generates a Sankey matrix diagram from a matrix and labels.",
    "keywords": ["generate", "sankey", "matrix", "diagram", "labels"],
    "meta": {
      "usage_examples": ["Visualize customer flow between product categories using a Sankey matrix."],
      "related_tools": ["generate_sankey_diagram_tool", "generate_chord_diagram_tool"]
    }
  },
  {
    "name": "extract_dropbox_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "dropbox", "cloud storage links", "file sharing"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Dropbox links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Dropbox file or folder sharing links found in the text."
      }
    },
    "description": "Extracts all Dropbox links from text.",
    "keywords": ["extract", "dropbox", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Extract Dropbox links from a project collaboration document."],
      "related_tools": ["extract_urls_from_text_tool", "extract_google_drive_links_tool"]
    }
  },
  {
    "name": "generate_parallel_sets_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["parallel sets plot", "categorical data visualization", "flow analysis"],
    "input": {
      "data": {
        "type": "list[dict]",
        "description": "Data for parallel sets, typically representing flows between categorical dimensions."
      }
    },
    "output": {
      "parallel_sets": {
        "type": "str",
        "description": "File path to the generated parallel sets visualization."
      }
    },
    "description": "Generates a parallel sets visualization from data.",
    "keywords": ["generate", "parallel", "sets", "visualize", "data"],
    "meta": {
      "usage_examples": ["Visualize survey responses across multiple categorical questions using a parallel sets plot."],
      "related_tools": ["generate_sankey_diagram_tool", "data_visualizer_tool"]
    }
  },
  {
    "name": "extract_onedrive_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "onedrive", "cloud storage links", "microsoft office"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract OneDrive links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all OneDrive file or folder sharing links found in the text."
      }
    },
    "description": "Extracts all OneDrive links from text.",
    "keywords": ["extract", "onedrive", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Find OneDrive links in an email attachment list."],
      "related_tools": ["extract_urls_from_text_tool", "extract_google_drive_links_tool", "extract_dropbox_links_tool"]
    }
  },
  {
    "name": "generate_sankey_parallel_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["sankey diagram", "parallel coordinates", "flow visualization"],
    "input": {
      "data": {
        "type": "list[dict]",
        "description": "Data suitable for a parallel Sankey diagram, showing flows across multiple stages or categories."
      }
    },
    "output": {
      "sankey_parallel": {
        "type": "str",
        "description": "File path to the generated parallel Sankey diagram."
      }
    },
    "description": "Generates a parallel Sankey diagram from data.",
    "keywords": ["generate", "sankey", "parallel", "diagram", "data"],
    "meta": {
      "usage_examples": ["Visualize user journey through a website using a parallel Sankey diagram."],
      "related_tools": ["generate_sankey_diagram_tool", "generate_parallel_coordinates_tool"]
    }
  },
  {
    "name": "extract_weblink_domains_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url parsing", "domain extraction", "link analysis"],
    "input": {
      "links": {
        "type": "list[str]",
        "description": "A list of web links (URLs)."
      }
    },
    "output": {
      "domains": {
        "type": "list[str]",
        "description": "A list of unique domain names extracted from the provided links."
      }
    },
    "description": "Extracts domain names from a list of web links.",
    "keywords": ["extract", "weblink", "domains", "links", "find"],
    "meta": {
      "usage_examples": ["Extract unique domains from a list of URLs found in a document."],
      "related_tools": ["extract_domain_tool", "extract_urls_from_text_tool"]
    }
  },
  {
    "name": "generate_sankey_flow_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["sankey diagram", "flow visualization", "process mapping"],
    "input": {
      "flows": {
        "type": "list[dict]",
        "description": "A list of flow dictionaries, each specifying source, target, and value of the flow."
      }
    },
    "output": {
      "sankey_flow": {
        "type": "str",
        "description": "File path to the generated Sankey flow diagram."
      }
    },
    "description": "Generates a Sankey flow diagram from a list of flows.",
    "keywords": ["generate", "sankey", "flow", "diagram", "visualize"],
    "meta": {
      "usage_examples": ["Visualize the flow of funds between different accounts using a Sankey diagram."],
      "related_tools": ["generate_sankey_diagram_tool"]
    }
  },
  {
    "name": "extract_yandex_links_tool",
    "category": "Text Analysis",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["url extraction", "yandex", "search engine links", "russian web"],
    "input": {
      "text": {
        "type": "str",
        "description": "The text string from which to extract Yandex links."
      }
    },
    "output": {
      "links": {
        "type": "list[str]",
        "description": "A list of all Yandex-related links (e.g., yandex.ru, yandex.com) found in the text."
      }
    },
    "description": "Extracts all Yandex links from text.",
    "keywords": ["extract", "yandex", "links", "text", "find"],
    "meta": {
      "usage_examples": ["Find Yandex search result links in a given text block."],
      "related_tools": ["extract_urls_from_text_tool", "search_google_tool"]
    }
  },
  {
    "name": "generate_sankey_grouped_tool",
    "category": "Data Visualization",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["sankey diagram", "grouped data visualization", "flow analysis"],
    "input": {
      "groups": {
        "type": "list[dict]",
        "description": "Data structured in groups for Sankey diagram generation, specifying nodes and links within and between groups."
      }
    },
    "output": {
      "sankey_grouped": {
        "type": "str",
        "description": "File path to the generated grouped Sankey diagram."
      }
    },
    "description": "Generates a grouped Sankey diagram from groups of data.",
    "keywords": ["generate", "sankey", "grouped", "diagram", "data"],
    "meta": {
      "usage_examples": ["Visualize resource allocation across multiple projects and teams using a grouped Sankey diagram."],
      "related_tools": ["generate_sankey_diagram_tool"]
    }
  },
  {
    "name": "read_csv_file_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["csv parsing", "data import", "spreadsheet reading"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The path to the CSV file."
      }
    },
    "output": {
      "data": {
        "type": "list[dict]",
        "description": "A list of dictionaries, where each dictionary represents a row in the CSV."
      }
    },
    "description": "Reads a CSV file and returns its data as a list of dictionaries. (Alias for parse_csv_tool)",
    "keywords": ["read", "csv", "file", "data", "spreadsheet"],
    "meta": {
      "usage_examples": ["Read data from 'input_data.csv'."],
      "related_tools": ["parse_csv_tool", "write_csv_tool"]
    }
  },
  {
    "name": "read_excel_file_tool",
    "category": "File Operations",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["excel parsing", "data import", "spreadsheet reading", "xlsx"],
    "input": {
      "file_path": {
        "type": "str",
        "description": "The path to the Excel file (.xls or .xlsx)."
      }
    },
    "output": {
      "data": {
        "type": "list[dict]",
        "description": "A list of dictionaries, where each dictionary represents a row from the first sheet (or a specified sheet). Sheet content might be structured per sheet."
      },
      "sheet_names": {
        "type": "list[str]",
        "description": "A list of sheet names within the Excel file."
      }
    },
    "description": "Reads an Excel file and returns its data and sheet names.",
    "keywords": ["read", "excel", "file", "data", "spreadsheet", "sheet"],
    "meta": {
      "usage_examples": ["Read data from the 'Sheet1' of 'financials.xlsx'."],
      "related_tools": ["parse_csv_tool", "generate_excel_report_tool"]
    }
  },
  {
    "name": "create_calendar_event_tool",
    "category": "Productivity",
    "version": "1.1",
    "author": "ToolmateAI",
    "tags": ["calendar management", "event creation", "scheduling", "meeting planning"],
    "input": {
      "title": {
        "type": "str",
        "description": "The title of the calendar event."
      },
      "date": {
        "type": "str",
        "description": "The date of the event (e.g., 'YYYY-MM-DD')."
      },
      "time": {
        "type": "str",
        "description": "The start time of the event (e.g., 'HH:MM')."
      },
      "attendees": {
        "type": "list[str]",
        "description": "Optional: A list of email addresses of attendees to invite."
      },
      "location": {
        "type": "str",
        "description": "Optional: The location of the event."
      }
    },
    "output": {
      "event_id": {
        "type": "str",
        "description": "An identifier for the created calendar event."
      }
    },
    "description": "Creates a calendar event with title, date, time, attendees, and location. (Alias for schedule_event_tool with potentially more direct calendar integration).",
    "keywords": ["create", "calendar", "event", "invite", "meeting"],
    "meta": {
      "usage_examples": ["Create a calendar event for 'Doctor's Appointment' on '2024-08-10' at '09:00 AM' and invite 'self@example.com'."],
      "related_tools": ["schedule_event_tool", "meeting_scheduler_tool", "generate_calendar_ics_tool"]
    }
  },
  {
    "name": "overdue_task_notifier_tool",
    "category": "Productivity",
    "version": "1.0",
    "author": "ToolmateAI",
    "tags": ["task management", "notification system", "deadline reminder", "automation"],
    "input": {
      "tasks": {
        "type": "list[dict]",
        "description": "A list of task dictionaries, each expected to have 'name', 'deadline' (datetime string), and 'responsible_person' (email or contact)."
      }
    },
    "output": {
      "notified": {
        "type": "list[str]",
        "description": "A list of identifiers or confirmation messages for notifications sent for overdue tasks."
      }
    },
    "description": "Identifies overdue tasks from a list and notifies the responsible people via email, SMS, or other channels.",
    "keywords": ["overdue", "task", "notify", "responsible", "reminder", "deadline", "alert", "late", "tasks", "notification"],
    "meta": {
      "usage_examples": ["Check the project task list for overdue items and send email reminders to the assignees."],
      "related_tools": ["deadline_reminder_tool", "todo_list_tool", "send_email_tool", "send_sms_tool"]
    }
  }
] 